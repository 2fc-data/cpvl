{"ast":null,"code":"import _objectSpread from \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n// src/index.ts\nimport download from \"downloadjs\";\nimport { useState } from \"react\";\n\n// src/QrcodeCanvas.tsx\nimport qrcodeGenerator from \"qrcode-generator\";\nimport { useEffect, useRef } from \"react\";\n\n// src/helpers.ts\nfunction colorHexToRGB(hex) {\n  hex = hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (_, r, g, b) => r + r + g + g + b + b);\n  const result = /([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16)\n  } : {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n}\nfunction colorRGBtoHex(_ref) {\n  let {\n    r,\n    g,\n    b\n  } = _ref;\n  return \"#\" + (1 << 24 | r << 16 | g << 8 | b).toString(16).slice(1);\n}\nfunction colorGradient(color, level) {\n  const rgb = colorHexToRGB(color);\n  for (let k in rgb) {\n    rgb[k] += level;\n    if (rgb[k] > 255) rgb[k] = 255;\n    if (rgb[k] < 0) rgb[k] = 0;\n  }\n  return colorRGBtoHex(rgb);\n}\nfunction getShadeColor(colorBase) {\n  const {\n    r,\n    g,\n    b\n  } = colorHexToRGB(colorBase);\n  const max = Math.min(r, g, b);\n  const random = getRandomInt(0, max);\n  return colorRGBtoHex({\n    r: r - random,\n    g: g - random,\n    b: b - random\n  });\n}\nfunction colorLevel(color) {\n  const sum = Object.values(colorHexToRGB(color)).reduce((t, c) => t + c, 0);\n  return sum > 510 ? \"light\" : sum > 255 ? \"medium\" : \"dark\";\n}\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction getRandomColor(colorBase) {\n  const level = colorLevel(colorBase);\n  const min = level === \"dark\" ? 0 : level === \"medium\" ? 63 : 127;\n  const max = level === \"dark\" ? 127 : level === \"medium\" ? 191 : 255;\n  return colorRGBtoHex({\n    r: getRandomInt(min, max),\n    g: getRandomInt(min, max),\n    b: getRandomInt(min, max)\n  });\n}\nfunction qrCodePartNormalize(defaultReturn, part) {\n  return part && typeof part === \"object\" && \"eyes\" in part && \"body\" in part ? part : {\n    eyes: part != null ? part : defaultReturn,\n    body: part != null ? part : defaultReturn\n  };\n}\nfunction qrCodeImageNormalize(imageSet) {\n  if (imageSet && typeof imageSet === \"object\") return imageSet;\n  if (typeof imageSet === \"string\") return {\n    src: imageSet\n  };\n  return null;\n}\nfunction qrCodeRadiusNormalize(radius) {\n  return typeof radius === \"number\" || !radius ? {\n    top_left: radius != null ? radius : 0,\n    top_right: radius != null ? radius : 0,\n    bottom_left: radius != null ? radius : 0,\n    bottom_right: radius != null ? radius : 0\n  } : _objectSpread({\n    top_left: 0,\n    top_right: 0,\n    bottom_left: 0,\n    bottom_right: 0\n  }, radius);\n}\nfunction qrCodeStyleRadius(variant, moduleSize, modules, wrapped, row, col, key) {\n  const radius = moduleSize / 1.6;\n  switch (variant) {\n    case \"dots\":\n      return radius;\n    case \"rounded\":\n      return moduleSize / 2;\n    case \"circle\":\n      return {\n        top_left: !wrapped.col.before && !wrapped.row.before && wrapped.col.after && wrapped.row.after ? moduleSize * 1.35 : 0,\n        top_right: wrapped.col.before && !wrapped.row.before && !wrapped.col.after && wrapped.row.after ? moduleSize * 1.35 : 0,\n        bottom_left: !wrapped.col.before && wrapped.row.before && wrapped.col.after && !wrapped.row.after ? moduleSize * 1.35 : 0,\n        bottom_right: wrapped.col.before && wrapped.row.before && !wrapped.col.after && !wrapped.row.after ? moduleSize * 1.35 : 0\n      };\n    case \"fluid\":\n      return {\n        top_right: !wrapped.col.after && !wrapped.row.before ? radius : 0,\n        top_left: !wrapped.col.before && !wrapped.row.before ? radius : 0,\n        bottom_right: !wrapped.col.after && !wrapped.row.after ? radius : 0,\n        bottom_left: !wrapped.col.before && !wrapped.row.after ? radius : 0\n      };\n    case \"reverse\":\n      return {\n        top_right: wrapped.col.after && wrapped.row.before ? radius : 0,\n        top_left: wrapped.col.before && wrapped.row.before ? radius : 0,\n        bottom_right: wrapped.col.after && wrapped.row.after ? radius : 0,\n        bottom_left: wrapped.col.before && wrapped.row.after ? radius : 0\n      };\n    case \"morse\":\n      return !wrapped.col.before && !wrapped.col.after ? radius : {\n        top_left: !wrapped.col.before ? radius : 0,\n        bottom_left: !wrapped.col.before ? radius : 0,\n        top_right: !wrapped.col.after ? radius : 0,\n        bottom_right: !wrapped.col.after ? radius : 0\n      };\n    case \"shower\":\n      return !wrapped.row.before && !wrapped.row.after ? radius : {\n        top_left: !wrapped.row.before ? radius : 0,\n        top_right: !wrapped.row.before ? radius : 0,\n        bottom_left: !wrapped.row.after ? radius : 0,\n        bottom_right: !wrapped.row.after ? radius : 0\n      };\n    case \"gravity\":\n      const half = Math.floor(modules / 2);\n      return {\n        top_right: !wrapped.col.after && !wrapped.row.before && !(row > half && col < half) ? radius : 0,\n        top_left: !wrapped.col.before && !wrapped.row.before && !(row > half && col > half) ? radius : 0,\n        bottom_right: !wrapped.col.after && !wrapped.row.after && !(row < half && col < half) ? radius : 0,\n        bottom_left: !wrapped.col.before && !wrapped.row.after && !(row < half && col > half) ? radius : 0\n      };\n    case \"italic\":\n      return {\n        top_right: 0,\n        top_left: !wrapped.col.before && !wrapped.row.before ? key === \"eyes\" ? moduleSize * 1.2 : radius : 0,\n        bottom_right: !wrapped.col.after && !wrapped.row.after ? key === \"eyes\" ? moduleSize * 1.2 : radius : 0,\n        bottom_left: 0\n      };\n    case \"inclined\":\n      return {\n        top_right: !wrapped.col.after && !wrapped.row.before ? key === \"eyes\" ? moduleSize * 1.2 : radius : 0,\n        top_left: 0,\n        bottom_right: 0,\n        bottom_left: !wrapped.col.before && !wrapped.row.after ? key === \"eyes\" ? moduleSize * 1.2 : radius : 0\n      };\n    default:\n      return 0;\n  }\n}\nfunction getColor(color, effect, col, row) {\n  switch (effect) {\n    case \"gradient-dark-vertical\":\n      return colorGradient(color, row * -3);\n    case \"gradient-dark-horizontal\":\n      return colorGradient(color, col * -3);\n    case \"gradient-dark-diagonal\":\n      return colorGradient(color, (col + row) * -2);\n    case \"gradient-light-vertical\":\n      return colorGradient(color, row * 3);\n    case \"gradient-light-horizontal\":\n      return colorGradient(color, col * 3);\n    case \"gradient-light-diagonal\":\n      return colorGradient(color, (col + row) * 2);\n    case \"shades\":\n      return getShadeColor(color);\n    case \"colored\":\n      return getRandomColor(color);\n    default:\n      return color;\n  }\n}\nasync function loadImageAsBase64(src) {\n  const response = await fetch(src);\n  const blob = await response.blob();\n  return new Promise(resolve => {\n    const reader = new FileReader();\n    reader.onloadend = () => resolve(reader.result);\n    reader.readAsDataURL(blob);\n  });\n}\nfunction qrcodeData(props, modules) {\n  var _a, _b, _c;\n  const margin = Math.floor((_a = props.margin) != null ? _a : 0);\n  const padding = Math.floor((_b = props.padding) != null ? _b : 0);\n  const space = (margin + padding) * 2;\n  const moduleSize = Math.floor(((_c = props.size) != null ? _c : modules * 10) / modules);\n  const qrcodeSize = modules * moduleSize;\n  const moduleEyeStart = 7;\n  const moduleEyeEnd = modules - moduleEyeStart - 1;\n  const variant = qrCodePartNormalize(\"standard\", props.variant);\n  const color = qrCodePartNormalize(\"#000\", props.color);\n  const colorEffect = qrCodePartNormalize(\"none\", props.colorEffect);\n  const imagem = qrCodeImageNormalize(props.image);\n  return {\n    margin,\n    padding,\n    space,\n    moduleSize,\n    qrcodeSize,\n    moduleEyeStart,\n    moduleEyeEnd,\n    variant,\n    color,\n    colorEffect,\n    imagem\n  };\n}\n\n// src/rectangleCanvas.ts\nfunction rectangleCanvas(context, props) {\n  const radius = qrCodeRadiusNormalize(props.radius);\n  context.beginPath();\n  context.moveTo(props.positionX + radius.top_left, props.positionY);\n  context.lineTo(props.positionX + props.width - radius.top_right, props.positionY);\n  context.quadraticCurveTo(props.positionX + props.width, props.positionY, props.positionX + props.width, props.positionY + radius.top_right);\n  context.lineTo(props.positionX + props.width, props.positionY + props.height - radius.bottom_right);\n  context.quadraticCurveTo(props.positionX + props.width, props.positionY + props.height, props.positionX + props.width - radius.bottom_right, props.positionY + props.height);\n  context.lineTo(props.positionX + radius.bottom_left, props.positionY + props.height);\n  context.quadraticCurveTo(props.positionX, props.positionY + props.height, props.positionX, props.positionY + props.height - radius.bottom_left);\n  context.lineTo(props.positionX, props.positionY + radius.top_left);\n  context.quadraticCurveTo(props.positionX, props.positionY, props.positionX + radius.top_left, props.positionY);\n  if (props.fill) {\n    context.fillStyle = props.fill;\n    context.fill();\n  }\n  if (props.stroke) {\n    context.strokeStyle = props.stroke;\n    context.stroke();\n  }\n  context.closePath();\n}\n\n// src/QrcodeCanvas.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction QrcodeCanvas(props) {\n  var _a, _b, _c;\n  const canvas = useRef(null);\n  const qrcode = qrcodeGenerator((_a = props.modules) != null ? _a : 0, (_b = props.level) != null ? _b : props.image ? \"H\" : \"M\");\n  qrcode.addData((_c = props.value) != null ? _c : \"\", props.mode);\n  qrcode.make();\n  const modules = qrcode.getModuleCount();\n  const {\n    margin,\n    padding,\n    space,\n    moduleSize,\n    qrcodeSize,\n    moduleEyeStart,\n    moduleEyeEnd,\n    variant,\n    color,\n    colorEffect,\n    imagem\n  } = qrcodeData(props, modules);\n  useEffect(() => {\n    var _a2, _b2;\n    if (!canvas.current) return;\n    const context = canvas.current.getContext(\"2d\");\n    if (!context) return;\n    context.clearRect(0, 0, space + qrcodeSize, space + qrcodeSize);\n    rectangleCanvas(context, {\n      height: padding * 2 + qrcodeSize,\n      width: padding * 2 + qrcodeSize,\n      positionX: margin,\n      positionY: margin,\n      fill: (_a2 = props.bgColor) != null ? _a2 : \"#FFF\",\n      radius: props.bgRounded ? 10 : void 0\n    });\n    for (let row = 0; row < modules; row++) {\n      for (let col = 0; col < modules; col++) {\n        if (!qrcode.isDark(row, col)) continue;\n        let key = col < moduleEyeStart && row < moduleEyeStart || col < moduleEyeStart && row > moduleEyeEnd || col > moduleEyeEnd && row < moduleEyeStart ? \"eyes\" : \"body\";\n        let changer = {\n          stroke: key === \"body\" && props.divider ? (_b2 = props.bgColor) != null ? _b2 : \"#FFF\" : null\n        };\n        const wrapped = {\n          row: {\n            before: row > 0 ? qrcode.isDark(row - 1, col) : false,\n            after: row < modules - 1 ? qrcode.isDark(row + 1, col) : false\n          },\n          col: {\n            before: col > 0 ? qrcode.isDark(row, col - 1) : false,\n            after: col < modules - 1 ? qrcode.isDark(row, col + 1) : false\n          }\n        };\n        changer.radius = qrCodeStyleRadius(variant[key], moduleSize, modules, wrapped, row, col, key);\n        rectangleCanvas(context, _objectSpread({\n          positionX: col * moduleSize + margin + padding,\n          positionY: row * moduleSize + margin + padding,\n          height: moduleSize,\n          width: moduleSize,\n          fill: getColor(color[key], colorEffect[key], col, row)\n        }, changer));\n      }\n    }\n    if (imagem) addImage(context, imagem, modules, moduleSize, margin, padding, props.bgColor);\n    if (typeof props.onReady === \"function\") {\n      props.onReady(canvas.current);\n    }\n  }, [props]);\n  return /* @__PURE__ */jsx(\"canvas\", _objectSpread(_objectSpread({}, props.internalProps), {}, {\n    ref: canvas,\n    width: qrcodeSize + space,\n    height: qrcodeSize + space,\n    children: props.children\n  }));\n}\nfunction addImage(context, imageSet, modules, moduleSize, margin, padding, bgColor) {\n  const image = new Image();\n  image.src = imageSet.src;\n  image.onload = () => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const size = Math.floor(modules * moduleSize / 5);\n    const position = size * 2 + margin + padding;\n    if (!imageSet.overlap) rectangleCanvas(context, {\n      height: (_a = imageSet.height) != null ? _a : size,\n      width: (_b = imageSet.width) != null ? _b : size,\n      positionX: (_c = imageSet.positionX) != null ? _c : position,\n      positionY: (_d = imageSet.positionY) != null ? _d : position,\n      fill: bgColor != null ? bgColor : \"#FFF\"\n    });\n    context.drawImage(image, (_e = imageSet.positionX) != null ? _e : position, (_f = imageSet.positionY) != null ? _f : position, (_g = imageSet.width) != null ? _g : size, (_h = imageSet.height) != null ? _h : size);\n  };\n}\nvar QrcodeCanvas_default = QrcodeCanvas;\n\n// src/QrcodeSVG.tsx\nimport qrcodeGenerator2 from \"qrcode-generator\";\nimport React, { useEffect as useEffect2, useRef as useRef2 } from \"react\";\n\n// src/rectanglePath.ts\nfunction rectanglePath(props) {\n  const radius = qrCodeRadiusNormalize(props.radius);\n  return \"\\n      M \".concat(props.positionX + radius.top_left, \",\").concat(props.positionY, \"\\n      H \").concat(props.positionX + props.width - radius.top_right, \"\\n      A \").concat(radius.top_right, \",\").concat(radius.top_right, \" 0 0 1 \").concat(props.positionX + props.width, \",\").concat(props.positionY + radius.top_right, \"\\n      V \").concat(props.positionY + props.height - radius.bottom_right, \"\\n      A \").concat(radius.bottom_right, \",\").concat(radius.bottom_right, \" 0 0 1 \").concat(props.positionX + props.width - radius.bottom_right, \",\").concat(props.positionY + props.height, \"\\n      H \").concat(props.positionX + radius.bottom_left, \"\\n      A \").concat(radius.bottom_left, \",\").concat(radius.bottom_left, \" 0 0 1 \").concat(props.positionX, \",\").concat(props.positionY + props.height - radius.bottom_left, \"\\n      V \").concat(props.positionY + radius.top_left, \"\\n      A \").concat(radius.top_left, \",\").concat(radius.top_left, \" 0 0 1 \").concat(props.positionX + radius.top_left, \",\").concat(props.positionY, \"\\n      Z\\n  \").trim().replace(/\\s+/g, \" \");\n}\n\n// src/QrcodeSVG.tsx\nimport { Fragment, jsx as jsx2, jsxs } from \"react/jsx-runtime\";\nfunction QrcodeSvg(props) {\n  var _a, _b, _c, _d, _e;\n  const SVG = useRef2(null);\n  const qrcode = qrcodeGenerator2((_a = props.modules) != null ? _a : 0, (_b = props.level) != null ? _b : props.image ? \"H\" : \"M\");\n  qrcode.addData((_c = props.value) != null ? _c : \"\", props.mode);\n  qrcode.make();\n  const modules = qrcode.getModuleCount();\n  const {\n    margin,\n    padding,\n    space,\n    moduleSize,\n    qrcodeSize,\n    moduleEyeStart,\n    moduleEyeEnd,\n    variant,\n    color,\n    colorEffect,\n    imagem\n  } = qrcodeData(props, modules);\n  const rects = [];\n  for (let row = 0; row < modules; row++) {\n    for (let col = 0; col < modules; col++) {\n      if (!qrcode.isDark(row, col)) continue;\n      const key = col < 7 && row < 7 || col < 7 && row >= modules - 7 || col >= modules - 7 && row < 7 ? \"eyes\" : \"body\";\n      const x = col * moduleSize + margin + padding;\n      const y = row * moduleSize + margin + padding;\n      const c = getColor(color[key], colorEffect[key], col, row);\n      const wrapped = {\n        row: {\n          before: row > 0 ? qrcode.isDark(row - 1, col) : false,\n          after: row < modules - 1 ? qrcode.isDark(row + 1, col) : false\n        },\n        col: {\n          before: col > 0 ? qrcode.isDark(row, col - 1) : false,\n          after: col < modules - 1 ? qrcode.isDark(row, col + 1) : false\n        }\n      };\n      rects.push(/* @__PURE__ */jsx2(\"path\", {\n        d: rectanglePath({\n          height: moduleSize,\n          width: moduleSize,\n          positionX: x,\n          positionY: y,\n          radius: qrCodeStyleRadius(variant[key], moduleSize, modules, wrapped, row, col, key)\n        }),\n        fill: c,\n        stroke: props.divider && key === \"body\" ? (_d = props.bgColor) != null ? _d : \"#FFF\" : void 0\n      }, \"\".concat(row, \"-\").concat(col)));\n    }\n  }\n  useEffect2(() => {\n    if (typeof props.onReady === \"function\" && SVG.current) {\n      props.onReady(SVG.current);\n    }\n  }, [props, SVG]);\n  return /* @__PURE__ */jsxs(\"svg\", _objectSpread(_objectSpread({\n    shapeRendering: \"geometricPrecision\"\n  }, props.internalProps), {}, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 \".concat(qrcodeSize + space, \" \").concat(qrcodeSize + space),\n    width: qrcodeSize + space,\n    height: qrcodeSize + space,\n    ref: SVG,\n    children: [/* @__PURE__ */jsx2(\"rect\", {\n      x: margin,\n      y: margin,\n      width: qrcodeSize + padding * 2,\n      height: qrcodeSize + padding * 2,\n      fill: (_e = props.bgColor) != null ? _e : \"#FFF\",\n      rx: props.bgRounded ? 10 : 0\n    }), rects, /* @__PURE__ */jsx2(Image2, {\n      imageSet: imagem,\n      modules,\n      moduleSize,\n      margin,\n      padding,\n      bgColor: props.bgColor\n    })]\n  }));\n}\nfunction Image2(_ref2) {\n  let {\n    imageSet,\n    modules,\n    moduleSize,\n    margin,\n    padding,\n    bgColor\n  } = _ref2;\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const size = Math.floor(modules * moduleSize / 5);\n  const position = size * 2 + margin + padding;\n  const [src, setSrc] = React.useState();\n  useEffect2(() => {\n    if (src || !imageSet) return;\n    loadImageAsBase64(imageSet.src).then(setSrc);\n  }, [imageSet, src]);\n  if (!src || !imageSet) return /* @__PURE__ */jsx2(Fragment, {});\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [imageSet.overlap ? /* @__PURE__ */jsx2(Fragment, {}) : /* @__PURE__ */jsx2(\"rect\", {\n      width: (_a = imageSet.width) != null ? _a : size,\n      height: (_b = imageSet.height) != null ? _b : size,\n      x: (_c = imageSet.positionX) != null ? _c : position,\n      y: (_d = imageSet.positionY) != null ? _d : position,\n      fill: bgColor != null ? bgColor : \"#FFF\"\n    }), /* @__PURE__ */jsx2(\"image\", {\n      href: src,\n      width: (_e = imageSet.width) != null ? _e : size,\n      height: (_f = imageSet.height) != null ? _f : size,\n      x: (_g = imageSet.positionX) != null ? _g : position,\n      y: (_h = imageSet.positionY) != null ? _h : position,\n      preserveAspectRatio: \"xMidYMid meet\"\n    })]\n  });\n}\nvar QrcodeSVG_default = QrcodeSvg;\n\n// src/index.ts\nfunction useQrcodeDownload() {\n  let suffix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  const [qrcode, setQrcode] = useState(null);\n  const isCanvas = qrcode instanceof HTMLCanvasElement;\n  return [setQrcode, fileName => {\n    if (qrcode) download(isCanvas ? qrcode.toDataURL(\"image/png\") : new Blob([qrcode.outerHTML], {\n      type: \"image/svg+xml;charset=utf-8\"\n    }), fileName + suffix + (isCanvas ? \".png\" : \".svg\"), isCanvas ? \"image/png\" : \"image/svg+xml\");\n  }, qrcode !== null];\n}\nexport { QrcodeCanvas_default as QrcodeCanvas, QrcodeSVG_default as QrcodeSVG, useQrcodeDownload };","map":{"version":3,"names":["download","useState","qrcodeGenerator","useEffect","useRef","colorHexToRGB","hex","replace","_","r","g","b","result","exec","parseInt","colorRGBtoHex","_ref","toString","slice","colorGradient","color","level","rgb","k","getShadeColor","colorBase","max","Math","min","random","getRandomInt","colorLevel","sum","Object","values","reduce","t","c","floor","getRandomColor","qrCodePartNormalize","defaultReturn","part","eyes","body","qrCodeImageNormalize","imageSet","src","qrCodeRadiusNormalize","radius","top_left","top_right","bottom_left","bottom_right","_objectSpread","qrCodeStyleRadius","variant","moduleSize","modules","wrapped","row","col","key","before","after","half","getColor","effect","loadImageAsBase64","response","fetch","blob","Promise","resolve","reader","FileReader","onloadend","readAsDataURL","qrcodeData","props","_a","_b","_c","margin","padding","space","size","qrcodeSize","moduleEyeStart","moduleEyeEnd","colorEffect","imagem","image","rectangleCanvas","context","beginPath","moveTo","positionX","positionY","lineTo","width","quadraticCurveTo","height","fill","fillStyle","stroke","strokeStyle","closePath","jsx","QrcodeCanvas","canvas","qrcode","addData","value","mode","make","getModuleCount","_a2","_b2","current","getContext","clearRect","bgColor","bgRounded","isDark","changer","divider","addImage","onReady","internalProps","ref","children","Image","onload","_d","_e","_f","_g","_h","position","overlap","drawImage","QrcodeCanvas_default","qrcodeGenerator2","React","useEffect2","useRef2","rectanglePath","concat","trim","Fragment","jsx2","jsxs","QrcodeSvg","SVG","rects","x","y","push","d","shapeRendering","xmlns","viewBox","rx","Image2","_ref2","setSrc","then","href","preserveAspectRatio","QrcodeSVG_default","useQrcodeDownload","suffix","arguments","length","undefined","setQrcode","isCanvas","HTMLCanvasElement","fileName","toDataURL","Blob","outerHTML","type"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/react-qrcode-pretty/src/index.ts","/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/react-qrcode-pretty/src/QrcodeCanvas.tsx","/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/react-qrcode-pretty/src/helpers.ts","/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/react-qrcode-pretty/src/rectangleCanvas.ts","/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/react-qrcode-pretty/src/QrcodeSVG.tsx","/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/react-qrcode-pretty/src/rectanglePath.ts"],"sourcesContent":["import download from 'downloadjs';\r\nimport { useState } from 'react';\r\n\r\nexport { default as QrcodeCanvas } from './QrcodeCanvas';\r\nexport { default as QrcodeSVG } from './QrcodeSVG';\r\n\r\n/**\r\n * React Hook to download Qrcode Type\r\n * @returns [ setQrcode, download, isReady ]\r\n */\r\nexport type UseQrcodeDownload = [\r\n  (QrcodeRef: HTMLCanvasElement | SVGSVGElement) => void,\r\n  (fileName: string) => void,\r\n  boolean\r\n];\r\n\r\n/**\r\n * React Hook to download Qrcode Canvas (PNG) or SVG\r\n * @param [suffix=''] add a suffix to the file name to download\r\n * @returns [ setQrcode, download, isReady ]\r\n */\r\nexport function useQrcodeDownload(suffix: string = ''): UseQrcodeDownload {\r\n\r\n  const [qrcode, setQrcode] = useState<HTMLCanvasElement | SVGSVGElement | null>(null);\r\n  const isCanvas: boolean = qrcode instanceof HTMLCanvasElement;\r\n\r\n  return [\r\n    setQrcode,\r\n    (fileName: string) => {\r\n      if (qrcode) download(\r\n        isCanvas ? (qrcode as HTMLCanvasElement).toDataURL('image/png') : new Blob([qrcode.outerHTML], { type: \"image/svg+xml;charset=utf-8\" }),\r\n        fileName + suffix + (isCanvas ? '.png' : '.svg'),\r\n        isCanvas ? 'image/png' : 'image/svg+xml'\r\n      )\r\n    },\r\n    qrcode !== null\r\n  ];\r\n\r\n}\r\n\r\nexport type {\r\n  QrcodeColor,\r\n  QrcodeColorEffect,\r\n  QrcodeElement,\r\n  QrcodeFormat,\r\n  QrcodeImageSettings,\r\n  QrcodePart,\r\n  QrcodePartOption,\r\n  QrcodeProps,\r\n  QrcodeRadius,\r\n  QrcodeRadiusEdge,\r\n  QrcodeRectangleProps,\r\n  QrcodeStyle,\r\n  QrcodeWrapped\r\n} from './types';\r\n\r\n","import qrcodeGenerator from 'qrcode-generator';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nimport canvasRectangle from './rectangleCanvas';\r\n\r\nimport {\r\n  getColor,\r\n  qrcodeData,\r\n  qrCodeStyleRadius\r\n} from './helpers';\r\n\r\nimport type {\r\n  QrcodeImageSettings,\r\n  QrcodePartOption,\r\n  QrcodeProps,\r\n  QrcodeRectangleProps,\r\n  QrcodeWrapped\r\n} from './types';\r\n\r\n/**\r\n * Qrcode React Component\r\n * @author Guilherme Neves <guilhermeasn@yahoo.com.br>\r\n */\r\nexport function QrcodeCanvas(props: QrcodeProps<'canvas'>) {\r\n\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n\r\n  const qrcode: QRCode = qrcodeGenerator(props.modules ?? 0, props.level ?? (props.image ? 'H' : 'M'));\r\n  qrcode.addData(props.value ?? '', props.mode);\r\n  qrcode.make();\r\n\r\n  const modules: number = qrcode.getModuleCount();\r\n\r\n  const {\r\n    margin, padding, space, moduleSize,\r\n    qrcodeSize, moduleEyeStart, moduleEyeEnd,\r\n    variant, color, colorEffect, imagem\r\n  } = qrcodeData(props, modules);\r\n\r\n  useEffect(() => {\r\n\r\n    if (!canvas.current) return;\r\n\r\n    const context = canvas.current.getContext('2d');\r\n    if (!context) return;\r\n\r\n    context.clearRect(0, 0, space + qrcodeSize, space + qrcodeSize);\r\n\r\n    canvasRectangle(context, {\r\n      height: padding * 2 + qrcodeSize,\r\n      width: padding * 2 + qrcodeSize,\r\n      positionX: margin,\r\n      positionY: margin,\r\n      fill: props.bgColor ?? '#FFF',\r\n      radius: props.bgRounded ? 10 : undefined\r\n    });\r\n\r\n    for (let row = 0; row < modules; row++) {\r\n\r\n      for (let col = 0; col < modules; col++) {\r\n\r\n        if (!qrcode.isDark(row, col)) continue;\r\n\r\n        let key: QrcodePartOption = (\r\n          (col < moduleEyeStart && row < moduleEyeStart) ||\r\n          (col < moduleEyeStart && row > moduleEyeEnd) ||\r\n          (col > moduleEyeEnd && row < moduleEyeStart)\r\n        ) ? 'eyes' : 'body';\r\n\r\n        let changer: Partial<QrcodeRectangleProps> = {\r\n          stroke: key === 'body' && props.divider ? (props.bgColor ?? '#FFF') : null\r\n        };\r\n\r\n        const wrapped: QrcodeWrapped = {\r\n          row: {\r\n            before: row > 0 ? qrcode.isDark(row - 1, col) : false,\r\n            after: row < modules - 1 ? qrcode.isDark(row + 1, col) : false\r\n          },\r\n          col: {\r\n            before: col > 0 ? qrcode.isDark(row, col - 1) : false,\r\n            after: col < modules - 1 ? qrcode.isDark(row, col + 1) : false\r\n          }\r\n        };\r\n\r\n        changer.radius = qrCodeStyleRadius(\r\n          variant[key],\r\n          moduleSize,\r\n          modules,\r\n          wrapped,\r\n          row,\r\n          col,\r\n          key\r\n        );\r\n\r\n        canvasRectangle(context, {\r\n          positionX: col * moduleSize + margin + padding,\r\n          positionY: row * moduleSize + margin + padding,\r\n          height: moduleSize,\r\n          width: moduleSize,\r\n          fill: getColor(color[key], colorEffect[key], col, row),\r\n          ...changer\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (imagem) addImage(\r\n      context, imagem, modules,\r\n      moduleSize, margin, padding,\r\n      props.bgColor\r\n    );\r\n\r\n    if (typeof props.onReady === 'function') {\r\n      props.onReady(canvas.current);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [props]);\r\n\r\n  return <canvas\r\n    {...props.internalProps}\r\n    ref={canvas}\r\n    width={qrcodeSize + space}\r\n    height={qrcodeSize + space}\r\n  >{props.children}</canvas>;\r\n\r\n}\r\n\r\nfunction addImage(context: CanvasRenderingContext2D, imageSet: QrcodeImageSettings, modules: number, moduleSize: number, margin: number, padding: number, bgColor?: string) {\r\n  const image = new Image();\r\n  image.src = imageSet.src;\r\n  image.onload = () => {\r\n    const size = Math.floor(modules * moduleSize / 5);\r\n    const position = size * 2 + margin + padding;\r\n    if (!imageSet.overlap) canvasRectangle(context, {\r\n      height: imageSet.height ?? size,\r\n      width: imageSet.width ?? size,\r\n      positionX: imageSet.positionX ?? position,\r\n      positionY: imageSet.positionY ?? position,\r\n      fill: bgColor ?? '#FFF',\r\n    });\r\n    context.drawImage(\r\n      image,\r\n      imageSet.positionX ?? position,\r\n      imageSet.positionY ?? position,\r\n      imageSet.width ?? size,\r\n      imageSet.height ?? size\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrcodeCanvas;\r\n","import { QrcodeColor, QrcodeColorEffect, QrcodeImageSettings, QrcodePart, QrcodePartOption, QrcodeProps, QrcodeRadius, QrcodeRadiusEdge, QrcodeStyle, QrcodeWrapped } from \"./types\";\r\n\r\ntype ColorRGB = {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n}\r\n\r\ntype ColorLevel = (\r\n  | 'light'\r\n  | 'medium'\r\n  | 'dark'\r\n);\r\n\r\nfunction colorHexToRGB(hex: string): ColorRGB {\r\n\r\n  hex = hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i, (_, r, g, b) => (\r\n    r + r + g + g + b + b\r\n  ));\r\n\r\n  const result = /([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : { r: 0, g: 0, b: 0 };\r\n\r\n}\r\n\r\nfunction colorRGBtoHex({ r, g, b }: ColorRGB): string {\r\n  return \"#\" + ((1 << 24) | (r << 16) | (g << 8) | b).toString(16).slice(1);\r\n}\r\n\r\nfunction colorGradient(color: string, level: number): string {\r\n\r\n  const rgb = colorHexToRGB(color);\r\n\r\n  for (let k in rgb) {\r\n    rgb[k as keyof ColorRGB] += level;\r\n    if (rgb[k as keyof ColorRGB] > 255) rgb[k as keyof ColorRGB] = 255;\r\n    if (rgb[k as keyof ColorRGB] < 0) rgb[k as keyof ColorRGB] = 0;\r\n  }\r\n\r\n  return colorRGBtoHex(rgb);\r\n\r\n}\r\n\r\nfunction getShadeColor(colorBase: string): string {\r\n  const { r, g, b } = colorHexToRGB(colorBase);\r\n  const max = Math.min(r, g, b);\r\n  const random = getRandomInt(0, max);\r\n  return colorRGBtoHex({ r: r - random, g: g - random, b: b - random });\r\n}\r\n\r\nfunction colorLevel(color: string): ColorLevel {\r\n  const sum: number = Object.values(colorHexToRGB(color)).reduce((t, c) => t + c, 0);\r\n  return sum > 510 ? 'light' : sum > 255 ? 'medium' : 'dark';\r\n}\r\n\r\nfunction getRandomInt(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function getRandomColor(colorBase: string): string {\r\n  const level = colorLevel(colorBase);\r\n  const min: number = level === 'dark' ? 0 : level === 'medium' ? 63 : 127;\r\n  const max: number = level === 'dark' ? 127 : level === 'medium' ? 191 : 255;\r\n  return colorRGBtoHex({ r: getRandomInt(min, max), g: getRandomInt(min, max), b: getRandomInt(min, max) });\r\n}\r\n\r\nfunction qrCodePartNormalize<T>(defaultReturn: T, part: undefined | null | T | QrcodePart<T>): QrcodePart<T> {\r\n\r\n  return (part\r\n    && typeof part === 'object'\r\n    && 'eyes' in part\r\n    && 'body' in part\r\n  ) ? part : {\r\n    eyes: part ?? defaultReturn,\r\n    body: part ?? defaultReturn\r\n  };\r\n\r\n}\r\n\r\nfunction qrCodeImageNormalize(imageSet?: string | QrcodeImageSettings): QrcodeImageSettings | null {\r\n  if (imageSet && typeof imageSet === 'object') return imageSet;\r\n  if (typeof imageSet === 'string') return { src: imageSet };\r\n  return null;\r\n}\r\n\r\nexport function qrCodeRadiusNormalize(radius?: QrcodeRadius): Required<QrcodeRadiusEdge> {\r\n  return (typeof radius === 'number' || !radius) ? {\r\n    top_left: radius ?? 0, top_right: radius ?? 0,\r\n    bottom_left: radius ?? 0, bottom_right: radius ?? 0\r\n  } : {\r\n    top_left: 0, top_right: 0,\r\n    bottom_left: 0, bottom_right: 0,\r\n    ...radius\r\n  }\r\n}\r\n\r\nexport function qrCodeStyleRadius(\r\n  variant: QrcodeStyle,\r\n  moduleSize: number,\r\n  modules: number,\r\n  wrapped: QrcodeWrapped,\r\n  row: number,\r\n  col: number,\r\n  key: QrcodePartOption\r\n): QrcodeRadius {\r\n\r\n  const radius = moduleSize / 1.6;\r\n\r\n  switch (variant) {\r\n\r\n    case 'dots': return radius;\r\n\r\n    case 'rounded': return moduleSize / 2;\r\n\r\n    case 'circle': return {\r\n      top_left: !wrapped.col.before && !wrapped.row.before && wrapped.col.after && wrapped.row.after ? moduleSize * 1.35 : 0,\r\n      top_right: wrapped.col.before && !wrapped.row.before && !wrapped.col.after && wrapped.row.after ? moduleSize * 1.35 : 0,\r\n      bottom_left: !wrapped.col.before && wrapped.row.before && wrapped.col.after && !wrapped.row.after ? moduleSize * 1.35 : 0,\r\n      bottom_right: wrapped.col.before && wrapped.row.before && !wrapped.col.after && !wrapped.row.after ? moduleSize * 1.35 : 0\r\n    };\r\n\r\n    case 'fluid': return {\r\n      top_right: !wrapped.col.after && !wrapped.row.before ? radius : 0,\r\n      top_left: !wrapped.col.before && !wrapped.row.before ? radius : 0,\r\n      bottom_right: !wrapped.col.after && !wrapped.row.after ? radius : 0,\r\n      bottom_left: !wrapped.col.before && !wrapped.row.after ? radius : 0\r\n    };\r\n\r\n    case 'reverse': return {\r\n      top_right: wrapped.col.after && wrapped.row.before ? radius : 0,\r\n      top_left: wrapped.col.before && wrapped.row.before ? radius : 0,\r\n      bottom_right: wrapped.col.after && wrapped.row.after ? radius : 0,\r\n      bottom_left: wrapped.col.before && wrapped.row.after ? radius : 0\r\n    };\r\n\r\n\r\n    case 'morse': return !wrapped.col.before && !wrapped.col.after ? radius : {\r\n      top_left: !wrapped.col.before ? radius : 0,\r\n      bottom_left: !wrapped.col.before ? radius : 0,\r\n      top_right: !wrapped.col.after ? radius : 0,\r\n      bottom_right: !wrapped.col.after ? radius : 0\r\n    };\r\n\r\n\r\n    case 'shower': return !wrapped.row.before && !wrapped.row.after ? radius : {\r\n      top_left: !wrapped.row.before ? radius : 0,\r\n      top_right: !wrapped.row.before ? radius : 0,\r\n      bottom_left: !wrapped.row.after ? radius : 0,\r\n      bottom_right: !wrapped.row.after ? radius : 0\r\n    };\r\n\r\n    case 'gravity':\r\n      const half = Math.floor(modules / 2);\r\n      return {\r\n        top_right: !wrapped.col.after && !wrapped.row.before && !(row > half && col < half) ? radius : 0,\r\n        top_left: !wrapped.col.before && !wrapped.row.before && !(row > half && col > half) ? radius : 0,\r\n        bottom_right: !wrapped.col.after && !wrapped.row.after && !(row < half && col < half) ? radius : 0,\r\n        bottom_left: !wrapped.col.before && !wrapped.row.after && !(row < half && col > half) ? radius : 0\r\n      };\r\n\r\n    case 'italic': return {\r\n      top_right: 0,\r\n      top_left: !wrapped.col.before && !wrapped.row.before ? (key === 'eyes' ? moduleSize * 1.2 : radius) : 0,\r\n      bottom_right: !wrapped.col.after && !wrapped.row.after ? (key === 'eyes' ? moduleSize * 1.2 : radius) : 0,\r\n      bottom_left: 0\r\n    }\r\n\r\n    case 'inclined': return {\r\n      top_right: !wrapped.col.after && !wrapped.row.before ? (key === 'eyes' ? moduleSize * 1.2 : radius) : 0,\r\n      top_left: 0,\r\n      bottom_right: 0,\r\n      bottom_left: !wrapped.col.before && !wrapped.row.after ? (key === 'eyes' ? moduleSize * 1.2 : radius) : 0\r\n    }\r\n\r\n    default: return 0;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport function getColor(color: QrcodeColor, effect: QrcodeColorEffect, col: number, row: number): QrcodeColor {\r\n\r\n  switch (effect) {\r\n\r\n    case 'gradient-dark-vertical': return colorGradient(color, row * -3);\r\n    case 'gradient-dark-horizontal': return colorGradient(color, col * -3);\r\n    case 'gradient-dark-diagonal': return colorGradient(color, (col + row) * -2);\r\n    case 'gradient-light-vertical': return colorGradient(color, row * 3);\r\n    case 'gradient-light-horizontal': return colorGradient(color, col * 3);\r\n    case 'gradient-light-diagonal': return colorGradient(color, (col + row) * 2);\r\n\r\n    case 'shades': return getShadeColor(color);\r\n    case 'colored': return getRandomColor(color);\r\n\r\n    default: return color;\r\n\r\n  }\r\n\r\n}\r\n\r\nexport async function loadImageAsBase64(src: string): Promise<string> {\r\n  const response = await fetch(src);\r\n  const blob = await response.blob();\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => resolve(reader.result as string);\r\n    reader.readAsDataURL(blob);\r\n  });\r\n}\r\n\r\nexport function qrcodeData(props : QrcodeProps<any>, modules: number) {\r\n\r\n  const margin: number = Math.floor(props.margin ?? 0);\r\n  const padding: number = Math.floor(props.padding ?? 0);\r\n  const space: number = (margin + padding) * 2;\r\n  const moduleSize: number = Math.floor((props.size ?? modules * 10) / modules);\r\n  const qrcodeSize: number = modules * moduleSize;\r\n  const moduleEyeStart: number = 7;\r\n  const moduleEyeEnd: number = modules - moduleEyeStart - 1;\r\n  const variant: QrcodePart<QrcodeStyle> = qrCodePartNormalize<QrcodeStyle>('standard', props.variant);\r\n  const color: QrcodePart<QrcodeColor> = qrCodePartNormalize<QrcodeColor>('#000', props.color);\r\n  const colorEffect: QrcodePart<QrcodeColorEffect> = qrCodePartNormalize<QrcodeColorEffect>('none', props.colorEffect);\r\n  const imagem: QrcodeImageSettings | null = qrCodeImageNormalize(props.image);\r\n \r\n  return {\r\n    margin, padding, space, moduleSize,\r\n    qrcodeSize, moduleEyeStart, moduleEyeEnd,\r\n    variant, color, colorEffect, imagem\r\n  }\r\n\r\n}\r\n","import { qrCodeRadiusNormalize } from \"./helpers\";\r\nimport type { QrcodeRectangleProps } from \"./types\";\r\n\r\nexport default function rectangleCanvas(context: CanvasRenderingContext2D, props: QrcodeRectangleProps) {\r\n\r\n  const radius = qrCodeRadiusNormalize(props.radius);\r\n\r\n  context.beginPath();\r\n\r\n  context.moveTo(props.positionX + radius.top_left, props.positionY);\r\n\r\n  context.lineTo(props.positionX + props.width - radius.top_right, props.positionY);\r\n  context.quadraticCurveTo(props.positionX + props.width, props.positionY, props.positionX + props.width, props.positionY + radius.top_right);\r\n\r\n  context.lineTo(props.positionX + props.width, props.positionY + props.height - radius.bottom_right);\r\n  context.quadraticCurveTo(props.positionX + props.width, props.positionY + props.height, props.positionX + props.width - radius.bottom_right, props.positionY + props.height);\r\n\r\n  context.lineTo(props.positionX + radius.bottom_left, props.positionY + props.height);\r\n  context.quadraticCurveTo(props.positionX, props.positionY + props.height, props.positionX, props.positionY + props.height - radius.bottom_left);\r\n\r\n  context.lineTo(props.positionX, props.positionY + radius.top_left);\r\n  context.quadraticCurveTo(props.positionX, props.positionY, props.positionX + radius.top_left, props.positionY);\r\n\r\n  if (props.fill) {\r\n    context.fillStyle = props.fill;\r\n    context.fill();\r\n  }\r\n\r\n  if (props.stroke) {\r\n    context.strokeStyle = props.stroke;\r\n    context.stroke();\r\n  }\r\n\r\n  context.closePath();\r\n\r\n}","import qrcodeGenerator from 'qrcode-generator';\r\nimport React, { JSX, useEffect, useRef } from 'react';\r\n\r\nimport rectanglePath from './rectanglePath';\r\n\r\nimport {\r\n  getColor,\r\n  loadImageAsBase64,\r\n  qrcodeData,\r\n  qrCodeStyleRadius\r\n} from './helpers';\r\n\r\nimport type {\r\n  QrcodeImageSettings,\r\n  QrcodePartOption,\r\n  QrcodeProps,\r\n  QrcodeWrapped\r\n} from './types';\r\n\r\n/**\r\n * Qrcode React Component\r\n * @author Guilherme Neves <guilhermeasn@yahoo.com.br>\r\n */\r\nexport function QrcodeSvg(props: QrcodeProps<'SVG'>) {\r\n\r\n  const SVG = useRef<SVGSVGElement>(null);\r\n\r\n  const qrcode: QRCode = qrcodeGenerator(props.modules ?? 0, props.level ?? (props.image ? 'H' : 'M'));\r\n  qrcode.addData(props.value ?? '', props.mode);\r\n  qrcode.make();\r\n\r\n  const modules: number = qrcode.getModuleCount();\r\n\r\n  const {\r\n    margin, padding, space, moduleSize,\r\n    qrcodeSize, moduleEyeStart, moduleEyeEnd,\r\n    variant, color, colorEffect, imagem\r\n  } = qrcodeData(props, modules);\r\n\r\n  const rects: JSX.Element[] = [];\r\n\r\n  for (let row = 0; row < modules; row++) {\r\n    for (let col = 0; col < modules; col++) {\r\n      if (!qrcode.isDark(row, col)) continue;\r\n\r\n      const key: QrcodePartOption = (\r\n        (col < 7 && row < 7) ||\r\n        (col < 7 && row >= modules - 7) ||\r\n        (col >= modules - 7 && row < 7)\r\n      ) ? 'eyes' : 'body';\r\n\r\n      const x = col * moduleSize + margin + padding;\r\n      const y = row * moduleSize + margin + padding;\r\n      const c = getColor(color[key], colorEffect[key], col, row);\r\n\r\n      const wrapped: QrcodeWrapped = {\r\n        row: {\r\n          before: row > 0 ? qrcode.isDark(row - 1, col) : false,\r\n          after: row < modules - 1 ? qrcode.isDark(row + 1, col) : false\r\n        },\r\n        col: {\r\n          before: col > 0 ? qrcode.isDark(row, col - 1) : false,\r\n          after: col < modules - 1 ? qrcode.isDark(row, col + 1) : false\r\n        }\r\n      };\r\n\r\n      rects.push(\r\n        <path\r\n          d={rectanglePath({\r\n            height: moduleSize,\r\n            width: moduleSize,\r\n            positionX: x,\r\n            positionY: y,\r\n            radius: qrCodeStyleRadius(\r\n              variant[key],\r\n              moduleSize,\r\n              modules,\r\n              wrapped,\r\n              row,\r\n              col,\r\n              key\r\n            )\r\n          })}\r\n          key={`${row}-${col}`}\r\n          fill={c}\r\n          stroke={props.divider && key === 'body' ? (props.bgColor ?? '#FFF') : undefined}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (typeof props.onReady === 'function' && SVG.current) {\r\n      props.onReady(SVG.current);\r\n    }\r\n  }, [props, SVG]);\r\n\r\n  return (\r\n    <svg\r\n      shapeRendering=\"geometricPrecision\"\r\n      {...props.internalProps}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox={`0 0 ${qrcodeSize + space} ${qrcodeSize + space}`}\r\n      width={qrcodeSize + space}\r\n      height={qrcodeSize + space}\r\n      ref={SVG}\r\n    >\r\n      <rect\r\n        x={margin}\r\n        y={margin}\r\n        width={qrcodeSize + padding * 2}\r\n        height={qrcodeSize + padding * 2}\r\n        fill={props.bgColor ?? '#FFF'}\r\n        rx={props.bgRounded ? 10 : 0}\r\n      />\r\n      {rects}\r\n      <Image\r\n        imageSet={imagem}\r\n        modules={modules}\r\n        moduleSize={moduleSize}\r\n        margin={margin}\r\n        padding={padding}\r\n        bgColor={props.bgColor}\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nfunction Image({\r\n  imageSet, modules, moduleSize,\r\n  margin, padding, bgColor\r\n} : {\r\n  imageSet: QrcodeImageSettings | null, modules: number, moduleSize: number,\r\n  margin: number, padding: number, bgColor?: string\r\n}) {\r\n\r\n  const size = Math.floor(modules * moduleSize / 5);\r\n  const position = size * 2 + margin + padding;\r\n\r\n  const [src, setSrc] = React.useState<string>();\r\n\r\n  useEffect(() => {\r\n    if (src || !imageSet) return;\r\n    loadImageAsBase64(imageSet.src).then(setSrc);\r\n  }, [imageSet, src]);\r\n\r\n  if (!src || !imageSet) return <></>;\r\n\r\n  return <>\r\n\r\n    {imageSet.overlap ? <></> : (\r\n      <rect\r\n        width={imageSet.width ?? size}\r\n        height={imageSet.height ?? size}\r\n        x={imageSet.positionX ?? position}\r\n        y={imageSet.positionY ?? position}\r\n        fill={bgColor ?? '#FFF'}\r\n      />\r\n    )}\r\n\r\n    <image\r\n      href={src}\r\n      width={imageSet.width ?? size}\r\n      height={imageSet.height ?? size}\r\n      x={imageSet.positionX ?? position}\r\n      y={imageSet.positionY ?? position}\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n    />\r\n\r\n  </>;\r\n\r\n}\r\n\r\nexport default QrcodeSvg;\r\n","import { qrCodeRadiusNormalize } from \"./helpers\";\r\nimport type { QrcodeRectangleProps } from \"./types\";\r\n\r\nexport default function rectanglePath(props: QrcodeRectangleProps) {\r\n\r\n  const radius = qrCodeRadiusNormalize(props.radius);\r\n\r\n  return `\r\n      M ${props.positionX + radius.top_left},${props.positionY}\r\n      H ${props.positionX + props.width - radius.top_right}\r\n      A ${radius.top_right},${radius.top_right} 0 0 1 ${props.positionX + props.width},${props.positionY + radius.top_right}\r\n      V ${props.positionY + props.height - radius.bottom_right}\r\n      A ${radius.bottom_right},${radius.bottom_right} 0 0 1 ${props.positionX + props.width - radius.bottom_right},${props.positionY + props.height}\r\n      H ${props.positionX + radius.bottom_left}\r\n      A ${radius.bottom_left},${radius.bottom_left} 0 0 1 ${props.positionX},${props.positionY + props.height - radius.bottom_left}\r\n      V ${props.positionY + radius.top_left}\r\n      A ${radius.top_left},${radius.top_left} 0 0 1 ${props.positionX + radius.top_left},${props.positionY}\r\n      Z\r\n  `.trim().replace(/\\s+/g, ' ');\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,QAAA,MAAc;AACrB,SAASC,QAAA,QAAgB;;;ACDzB,OAAOC,eAAA,MAAqB;AAC5B,SAASC,SAAA,EAAWC,MAAA,QAAc;;;ACalC,SAASC,cAAcC,GAAA,EAAuB;EAE5CA,GAAA,GAAMA,GAAA,CAAIC,OAAA,CAAQ,oCAAoC,CAACC,CAAA,EAAGC,CAAA,EAAGC,CAAA,EAAGC,CAAA,KAC9DF,CAAA,GAAIA,CAAA,GAAIC,CAAA,GAAIA,CAAA,GAAIC,CAAA,GAAIA,CACrB;EAED,MAAMC,MAAA,GAAS,yCAAyCC,IAAA,CAAKP,GAAG;EAEhE,OAAOM,MAAA,GAAS;IACdH,CAAA,EAAGK,QAAA,CAASF,MAAA,CAAO,CAAC,GAAG,EAAE;IACzBF,CAAA,EAAGI,QAAA,CAASF,MAAA,CAAO,CAAC,GAAG,EAAE;IACzBD,CAAA,EAAGG,QAAA,CAASF,MAAA,CAAO,CAAC,GAAG,EAAE;EAC3B,IAAI;IAAEH,CAAA,EAAG;IAAGC,CAAA,EAAG;IAAGC,CAAA,EAAG;EAAE;AAEzB;AAEA,SAASI,cAAAC,IAAA,EAA6C;EAAA,IAA/B;IAAEP,CAAA;IAAGC,CAAA;IAAGC;EAAE,IAAAK,IAAA;EAC/B,OAAO,OAAQ,KAAK,KAAOP,CAAA,IAAK,KAAOC,CAAA,IAAK,IAAKC,CAAA,EAAGM,QAAA,CAAS,EAAE,EAAEC,KAAA,CAAM,CAAC;AAC1E;AAEA,SAASC,cAAcC,KAAA,EAAeC,KAAA,EAAuB;EAE3D,MAAMC,GAAA,GAAMjB,aAAA,CAAce,KAAK;EAE/B,SAASG,CAAA,IAAKD,GAAA,EAAK;IACjBA,GAAA,CAAIC,CAAmB,KAAKF,KAAA;IAC5B,IAAIC,GAAA,CAAIC,CAAmB,IAAI,KAAKD,GAAA,CAAIC,CAAmB,IAAI;IAC/D,IAAID,GAAA,CAAIC,CAAmB,IAAI,GAAGD,GAAA,CAAIC,CAAmB,IAAI;EAC/D;EAEA,OAAOR,aAAA,CAAcO,GAAG;AAE1B;AAEA,SAASE,cAAcC,SAAA,EAA2B;EAChD,MAAM;IAAEhB,CAAA;IAAGC,CAAA;IAAGC;EAAE,IAAIN,aAAA,CAAcoB,SAAS;EAC3C,MAAMC,GAAA,GAAMC,IAAA,CAAKC,GAAA,CAAInB,CAAA,EAAGC,CAAA,EAAGC,CAAC;EAC5B,MAAMkB,MAAA,GAASC,YAAA,CAAa,GAAGJ,GAAG;EAClC,OAAOX,aAAA,CAAc;IAAEN,CAAA,EAAGA,CAAA,GAAIoB,MAAA;IAAQnB,CAAA,EAAGA,CAAA,GAAImB,MAAA;IAAQlB,CAAA,EAAGA,CAAA,GAAIkB;EAAO,CAAC;AACtE;AAEA,SAASE,WAAWX,KAAA,EAA2B;EAC7C,MAAMY,GAAA,GAAcC,MAAA,CAAOC,MAAA,CAAO7B,aAAA,CAAce,KAAK,CAAC,EAAEe,MAAA,CAAO,CAACC,CAAA,EAAGC,CAAA,KAAMD,CAAA,GAAIC,CAAA,EAAG,CAAC;EACjF,OAAOL,GAAA,GAAM,MAAM,UAAUA,GAAA,GAAM,MAAM,WAAW;AACtD;AAEA,SAASF,aAAaF,GAAA,EAAaF,GAAA,EAAqB;EACtD,OAAOC,IAAA,CAAKW,KAAA,CAAMX,IAAA,CAAKE,MAAA,CAAO,KAAKH,GAAA,GAAME,GAAA,GAAM,EAAE,IAAIA,GAAA;AACvD;AAEO,SAASW,eAAed,SAAA,EAA2B;EACxD,MAAMJ,KAAA,GAAQU,UAAA,CAAWN,SAAS;EAClC,MAAMG,GAAA,GAAcP,KAAA,KAAU,SAAS,IAAIA,KAAA,KAAU,WAAW,KAAK;EACrE,MAAMK,GAAA,GAAcL,KAAA,KAAU,SAAS,MAAMA,KAAA,KAAU,WAAW,MAAM;EACxE,OAAON,aAAA,CAAc;IAAEN,CAAA,EAAGqB,YAAA,CAAaF,GAAA,EAAKF,GAAG;IAAGhB,CAAA,EAAGoB,YAAA,CAAaF,GAAA,EAAKF,GAAG;IAAGf,CAAA,EAAGmB,YAAA,CAAaF,GAAA,EAAKF,GAAG;EAAE,CAAC;AAC1G;AAEA,SAASc,oBAAuBC,aAAA,EAAkBC,IAAA,EAA2D;EAE3G,OAAQA,IAAA,IACH,OAAOA,IAAA,KAAS,YAChB,UAAUA,IAAA,IACV,UAAUA,IAAA,GACXA,IAAA,GAAO;IACTC,IAAA,EAAMD,IAAA,WAAAA,IAAA,GAAQD,aAAA;IACdG,IAAA,EAAMF,IAAA,WAAAA,IAAA,GAAQD;EAChB;AAEF;AAEA,SAASI,qBAAqBC,QAAA,EAAqE;EACjG,IAAIA,QAAA,IAAY,OAAOA,QAAA,KAAa,UAAU,OAAOA,QAAA;EACrD,IAAI,OAAOA,QAAA,KAAa,UAAU,OAAO;IAAEC,GAAA,EAAKD;EAAS;EACzD,OAAO;AACT;AAEO,SAASE,sBAAsBC,MAAA,EAAmD;EACvF,OAAQ,OAAOA,MAAA,KAAW,YAAY,CAACA,MAAA,GAAU;IAC/CC,QAAA,EAAUD,MAAA,WAAAA,MAAA,GAAU;IAAGE,SAAA,EAAWF,MAAA,WAAAA,MAAA,GAAU;IAC5CG,WAAA,EAAaH,MAAA,WAAAA,MAAA,GAAU;IAAGI,YAAA,EAAcJ,MAAA,WAAAA,MAAA,GAAU;EACpD,IAAAK,aAAA;IACEJ,QAAA,EAAU;IAAGC,SAAA,EAAW;IACxBC,WAAA,EAAa;IAAGC,YAAA,EAAc;EAAA,GAC3BJ,MAAA,CACL;AACF;AAEO,SAASM,kBACdC,OAAA,EACAC,UAAA,EACAC,OAAA,EACAC,OAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACc;EAEd,MAAMb,MAAA,GAASQ,UAAA,GAAa;EAE5B,QAAQD,OAAA;IAEN,KAAK;MAAQ,OAAOP,MAAA;IAEpB,KAAK;MAAW,OAAOQ,UAAA,GAAa;IAEpC,KAAK;MAAU,OAAO;QACpBP,QAAA,EAAU,CAACS,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAUJ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAASL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQP,UAAA,GAAa,OAAO;QACrHN,SAAA,EAAWQ,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAU,CAACJ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAASL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQP,UAAA,GAAa,OAAO;QACtHL,WAAA,EAAa,CAACO,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAUJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAUJ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQP,UAAA,GAAa,OAAO;QACxHJ,YAAA,EAAcM,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAUJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAU,CAACJ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQP,UAAA,GAAa,OAAO;MAC3H;IAEA,KAAK;MAAS,OAAO;QACnBN,SAAA,EAAW,CAACQ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAASd,MAAA,GAAS;QAChEC,QAAA,EAAU,CAACS,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAASd,MAAA,GAAS;QAChEI,YAAA,EAAc,CAACM,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;QAClEG,WAAA,EAAa,CAACO,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;MACpE;IAEA,KAAK;MAAW,OAAO;QACrBE,SAAA,EAAWQ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAASL,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAASd,MAAA,GAAS;QAC9DC,QAAA,EAAUS,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAUJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAASd,MAAA,GAAS;QAC9DI,YAAA,EAAcM,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAASL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;QAChEG,WAAA,EAAaO,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAUJ,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;MAClE;IAGA,KAAK;MAAS,OAAO,CAACU,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQE,GAAA,CAAIG,KAAA,GAAQf,MAAA,GAAS;QACxEC,QAAA,EAAU,CAACS,OAAA,CAAQE,GAAA,CAAIE,MAAA,GAASd,MAAA,GAAS;QACzCG,WAAA,EAAa,CAACO,OAAA,CAAQE,GAAA,CAAIE,MAAA,GAASd,MAAA,GAAS;QAC5CE,SAAA,EAAW,CAACQ,OAAA,CAAQE,GAAA,CAAIG,KAAA,GAAQf,MAAA,GAAS;QACzCI,YAAA,EAAc,CAACM,OAAA,CAAQE,GAAA,CAAIG,KAAA,GAAQf,MAAA,GAAS;MAC9C;IAGA,KAAK;MAAU,OAAO,CAACU,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;QACzEC,QAAA,EAAU,CAACS,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAASd,MAAA,GAAS;QACzCE,SAAA,EAAW,CAACQ,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAASd,MAAA,GAAS;QAC1CG,WAAA,EAAa,CAACO,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;QAC3CI,YAAA,EAAc,CAACM,OAAA,CAAQC,GAAA,CAAII,KAAA,GAAQf,MAAA,GAAS;MAC9C;IAEA,KAAK;MACH,MAAMgB,IAAA,GAAOtC,IAAA,CAAKW,KAAA,CAAMoB,OAAA,GAAU,CAAC;MACnC,OAAO;QACLP,SAAA,EAAW,CAACQ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAU,EAAEH,GAAA,GAAMK,IAAA,IAAQJ,GAAA,GAAMI,IAAA,IAAQhB,MAAA,GAAS;QAC/FC,QAAA,EAAU,CAACS,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,IAAU,EAAEH,GAAA,GAAMK,IAAA,IAAQJ,GAAA,GAAMI,IAAA,IAAQhB,MAAA,GAAS;QAC/FI,YAAA,EAAc,CAACM,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAII,KAAA,IAAS,EAAEJ,GAAA,GAAMK,IAAA,IAAQJ,GAAA,GAAMI,IAAA,IAAQhB,MAAA,GAAS;QACjGG,WAAA,EAAa,CAACO,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAII,KAAA,IAAS,EAAEJ,GAAA,GAAMK,IAAA,IAAQJ,GAAA,GAAMI,IAAA,IAAQhB,MAAA,GAAS;MACnG;IAEF,KAAK;MAAU,OAAO;QACpBE,SAAA,EAAW;QACXD,QAAA,EAAU,CAACS,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAAUD,GAAA,KAAQ,SAASL,UAAA,GAAa,MAAMR,MAAA,GAAU;QACtGI,YAAA,EAAc,CAACM,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAII,KAAA,GAASF,GAAA,KAAQ,SAASL,UAAA,GAAa,MAAMR,MAAA,GAAU;QACxGG,WAAA,EAAa;MACf;IAEA,KAAK;MAAY,OAAO;QACtBD,SAAA,EAAW,CAACQ,OAAA,CAAQE,GAAA,CAAIG,KAAA,IAAS,CAACL,OAAA,CAAQC,GAAA,CAAIG,MAAA,GAAUD,GAAA,KAAQ,SAASL,UAAA,GAAa,MAAMR,MAAA,GAAU;QACtGC,QAAA,EAAU;QACVG,YAAA,EAAc;QACdD,WAAA,EAAa,CAACO,OAAA,CAAQE,GAAA,CAAIE,MAAA,IAAU,CAACJ,OAAA,CAAQC,GAAA,CAAII,KAAA,GAASF,GAAA,KAAQ,SAASL,UAAA,GAAa,MAAMR,MAAA,GAAU;MAC1G;IAEA;MAAS,OAAO;EAElB;AAEF;AAEO,SAASiB,SAAS9C,KAAA,EAAoB+C,MAAA,EAA2BN,GAAA,EAAaD,GAAA,EAA0B;EAE7G,QAAQO,MAAA;IAEN,KAAK;MAA0B,OAAOhD,aAAA,CAAcC,KAAA,EAAOwC,GAAA,GAAM,EAAE;IACnE,KAAK;MAA4B,OAAOzC,aAAA,CAAcC,KAAA,EAAOyC,GAAA,GAAM,EAAE;IACrE,KAAK;MAA0B,OAAO1C,aAAA,CAAcC,KAAA,GAAQyC,GAAA,GAAMD,GAAA,IAAO,EAAE;IAC3E,KAAK;MAA2B,OAAOzC,aAAA,CAAcC,KAAA,EAAOwC,GAAA,GAAM,CAAC;IACnE,KAAK;MAA6B,OAAOzC,aAAA,CAAcC,KAAA,EAAOyC,GAAA,GAAM,CAAC;IACrE,KAAK;MAA2B,OAAO1C,aAAA,CAAcC,KAAA,GAAQyC,GAAA,GAAMD,GAAA,IAAO,CAAC;IAE3E,KAAK;MAAU,OAAOpC,aAAA,CAAcJ,KAAK;IACzC,KAAK;MAAW,OAAOmB,cAAA,CAAenB,KAAK;IAE3C;MAAS,OAAOA,KAAA;EAElB;AAEF;AAEA,eAAsBgD,kBAAkBrB,GAAA,EAA8B;EACpE,MAAMsB,QAAA,GAAW,MAAMC,KAAA,CAAMvB,GAAG;EAChC,MAAMwB,IAAA,GAAO,MAAMF,QAAA,CAASE,IAAA,CAAK;EACjC,OAAO,IAAIC,OAAA,CAASC,OAAA,IAAY;IAC9B,MAAMC,MAAA,GAAS,IAAIC,UAAA,CAAW;IAC9BD,MAAA,CAAOE,SAAA,GAAY,MAAMH,OAAA,CAAQC,MAAA,CAAO9D,MAAgB;IACxD8D,MAAA,CAAOG,aAAA,CAAcN,IAAI;EAC3B,CAAC;AACH;AAEO,SAASO,WAAWC,KAAA,EAA0BrB,OAAA,EAAiB;EAvNtE,IAAAsB,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAyNE,MAAMC,MAAA,GAAiBxD,IAAA,CAAKW,KAAA,EAAM0C,EAAA,GAAAD,KAAA,CAAMI,MAAA,KAAN,OAAAH,EAAA,GAAgB,CAAC;EACnD,MAAMI,OAAA,GAAkBzD,IAAA,CAAKW,KAAA,EAAM2C,EAAA,GAAAF,KAAA,CAAMK,OAAA,KAAN,OAAAH,EAAA,GAAiB,CAAC;EACrD,MAAMI,KAAA,IAAiBF,MAAA,GAASC,OAAA,IAAW;EAC3C,MAAM3B,UAAA,GAAqB9B,IAAA,CAAKW,KAAA,GAAO4C,EAAA,GAAAH,KAAA,CAAMO,IAAA,KAAN,OAAAJ,EAAA,GAAcxB,OAAA,GAAU,MAAMA,OAAO;EAC5E,MAAM6B,UAAA,GAAqB7B,OAAA,GAAUD,UAAA;EACrC,MAAM+B,cAAA,GAAyB;EAC/B,MAAMC,YAAA,GAAuB/B,OAAA,GAAU8B,cAAA,GAAiB;EACxD,MAAMhC,OAAA,GAAmChB,mBAAA,CAAiC,YAAYuC,KAAA,CAAMvB,OAAO;EACnG,MAAMpC,KAAA,GAAiCoB,mBAAA,CAAiC,QAAQuC,KAAA,CAAM3D,KAAK;EAC3F,MAAMsE,WAAA,GAA6ClD,mBAAA,CAAuC,QAAQuC,KAAA,CAAMW,WAAW;EACnH,MAAMC,MAAA,GAAqC9C,oBAAA,CAAqBkC,KAAA,CAAMa,KAAK;EAE3E,OAAO;IACLT,MAAA;IAAQC,OAAA;IAASC,KAAA;IAAO5B,UAAA;IACxB8B,UAAA;IAAYC,cAAA;IAAgBC,YAAA;IAC5BjC,OAAA;IAASpC,KAAA;IAAOsE,WAAA;IAAaC;EAC/B;AAEF;;;ACxOe,SAARE,gBAAiCC,OAAA,EAAmCf,KAAA,EAA6B;EAEtG,MAAM9B,MAAA,GAASD,qBAAA,CAAsB+B,KAAA,CAAM9B,MAAM;EAEjD6C,OAAA,CAAQC,SAAA,CAAU;EAElBD,OAAA,CAAQE,MAAA,CAAOjB,KAAA,CAAMkB,SAAA,GAAYhD,MAAA,CAAOC,QAAA,EAAU6B,KAAA,CAAMmB,SAAS;EAEjEJ,OAAA,CAAQK,MAAA,CAAOpB,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,GAAQnD,MAAA,CAAOE,SAAA,EAAW4B,KAAA,CAAMmB,SAAS;EAChFJ,OAAA,CAAQO,gBAAA,CAAiBtB,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,EAAOrB,KAAA,CAAMmB,SAAA,EAAWnB,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,EAAOrB,KAAA,CAAMmB,SAAA,GAAYjD,MAAA,CAAOE,SAAS;EAE1I2C,OAAA,CAAQK,MAAA,CAAOpB,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,EAAOrB,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAA,GAASrD,MAAA,CAAOI,YAAY;EAClGyC,OAAA,CAAQO,gBAAA,CAAiBtB,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,EAAOrB,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAA,EAAQvB,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,GAAQnD,MAAA,CAAOI,YAAA,EAAc0B,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAM;EAE3KR,OAAA,CAAQK,MAAA,CAAOpB,KAAA,CAAMkB,SAAA,GAAYhD,MAAA,CAAOG,WAAA,EAAa2B,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAM;EACnFR,OAAA,CAAQO,gBAAA,CAAiBtB,KAAA,CAAMkB,SAAA,EAAWlB,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAA,EAAQvB,KAAA,CAAMkB,SAAA,EAAWlB,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAA,GAASrD,MAAA,CAAOG,WAAW;EAE9I0C,OAAA,CAAQK,MAAA,CAAOpB,KAAA,CAAMkB,SAAA,EAAWlB,KAAA,CAAMmB,SAAA,GAAYjD,MAAA,CAAOC,QAAQ;EACjE4C,OAAA,CAAQO,gBAAA,CAAiBtB,KAAA,CAAMkB,SAAA,EAAWlB,KAAA,CAAMmB,SAAA,EAAWnB,KAAA,CAAMkB,SAAA,GAAYhD,MAAA,CAAOC,QAAA,EAAU6B,KAAA,CAAMmB,SAAS;EAE7G,IAAInB,KAAA,CAAMwB,IAAA,EAAM;IACdT,OAAA,CAAQU,SAAA,GAAYzB,KAAA,CAAMwB,IAAA;IAC1BT,OAAA,CAAQS,IAAA,CAAK;EACf;EAEA,IAAIxB,KAAA,CAAM0B,MAAA,EAAQ;IAChBX,OAAA,CAAQY,WAAA,GAAc3B,KAAA,CAAM0B,MAAA;IAC5BX,OAAA,CAAQW,MAAA,CAAO;EACjB;EAEAX,OAAA,CAAQa,SAAA,CAAU;AAEpB;;;AFqFS,SAAAC,GAAA;AAjGF,SAASC,aAAa9B,KAAA,EAA8B;EAvB3D,IAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAyBE,MAAM4B,MAAA,GAAS1G,MAAA,CAA0B,IAAI;EAE7C,MAAM2G,MAAA,GAAiB7G,eAAA,EAAgB8E,EAAA,GAAAD,KAAA,CAAMrB,OAAA,KAAN,OAAAsB,EAAA,GAAiB,IAAGC,EAAA,GAAAF,KAAA,CAAM1D,KAAA,KAAN,OAAA4D,EAAA,GAAgBF,KAAA,CAAMa,KAAA,GAAQ,MAAM,GAAI;EACnGmB,MAAA,CAAOC,OAAA,EAAQ9B,EAAA,GAAAH,KAAA,CAAMkC,KAAA,KAAN,OAAA/B,EAAA,GAAe,IAAIH,KAAA,CAAMmC,IAAI;EAC5CH,MAAA,CAAOI,IAAA,CAAK;EAEZ,MAAMzD,OAAA,GAAkBqD,MAAA,CAAOK,cAAA,CAAe;EAE9C,MAAM;IACJjC,MAAA;IAAQC,OAAA;IAASC,KAAA;IAAO5B,UAAA;IACxB8B,UAAA;IAAYC,cAAA;IAAgBC,YAAA;IAC5BjC,OAAA;IAASpC,KAAA;IAAOsE,WAAA;IAAaC;EAC/B,IAAIb,UAAA,CAAWC,KAAA,EAAOrB,OAAO;EAE7BvD,SAAA,CAAU,MAAM;IAvClB,IAAAkH,GAAA,EAAAC,GAAA;IAyCI,IAAI,CAACR,MAAA,CAAOS,OAAA,EAAS;IAErB,MAAMzB,OAAA,GAAUgB,MAAA,CAAOS,OAAA,CAAQC,UAAA,CAAW,IAAI;IAC9C,IAAI,CAAC1B,OAAA,EAAS;IAEdA,OAAA,CAAQ2B,SAAA,CAAU,GAAG,GAAGpC,KAAA,GAAQE,UAAA,EAAYF,KAAA,GAAQE,UAAU;IAE9DM,eAAA,CAAgBC,OAAA,EAAS;MACvBQ,MAAA,EAAQlB,OAAA,GAAU,IAAIG,UAAA;MACtBa,KAAA,EAAOhB,OAAA,GAAU,IAAIG,UAAA;MACrBU,SAAA,EAAWd,MAAA;MACXe,SAAA,EAAWf,MAAA;MACXoB,IAAA,GAAMc,GAAA,GAAAtC,KAAA,CAAM2C,OAAA,KAAN,OAAAL,GAAA,GAAiB;MACvBpE,MAAA,EAAQ8B,KAAA,CAAM4C,SAAA,GAAY,KAAK;IACjC,CAAC;IAED,SAAS/D,GAAA,GAAM,GAAGA,GAAA,GAAMF,OAAA,EAASE,GAAA,IAAO;MAEtC,SAASC,GAAA,GAAM,GAAGA,GAAA,GAAMH,OAAA,EAASG,GAAA,IAAO;QAEtC,IAAI,CAACkD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,EAAKC,GAAG,GAAG;QAE9B,IAAIC,GAAA,GACDD,GAAA,GAAM2B,cAAA,IAAkB5B,GAAA,GAAM4B,cAAA,IAC9B3B,GAAA,GAAM2B,cAAA,IAAkB5B,GAAA,GAAM6B,YAAA,IAC9B5B,GAAA,GAAM4B,YAAA,IAAgB7B,GAAA,GAAM4B,cAAA,GAC3B,SAAS;QAEb,IAAIqC,OAAA,GAAyC;UAC3CpB,MAAA,EAAQ3C,GAAA,KAAQ,UAAUiB,KAAA,CAAM+C,OAAA,IAAWR,GAAA,GAAAvC,KAAA,CAAM2C,OAAA,KAAN,OAAAJ,GAAA,GAAiB,SAAU;QACxE;QAEA,MAAM3D,OAAA,GAAyB;UAC7BC,GAAA,EAAK;YACHG,MAAA,EAAQH,GAAA,GAAM,IAAImD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,GAAM,GAAGC,GAAG,IAAI;YAChDG,KAAA,EAAOJ,GAAA,GAAMF,OAAA,GAAU,IAAIqD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,GAAM,GAAGC,GAAG,IAAI;UAC3D;UACAA,GAAA,EAAK;YACHE,MAAA,EAAQF,GAAA,GAAM,IAAIkD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,EAAKC,GAAA,GAAM,CAAC,IAAI;YAChDG,KAAA,EAAOH,GAAA,GAAMH,OAAA,GAAU,IAAIqD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,EAAKC,GAAA,GAAM,CAAC,IAAI;UAC3D;QACF;QAEAgE,OAAA,CAAQ5E,MAAA,GAASM,iBAAA,CACfC,OAAA,CAAQM,GAAG,GACXL,UAAA,EACAC,OAAA,EACAC,OAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GACF;QAEA+B,eAAA,CAAgBC,OAAA,EAAAxC,aAAA;UACd2C,SAAA,EAAWpC,GAAA,GAAMJ,UAAA,GAAa0B,MAAA,GAASC,OAAA;UACvCc,SAAA,EAAWtC,GAAA,GAAMH,UAAA,GAAa0B,MAAA,GAASC,OAAA;UACvCkB,MAAA,EAAQ7C,UAAA;UACR2C,KAAA,EAAO3C,UAAA;UACP8C,IAAA,EAAMrC,QAAA,CAAS9C,KAAA,CAAM0C,GAAG,GAAG4B,WAAA,CAAY5B,GAAG,GAAGD,GAAA,EAAKD,GAAG;QAAA,GAClDiE,OAAA,CACJ;MAEH;IAEF;IAEA,IAAIlC,MAAA,EAAQoC,QAAA,CACVjC,OAAA,EAASH,MAAA,EAAQjC,OAAA,EACjBD,UAAA,EAAY0B,MAAA,EAAQC,OAAA,EACpBL,KAAA,CAAM2C,OACR;IAEA,IAAI,OAAO3C,KAAA,CAAMiD,OAAA,KAAY,YAAY;MACvCjD,KAAA,CAAMiD,OAAA,CAAQlB,MAAA,CAAOS,OAAO;IAC9B;EAGF,GAAG,CAACxC,KAAK,CAAC;EAEV,OAAO,eAAA6B,GAAA,CAAC,UAAAtD,aAAA,CAAAA,aAAA,KACFyB,KAAA,CAAMkD,aAAA;IACVC,GAAA,EAAKpB,MAAA;IACLV,KAAA,EAAOb,UAAA,GAAaF,KAAA;IACpBiB,MAAA,EAAQf,UAAA,GAAaF,KAAA;IACrB8C,QAAA,EAAApD,KAAA,CAAMoD;EAAA,EAAS;AAEnB;AAEA,SAASJ,SAASjC,OAAA,EAAmChD,QAAA,EAA+BY,OAAA,EAAiBD,UAAA,EAAoB0B,MAAA,EAAgBC,OAAA,EAAiBsC,OAAA,EAAkB;EAC1K,MAAM9B,KAAA,GAAQ,IAAIwC,KAAA,CAAM;EACxBxC,KAAA,CAAM7C,GAAA,GAAMD,QAAA,CAASC,GAAA;EACrB6C,KAAA,CAAMyC,MAAA,GAAS,MAAM;IApIvB,IAAArD,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAoD,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;IAqII,MAAMpD,IAAA,GAAO3D,IAAA,CAAKW,KAAA,CAAMoB,OAAA,GAAUD,UAAA,GAAa,CAAC;IAChD,MAAMkF,QAAA,GAAWrD,IAAA,GAAO,IAAIH,MAAA,GAASC,OAAA;IACrC,IAAI,CAACtC,QAAA,CAAS8F,OAAA,EAAS/C,eAAA,CAAgBC,OAAA,EAAS;MAC9CQ,MAAA,GAAQtB,EAAA,GAAAlC,QAAA,CAASwD,MAAA,KAAT,OAAAtB,EAAA,GAAmBM,IAAA;MAC3Bc,KAAA,GAAOnB,EAAA,GAAAnC,QAAA,CAASsD,KAAA,KAAT,OAAAnB,EAAA,GAAkBK,IAAA;MACzBW,SAAA,GAAWf,EAAA,GAAApC,QAAA,CAASmD,SAAA,KAAT,OAAAf,EAAA,GAAsByD,QAAA;MACjCzC,SAAA,GAAWoC,EAAA,GAAAxF,QAAA,CAASoD,SAAA,KAAT,OAAAoC,EAAA,GAAsBK,QAAA;MACjCpC,IAAA,EAAMmB,OAAA,WAAAA,OAAA,GAAW;IACnB,CAAC;IACD5B,OAAA,CAAQ+C,SAAA,CACNjD,KAAA,GACA2C,EAAA,GAAAzF,QAAA,CAASmD,SAAA,KAAT,OAAAsC,EAAA,GAAsBI,QAAA,GACtBH,EAAA,GAAA1F,QAAA,CAASoD,SAAA,KAAT,OAAAsC,EAAA,GAAsBG,QAAA,GACtBF,EAAA,GAAA3F,QAAA,CAASsD,KAAA,KAAT,OAAAqC,EAAA,GAAkBnD,IAAA,GAClBoD,EAAA,GAAA5F,QAAA,CAASwD,MAAA,KAAT,OAAAoC,EAAA,GAAmBpD,IACrB;EACF;AACF;AAEA,IAAOwD,oBAAA,GAAQjC,YAAA;;;AGxJf,OAAOkC,gBAAA,MAAqB;AAC5B,OAAOC,KAAA,IAAc7I,SAAA,IAAA8I,UAAA,EAAW7I,MAAA,IAAA8I,OAAA,QAAc;;;ACE/B,SAARC,cAA+BpE,KAAA,EAA6B;EAEjE,MAAM9B,MAAA,GAASD,qBAAA,CAAsB+B,KAAA,CAAM9B,MAAM;EAEjD,OAAO,aAAAmG,MAAA,CACCrE,KAAA,CAAMkB,SAAA,GAAYhD,MAAA,CAAOC,QAAQ,OAAAkG,MAAA,CAAIrE,KAAA,CAAMmB,SAAS,gBAAAkD,MAAA,CACpDrE,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,GAAQnD,MAAA,CAAOE,SAAS,gBAAAiG,MAAA,CAChDnG,MAAA,CAAOE,SAAS,OAAAiG,MAAA,CAAInG,MAAA,CAAOE,SAAS,aAAAiG,MAAA,CAAUrE,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAK,OAAAgD,MAAA,CAAIrE,KAAA,CAAMmB,SAAA,GAAYjD,MAAA,CAAOE,SAAS,gBAAAiG,MAAA,CACjHrE,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAA,GAASrD,MAAA,CAAOI,YAAY,gBAAA+F,MAAA,CACpDnG,MAAA,CAAOI,YAAY,OAAA+F,MAAA,CAAInG,MAAA,CAAOI,YAAY,aAAA+F,MAAA,CAAUrE,KAAA,CAAMkB,SAAA,GAAYlB,KAAA,CAAMqB,KAAA,GAAQnD,MAAA,CAAOI,YAAY,OAAA+F,MAAA,CAAIrE,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAM,gBAAA8C,MAAA,CACzIrE,KAAA,CAAMkB,SAAA,GAAYhD,MAAA,CAAOG,WAAW,gBAAAgG,MAAA,CACpCnG,MAAA,CAAOG,WAAW,OAAAgG,MAAA,CAAInG,MAAA,CAAOG,WAAW,aAAAgG,MAAA,CAAUrE,KAAA,CAAMkB,SAAS,OAAAmD,MAAA,CAAIrE,KAAA,CAAMmB,SAAA,GAAYnB,KAAA,CAAMuB,MAAA,GAASrD,MAAA,CAAOG,WAAW,gBAAAgG,MAAA,CACxHrE,KAAA,CAAMmB,SAAA,GAAYjD,MAAA,CAAOC,QAAQ,gBAAAkG,MAAA,CACjCnG,MAAA,CAAOC,QAAQ,OAAAkG,MAAA,CAAInG,MAAA,CAAOC,QAAQ,aAAAkG,MAAA,CAAUrE,KAAA,CAAMkB,SAAA,GAAYhD,MAAA,CAAOC,QAAQ,OAAAkG,MAAA,CAAIrE,KAAA,CAAMmB,SAAS,mBAEtGmD,IAAA,CAAK,EAAE9I,OAAA,CAAQ,QAAQ,GAAG;AAE9B;;;AD+CQ,SA+EwB+I,QAAA,EA/ExB1C,GAAA,IAAA2C,IAAA,EA+BJC,IAAA,QA/BI;AA5CD,SAASC,UAAU1E,KAAA,EAA2B;EAvBrD,IAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAoD,EAAA,EAAAC,EAAA;EAyBE,MAAMmB,GAAA,GAAMR,OAAA,CAAsB,IAAI;EAEtC,MAAMnC,MAAA,GAAiBgC,gBAAA,EAAgB/D,EAAA,GAAAD,KAAA,CAAMrB,OAAA,KAAN,OAAAsB,EAAA,GAAiB,IAAGC,EAAA,GAAAF,KAAA,CAAM1D,KAAA,KAAN,OAAA4D,EAAA,GAAgBF,KAAA,CAAMa,KAAA,GAAQ,MAAM,GAAI;EACnGmB,MAAA,CAAOC,OAAA,EAAQ9B,EAAA,GAAAH,KAAA,CAAMkC,KAAA,KAAN,OAAA/B,EAAA,GAAe,IAAIH,KAAA,CAAMmC,IAAI;EAC5CH,MAAA,CAAOI,IAAA,CAAK;EAEZ,MAAMzD,OAAA,GAAkBqD,MAAA,CAAOK,cAAA,CAAe;EAE9C,MAAM;IACJjC,MAAA;IAAQC,OAAA;IAASC,KAAA;IAAO5B,UAAA;IACxB8B,UAAA;IAAYC,cAAA;IAAgBC,YAAA;IAC5BjC,OAAA;IAASpC,KAAA;IAAOsE,WAAA;IAAaC;EAC/B,IAAIb,UAAA,CAAWC,KAAA,EAAOrB,OAAO;EAE7B,MAAMiG,KAAA,GAAuB,EAAC;EAE9B,SAAS/F,GAAA,GAAM,GAAGA,GAAA,GAAMF,OAAA,EAASE,GAAA,IAAO;IACtC,SAASC,GAAA,GAAM,GAAGA,GAAA,GAAMH,OAAA,EAASG,GAAA,IAAO;MACtC,IAAI,CAACkD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,EAAKC,GAAG,GAAG;MAE9B,MAAMC,GAAA,GACHD,GAAA,GAAM,KAAKD,GAAA,GAAM,KACjBC,GAAA,GAAM,KAAKD,GAAA,IAAOF,OAAA,GAAU,KAC5BG,GAAA,IAAOH,OAAA,GAAU,KAAKE,GAAA,GAAM,IAC3B,SAAS;MAEb,MAAMgG,CAAA,GAAI/F,GAAA,GAAMJ,UAAA,GAAa0B,MAAA,GAASC,OAAA;MACtC,MAAMyE,CAAA,GAAIjG,GAAA,GAAMH,UAAA,GAAa0B,MAAA,GAASC,OAAA;MACtC,MAAM/C,CAAA,GAAI6B,QAAA,CAAS9C,KAAA,CAAM0C,GAAG,GAAG4B,WAAA,CAAY5B,GAAG,GAAGD,GAAA,EAAKD,GAAG;MAEzD,MAAMD,OAAA,GAAyB;QAC7BC,GAAA,EAAK;UACHG,MAAA,EAAQH,GAAA,GAAM,IAAImD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,GAAM,GAAGC,GAAG,IAAI;UAChDG,KAAA,EAAOJ,GAAA,GAAMF,OAAA,GAAU,IAAIqD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,GAAM,GAAGC,GAAG,IAAI;QAC3D;QACAA,GAAA,EAAK;UACHE,MAAA,EAAQF,GAAA,GAAM,IAAIkD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,EAAKC,GAAA,GAAM,CAAC,IAAI;UAChDG,KAAA,EAAOH,GAAA,GAAMH,OAAA,GAAU,IAAIqD,MAAA,CAAOa,MAAA,CAAOhE,GAAA,EAAKC,GAAA,GAAM,CAAC,IAAI;QAC3D;MACF;MAEA8F,KAAA,CAAMG,IAAA,CACJ,eAAAP,IAAA,CAAC;QACCQ,CAAA,EAAGZ,aAAA,CAAc;UACf7C,MAAA,EAAQ7C,UAAA;UACR2C,KAAA,EAAO3C,UAAA;UACPwC,SAAA,EAAW2D,CAAA;UACX1D,SAAA,EAAW2D,CAAA;UACX5G,MAAA,EAAQM,iBAAA,CACNC,OAAA,CAAQM,GAAG,GACXL,UAAA,EACAC,OAAA,EACAC,OAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GACF;QACF,CAAC;QAEDyC,IAAA,EAAMlE,CAAA;QACNoE,MAAA,EAAQ1B,KAAA,CAAM+C,OAAA,IAAWhE,GAAA,KAAQ,UAAUwE,EAAA,GAAAvD,KAAA,CAAM2C,OAAA,KAAN,OAAAY,EAAA,GAAiB,SAAU;MAAA,MAAAc,MAAA,CAF9DxF,GAAG,OAAAwF,MAAA,CAAIvF,GAAG,CAGpB,CACF;IACF;EACF;EAEAoF,UAAA,CAAU,MAAM;IACd,IAAI,OAAOlE,KAAA,CAAMiD,OAAA,KAAY,cAAc0B,GAAA,CAAInC,OAAA,EAAS;MACtDxC,KAAA,CAAMiD,OAAA,CAAQ0B,GAAA,CAAInC,OAAO;IAC3B;EACF,GAAG,CAACxC,KAAA,EAAO2E,GAAG,CAAC;EAEf,OACE,eAAAF,IAAA,CAAC,OAAAlG,aAAA,CAAAA,aAAA;IACC0G,cAAA,EAAe;EAAA,GACXjF,KAAA,CAAMkD,aAAA;IACVgC,KAAA,EAAM;IACNC,OAAA,SAAAd,MAAA,CAAgB7D,UAAA,GAAaF,KAAK,OAAA+D,MAAA,CAAI7D,UAAA,GAAaF,KAAK;IACxDe,KAAA,EAAOb,UAAA,GAAaF,KAAA;IACpBiB,MAAA,EAAQf,UAAA,GAAaF,KAAA;IACrB6C,GAAA,EAAKwB,GAAA;IAELvB,QAAA,kBAAAoB,IAAA,CAAC;MACCK,CAAA,EAAGzE,MAAA;MACH0E,CAAA,EAAG1E,MAAA;MACHiB,KAAA,EAAOb,UAAA,GAAaH,OAAA,GAAU;MAC9BkB,MAAA,EAAQf,UAAA,GAAaH,OAAA,GAAU;MAC/BmB,IAAA,GAAMgC,EAAA,GAAAxD,KAAA,CAAM2C,OAAA,KAAN,OAAAa,EAAA,GAAiB;MACvB4B,EAAA,EAAIpF,KAAA,CAAM4C,SAAA,GAAY,KAAK;IAAA,CAC7B,GACCgC,KAAA,EACD,eAAAJ,IAAA,CAACa,MAAA;MACCtH,QAAA,EAAU6C,MAAA;MACVjC,OAAA;MACAD,UAAA;MACA0B,MAAA;MACAC,OAAA;MACAsC,OAAA,EAAS3C,KAAA,CAAM2C;IAAA,CACjB;EAAA,EACF;AAEJ;AAEA,SAAS0C,OAAAC,KAAA,EAMN;EAAA,IANY;IACbvH,QAAA;IAAUY,OAAA;IAASD,UAAA;IACnB0B,MAAA;IAAQC,OAAA;IAASsC;EACnB,IAAA2C,KAAA;EAnIA,IAAArF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAoD,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA;EAwIE,MAAMpD,IAAA,GAAO3D,IAAA,CAAKW,KAAA,CAAMoB,OAAA,GAAUD,UAAA,GAAa,CAAC;EAChD,MAAMkF,QAAA,GAAWrD,IAAA,GAAO,IAAIH,MAAA,GAASC,OAAA;EAErC,MAAM,CAACrC,GAAA,EAAKuH,MAAM,IAAItB,KAAA,CAAM/I,QAAA,CAAiB;EAE7CgJ,UAAA,CAAU,MAAM;IACd,IAAIlG,GAAA,IAAO,CAACD,QAAA,EAAU;IACtBsB,iBAAA,CAAkBtB,QAAA,CAASC,GAAG,EAAEwH,IAAA,CAAKD,MAAM;EAC7C,GAAG,CAACxH,QAAA,EAAUC,GAAG,CAAC;EAElB,IAAI,CAACA,GAAA,IAAO,CAACD,QAAA,EAAU,OAAO,eAAAyG,IAAA,CAAAD,QAAA,IAAE;EAEhC,OAAO,eAAAE,IAAA,CAAAF,QAAA;IAEJnB,QAAA,GAAArF,QAAA,CAAS8F,OAAA,GAAU,eAAAW,IAAA,CAAAD,QAAA,IAAE,IACpB,eAAAC,IAAA,CAAC;MACCnD,KAAA,GAAOpB,EAAA,GAAAlC,QAAA,CAASsD,KAAA,KAAT,OAAApB,EAAA,GAAkBM,IAAA;MACzBgB,MAAA,GAAQrB,EAAA,GAAAnC,QAAA,CAASwD,MAAA,KAAT,OAAArB,EAAA,GAAmBK,IAAA;MAC3BsE,CAAA,GAAG1E,EAAA,GAAApC,QAAA,CAASmD,SAAA,KAAT,OAAAf,EAAA,GAAsByD,QAAA;MACzBkB,CAAA,GAAGvB,EAAA,GAAAxF,QAAA,CAASoD,SAAA,KAAT,OAAAoC,EAAA,GAAsBK,QAAA;MACzBpC,IAAA,EAAMmB,OAAA,WAAAA,OAAA,GAAW;IAAA,CACnB,GAGF,eAAA6B,IAAA,CAAC;MACCiB,IAAA,EAAMzH,GAAA;MACNqD,KAAA,GAAOmC,EAAA,GAAAzF,QAAA,CAASsD,KAAA,KAAT,OAAAmC,EAAA,GAAkBjD,IAAA;MACzBgB,MAAA,GAAQkC,EAAA,GAAA1F,QAAA,CAASwD,MAAA,KAAT,OAAAkC,EAAA,GAAmBlD,IAAA;MAC3BsE,CAAA,GAAGnB,EAAA,GAAA3F,QAAA,CAASmD,SAAA,KAAT,OAAAwC,EAAA,GAAsBE,QAAA;MACzBkB,CAAA,GAAGnB,EAAA,GAAA5F,QAAA,CAASoD,SAAA,KAAT,OAAAwC,EAAA,GAAsBC,QAAA;MACzB8B,mBAAA,EAAoB;IAAA,CACtB;EAAA,CAEF;AAEF;AAEA,IAAOC,iBAAA,GAAQjB,SAAA;;;AJxJR,SAASkB,kBAAA,EAA0D;EAAA,IAAxCC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB;EAEjD,MAAM,CAAC9D,MAAA,EAAQiE,SAAS,IAAI/K,QAAA,CAAmD,IAAI;EACnF,MAAMgL,QAAA,GAAoBlE,MAAA,YAAkBmE,iBAAA;EAE5C,OAAO,CACLF,SAAA,EACCG,QAAA,IAAqB;IACpB,IAAIpE,MAAA,EAAQ/G,QAAA,CACViL,QAAA,GAAYlE,MAAA,CAA6BqE,SAAA,CAAU,WAAW,IAAI,IAAIC,IAAA,CAAK,CAACtE,MAAA,CAAOuE,SAAS,GAAG;MAAEC,IAAA,EAAM;IAA8B,CAAC,GACtIJ,QAAA,GAAWP,MAAA,IAAUK,QAAA,GAAW,SAAS,SACzCA,QAAA,GAAW,cAAc,eAC3B;EACF,GACAlE,MAAA,KAAW,KACb;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}