{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Button } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { url } from 'inspector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate(); // para redirecionar ao login se necessário\n\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState(null);\n  const [paymentConfirmed, setPaymentConfirmed] = useState({});\n  const [confirmingMonth, setConfirmingMonth] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const handleSwitchClick = (year, month) => {\n    setConfirmingMonth({\n      year,\n      month\n    });\n    setOpenModal(true);\n  };\n  const {\n    doFetch: doConfirm\n  } = useFetch({\n    method: 'PATCH'\n  });\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n    console.log(key);\n    try {\n      await doConfirm({\n        url: getURI(API.confirmPayment),\n        body: {\n          userId,\n          ref_year: confirmingMonth.year,\n          ref_month: confirmingMonth.month\n        },\n        method: 'PATCH'\n      });\n      console.log(url), setPayments(prev => prev.map(p => p.ref_year === confirmingMonth.year && p.ref_month === confirmingMonth.month ? {\n        ...p,\n        status: 'Confirmado',\n        updatedAt: new Date().toISOString()\n      } : p));\n      setPaymentConfirmed(prev => ({\n        ...prev,\n        [key]: true\n      }));\n    } catch (err) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      if (!confirmingError) {\n        setConfirmingError(err.message || 'Erro desconhecido ao confirmar pagamento.');\n      }\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n    setConfirmingError(null);\n  };\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) acc[key] = 0;\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus: []\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message && paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` ${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModal && confirmingMonth && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      bgcolor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1300,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirmar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Deseja confirmar o pagamento do m\\xEAs\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatMonth(confirmingMonth.month)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), \" de\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: confirmingMonth.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCancel,\n            disabled: confirmingLoading,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: handlePaymentConfirm,\n            disabled: confirmingLoading,\n            children: confirmingLoading ? 'Confirmando...' : 'Confirmar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), confirmingError && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"caption\",\n          mt: 1,\n          children: confirmingError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro\", ' ', selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 403,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? blue[100] : blue[50],\n                        color: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? blue[800] : blue[700],\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 29\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 466,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                      color: \"warning\",\n                      fontSize: \"medium\",\n                      titleAccess: \"\\xC0 confirmar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                      color: \"success\",\n                      fontSize: \"medium\",\n                      titleAccess: \"Confirmado\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status !== 'Confirmado' && !paymentConfirmed[`${payment.ref_year}-${payment.ref_month}`] ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        onChange: () => handleSwitchClick(payment.ref_year, payment.ref_month)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 529,\n                        columnNumber: 33\n                      }, this),\n                      label: `Confirmar mês ${payment.ref_month}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"OE9kIFvy27sk/z4aBg30wxbLia4=\", false, function () {\n  return [useParams, useNavigate, useFetch, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Button","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useNavigate","useFetch","API","getURI","PaymentQRCode","Switch","url","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","navigate","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","confirmingLoading","setConfirmingLoading","confirmingError","setConfirmingError","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","doFetch","doConfirm","method","handlePaymentConfirm","isUserIdValid","key","console","log","confirmPayment","body","ref_year","ref_month","prev","map","p","status","updatedAt","toISOString","err","error","message","handleCancel","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","paymentsError","loading","paymentsLoading","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyTotalsMissing","acc","paidMonths","Object","values","total","length","totalMissing","monthlyStatus","financialSummary","availableYears","severity","errorMessage","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","onClick","disabled","color","mt","elevation","size","id","labelId","value","label","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","title","type","titleAccess","createdAt","toLocaleDateString","control","checked","colSpan","toFixed","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel,\n  Button\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { url } from 'inspector';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const navigate = useNavigate(); // para redirecionar ao login se necessário\n\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState<string | null>(null);\n\n  const [paymentConfirmed, setPaymentConfirmed] = useState<\n    Record<string, boolean>\n  >({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{\n    year: string;\n    month: number;\n  } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSwitchClick = (year: string, month: number) => {\n    setConfirmingMonth({ year, month });\n    setOpenModal(true);\n  };\n\n  const { doFetch: doConfirm } = useFetch<IPaymentMonthly>({ method: 'PATCH' });\n\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n    console.log(key)\n\n    try {\n      await doConfirm({\n        url: getURI(API.confirmPayment),\n        body: {\n          userId,\n          ref_year: confirmingMonth.year,\n          ref_month: confirmingMonth.month\n        },\n        method: 'PATCH'        \n      });\n      console.log(url),\n\n      setPayments((prev) =>\n        prev.map((p) =>\n          p.ref_year === confirmingMonth.year &&\n          p.ref_month === confirmingMonth.month\n            ? {\n                ...p,\n                status: 'Confirmado',\n                updatedAt: new Date().toISOString()\n              }\n            : p\n        )\n      );\n\n      setPaymentConfirmed((prev) => ({ ...prev, [key]: true }));\n    } catch (err: any) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      if (!confirmingError) {\n        setConfirmingError(\n          err.message || 'Erro desconhecido ao confirmar pagamento.'\n        );\n      }\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n    setConfirmingError(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key])\n          (acc as { [key: string]: number })[key] = 0;\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus: [] as any[]\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (\n      paymentsError.message &&\n      paymentsError.message.includes('not valid JSON')\n    ) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` ${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {openModal && confirmingMonth && (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100vw\"\n          height=\"100vh\"\n          bgcolor=\"rgba(0,0,0,0.5)\"\n          zIndex={1300}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirmar Pagamento\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja confirmar o pagamento do mês{' '}\n              <strong>{formatMonth(confirmingMonth.month)}</strong> de{' '}\n              <strong>{confirmingMonth.year}</strong>?\n            </Typography>\n\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Button onClick={handleCancel} disabled={confirmingLoading}>\n                Cancelar\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handlePaymentConfirm}\n                disabled={confirmingLoading}\n              >\n                {confirmingLoading ? 'Confirmando...' : 'Confirmar'}\n              </Button>\n            </Box>\n\n            {confirmingError && (\n              <Typography color=\"error\" variant=\"caption\" mt={1}>\n                {confirmingError}\n              </Typography>\n            )}\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >{`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}</Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell\n                      sx={{ color: blue[600], textAlign: 'center' }}\n                    ></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Chip\n                            label={formatMonth(payment.ref_month)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            sx={{\n                              backgroundColor:\n                                payment.ref_month === monthCurrent &&\n                                payment.ref_year.toString() ===\n                                  yearCurrent.toString()\n                                  ? blue[100]\n                                  : blue[50],\n                              color:\n                                payment.ref_month === monthCurrent &&\n                                payment.ref_year.toString() ===\n                                  yearCurrent.toString()\n                                  ? blue[800]\n                                  : blue[700],\n                              width: 150\n                            }}\n                            title={`${payment.ref_year}`}\n                          />\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{ color: blueGrey[300], width: 150 }}\n                            />\n                          )}\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status && payment.status !== 'Confirmado' ? (\n                            <BatteryCharging60Icon\n                              color=\"warning\"\n                              fontSize=\"medium\"\n                              titleAccess=\"À confirmar\"\n                            />\n                          ) : (\n                            <CheckIcon\n                              color=\"success\"\n                              fontSize=\"medium\"\n                              titleAccess=\"Confirmado\"\n                            />\n                          )}\n                        </TableCell>\n\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' &&\n                          !paymentConfirmed[\n                            `${payment.ref_year}-${payment.ref_month}`\n                          ] ? (\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={false}\n                                  onChange={() =>\n                                    handleSwitchClick(\n                                      payment.ref_year,\n                                      payment.ref_month\n                                    )\n                                  }\n                                />\n                              }\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}