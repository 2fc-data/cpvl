{"ast":null,"code":"import _objectSpread from\"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useEffect,useRef,useState,useCallback}from'react';import{useLocalStorage}from'usehooks-ts';import{getHeaderOptions}from'../services';import{useNavigate}from'react-router-dom';const useFetch=_ref=>{let{method='GET',url,body,options}=_ref;const[loading,setLoading]=useState(false);const[data,setData]=useState(null);const[error,setError]=useState(null);const[,setIsLogged]=useLocalStorage(process.env.REACT_APP_LOGGED_KEY||'APP_LOGGED',false);const navigate=useNavigate();const abortController=useRef(null);const doFetch=useCallback(async _ref2=>{let{url:fetchUrl,body:fetchBody,method:fetchMethod=method}=_ref2;setLoading(true);setError(null);// cancela requisição anterior se ainda estiver ativa\nif(abortController.current){abortController.current.abort();}abortController.current=new AbortController();try{const response=await fetch(fetchUrl,_objectSpread(_objectSpread(_objectSpread(_objectSpread({method:fetchMethod},fetchBody&&{body:JSON.stringify(fetchBody)}),getHeaderOptions()),options),{},{signal:abortController.current.signal}));if(!response.ok){const fetchError=new Error(response.statusText||'Erro na requisição');fetchError.status=response.status;throw fetchError;}const json=await response.json();// normaliza resposta no formato `{ data: ... }`\nconst normalized=json.data||json;setData(normalized);return normalized;}catch(err){if(err.name!=='AbortError'){setError(err);if(err.status===401){setIsLogged(false);}if(err.status===403){navigate('/');}}}finally{setLoading(false);}},[method,navigate,options,setIsLogged]);// efeito inicial caso `url` seja passado direto\nuseEffect(()=>{if(url){doFetch({url,body,method});}return()=>{if(abortController.current){abortController.current.abort();}};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[url,body,method]);return{doFetch,data,error,loading};};export default useFetch;","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useLocalStorage","getHeaderOptions","useNavigate","useFetch","_ref","method","url","body","options","loading","setLoading","data","setData","error","setError","setIsLogged","process","env","REACT_APP_LOGGED_KEY","navigate","abortController","doFetch","_ref2","fetchUrl","fetchBody","fetchMethod","current","abort","AbortController","response","fetch","_objectSpread","JSON","stringify","signal","ok","fetchError","Error","statusText","status","json","normalized","err","name"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/hooks/useFetch.ts"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocalStorage } from 'usehooks-ts';\nimport { getHeaderOptions } from '../services';\nimport { useNavigate } from 'react-router-dom';\n\ninterface IProps {\n  method?: 'POST' | 'GET' | 'PATCH' | 'PUT' | 'DELETE';\n  url?: string;\n  body?: any;\n  options?: RequestInit;\n}\n\ninterface FetchError extends Error {\n  status?: number;\n  response?: any;\n}\n\nconst useFetch = <T>({ method = 'GET', url, body, options }: IProps) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<T | null>(null);\n  const [error, setError] = useState<FetchError | null>(null);\n\n  const [, setIsLogged] = useLocalStorage(\n    process.env.REACT_APP_LOGGED_KEY || 'APP_LOGGED',\n    false\n  );\n  const navigate = useNavigate();\n  const abortController = useRef<AbortController | null>(null);\n\n  const doFetch = useCallback(\n    async ({\n      url: fetchUrl,\n      body: fetchBody,\n      method: fetchMethod = method\n    }: {\n      url: string;\n      body?: any;\n      method?: 'POST' | 'GET' | 'PATCH' | 'PUT' | 'DELETE';\n    }) => {\n      setLoading(true);\n      setError(null);\n\n      // cancela requisição anterior se ainda estiver ativa\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n      abortController.current = new AbortController();\n\n      try {\n        const response = await fetch(fetchUrl, {\n          method: fetchMethod,\n          ...(fetchBody && { body: JSON.stringify(fetchBody) }),\n          ...getHeaderOptions(),\n          ...options,\n          signal: abortController.current.signal\n        });\n\n        if (!response.ok) {\n          const fetchError: FetchError = new Error(\n            response.statusText || 'Erro na requisição'\n          );\n          fetchError.status = response.status;\n          throw fetchError;\n        }\n\n        const json = await response.json();\n\n        // normaliza resposta no formato `{ data: ... }`\n        const normalized = json!.data || json;\n\n        setData(normalized);\n        return normalized as T;\n      } catch (err: any) {\n        if (err.name !== 'AbortError') {\n          setError(err);\n\n          if (err.status === 401) {\n            setIsLogged(false);\n          }\n          if (err.status === 403) {\n            navigate('/');\n          }\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [method, navigate, options, setIsLogged]\n  );\n\n  // efeito inicial caso `url` seja passado direto\n  useEffect(() => {\n    if (url) {\n      doFetch({ url, body, method });\n    }\n    return () => {\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, body, method]);\n\n  return { doFetch, data, error, loading };\n};\n\nexport default useFetch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}