{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Grid } from '@mui/material';\nimport { blue, green } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Format month\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Calculate financial summary\n  const getFinancialSummary = () => {\n    const totalAmount = payments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = payments.sort((a, b) => a.ref_year - b.ref_year || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.Description || 'N/A',\n      date: payment.date\n    }));\n    return {\n      total: payments.length,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [errorMessage, \" Tente novamente mais tarde ou contate o suporte.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n\n  // const monthCurrent = formatMonth(new Date().getMonth() + 1);\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  // Render empty state\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Resumo Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blue[50],\n                borderRadius: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blue[600],\n                  children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Valor Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            color: \"primary\",\n            children: \"Pagamentos dos \\xDAltimos Meses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 1,\n            justifyContent: 'center',\n            children: financialSummary.monthlyStatus.slice(0, 12).map((month, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${month.monthName.substring(0, 3)}/${month.year}`,\n              size: \"small\",\n              sx: {\n                backgroundColor: blue[100],\n                color: blue[800],\n                '&:hover': {\n                  backgroundColor: blue[200]\n                }\n              },\n              title: `${month.monthName} ${month.year} - R$ ${month.amount.toFixed(2)}`\n            }, `${month.year}-${month.month}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), financialSummary.monthlyStatus.length > 12 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 1,\n              display: 'block'\n            },\n            children: [\"Mostrando os 12 meses mais recentes de \", financialSummary.total, \" registros\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), financialSummary.monthlyStatus.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 1\n            },\n            children: \"Nenhum registro encontrado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n            sx: {\n              fontSize: 32,\n              color: blue[500],\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"primary\",\n            children: [\"Resumo Financeiro - \", userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    color: blue[600]\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"M\\xEAs\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    color: blue[600]\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    color: blue[600]\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Valor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    color: blue[600]\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Descri\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  sx: {\n                    color: blue[600]\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: payments.sort((a, b) =>\n              // b.ref_year - a.ref_year || b.ref_month - a.ref_month\n              a.ref_year - b.ref_year || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: payment.ref_month === monthCurrent && payment.ref_year === yearCurrent ? /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: blue[600],\n                    fontWeight: 'bold',\n                    children: [formatMonth(payment.ref_month), \" \", payment.ref_year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: formatMonth(payment.ref_month)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: payment.type ? /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 27\n                  }, this) : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: payment.amount,\n                    size: \"small\",\n                    variant: \"outlined\",\n                    sx: {\n                      backgroundColor: green[100],\n                      color: green[800],\n                      '&:hover': {\n                        backgroundColor: green[200]\n                      },\n                      fontWeight: 'bold'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                    label: payment.amount,\n                    size: \"medium\",\n                    variant: \"outlined\",\n                    color: \"error\",\n                    sx: {\n                      color: graygreen[800],\n                      '&:hover': {\n                        backgroundColor: green[200]\n                      },\n                      fontWeight: 'bold'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.Description && payment.Description.trim() !== '' ? payment.Description : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.date ? new Date(payment.date).toLocaleDateString('pt-BR') : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this)]\n              }, `${payment.id || index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          textAlign: 'center',\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n            valor: Number(payments[0].amount)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"2jZ4sVNACGhGmxUfB3/1uZhP5bM=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Grid","blue","green","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","payments","setPayments","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","error","paymentsError","loading","paymentsLoading","method","url","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","month","months","parseAmount","amount","parseFloat","toString","replace","console","getFinancialSummary","totalAmount","reduce","sum","p","monthlyStatus","sort","a","b","ref_year","ref_month","map","payment","year","monthName","type","description","Description","date","total","length","financialSummary","severity","errorMessage","message","includes","yearCurrent","Date","getFullYear","monthCurrent","getMonth","elevation","sx","mb","variant","gutterBottom","color","mt","container","spacing","item","xs","textAlign","bgcolor","borderRadius","toFixed","flexWrap","gap","slice","index","label","substring","size","backgroundColor","title","fontSize","mr","component","hover","fontWeight","graygreen","trim","toLocaleDateString","id","valor","Number","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Grid\n} from '@mui/material';\nimport { blue, green } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: number;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  Description: string;\n  date: Date | string;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ?\n    getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Format month\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Calculate financial summary\n  const getFinancialSummary = () => {\n    const totalAmount = payments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = payments\n      .sort((a, b) => a.ref_year - b.ref_year || a.ref_month - b.ref_month)\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.Description || 'N/A',\n        date: payment.date\n      }));\n\n    return {\n      total: payments.length,\n      totalAmount,\n      monthlyStatus,\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return (\n      <Alert severity=\"error\">\n        {errorMessage} Tente novamente mais tarde ou contate o suporte.\n      </Alert>\n    );\n  }\n\n  // const monthCurrent = formatMonth(new Date().getMonth() + 1);\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  // Render empty state\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <Card elevation={3} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Resumo Financeiro\n          </Typography>\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Box textAlign=\"center\" p={2} bgcolor={blue[50]} borderRadius={2}>\n                  <Typography variant=\"h5\" color={blue[600]}>\n                    R$ {financialSummary.totalAmount.toFixed(2)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Valor Total\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n              Pagamentos dos Últimos Meses\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={1} justifyContent={'center'}>\n              {financialSummary.monthlyStatus.slice(0, 12).map((month, index) => (\n                <Chip\n                  key={`${month.year}-${month.month}`}\n                  label={`${month.monthName.substring(0, 3)}/${month.year}`}\n                  size=\"small\"\n                  sx={{\n                    backgroundColor: blue[100],\n                    color: blue[800],\n                    '&:hover': { backgroundColor: blue[200] },\n                  }}\n                  title={`${month.monthName} ${month.year} - R$ ${month.amount.toFixed(2)}`}\n                />\n              ))}\n            </Box>\n            {financialSummary.monthlyStatus.length > 12 && (\n              <Typography variant=\"caption\" color=\"textSecondary\" sx={{ mt: 1, display: 'block' }}>\n                Mostrando os 12 meses mais recentes de {financialSummary.total} registros\n              </Typography>\n            )}\n            {financialSummary.monthlyStatus.length === 0 && (\n              <Alert severity=\"info\" sx={{ mt: 1 }}>\n                Nenhum registro encontrado.\n              </Alert>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\n            <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n            <Typography variant=\"h5\" color='primary'>\n              Resumo Financeiro - {userId}\n            </Typography>\n          </Box>\n          <TableContainer component={Paper} elevation={0}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell sx={{ color: blue[600] }}>\n                    <strong>Mês</strong>\n                  </TableCell>\n                  <TableCell sx={{ color: blue[600] }}>\n                    <strong>Tipo</strong>\n                  </TableCell>\n                  <TableCell sx={{ color: blue[600] }}>\n                    <strong>Valor</strong>\n                  </TableCell>\n                  <TableCell sx={{ color: blue[600] }}>\n                    <strong>Descrição</strong>\n                  </TableCell>\n                  <TableCell sx={{ color: blue[600] }}>\n                    <strong>Data</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {payments\n                  .sort(\n                    (a, b) =>\n                      // b.ref_year - a.ref_year || b.ref_month - a.ref_month\n                      a.ref_year - b.ref_year || a.ref_month - b.ref_month\n                  )\n                  .map((payment, index) => (\n                    <TableRow key={`${payment.id || index}`} hover>\n                      <TableCell>\n                        {payment.ref_month === monthCurrent &&\n                          payment.ref_year === yearCurrent ? (\n                          <Typography\n                            variant=\"body2\"\n                            color={blue[600]}\n                            fontWeight={'bold'}\n                          >\n                            {formatMonth(payment.ref_month)} {payment.ref_year}\n                          </Typography>\n                        ) : (\n                          <Typography variant=\"body2\">\n                            {formatMonth(payment.ref_month)}\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {payment.type ? (\n                          <Typography variant=\"body2\">\n                            {payment.type}\n                          </Typography>\n                        ) : (\n                          ''\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        {parseAmount(payment.amount) > 0 ? (\n                          <Chip\n                            label={payment.amount}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            sx={{\n                              backgroundColor: green[100],\n                              color: green[800],\n                              '&:hover': { backgroundColor: green[200] },\n                              fontWeight: 'bold'\n                            }}\n                          />\n                        ) : (\n                        <Chip\n                          label={payment.amount}\n                          size=\"medium\"\n                          variant=\"outlined\"\n                          color=\"error\"\n                          sx={{                              \n                              color: graygreen[800],\n                              '&:hover': { backgroundColor: green[200] },\n                              fontWeight: 'bold'\n                            }}\n                        />\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.Description &&\n                            payment.Description.trim() !== ''\n                            ? payment.Description\n                            : ''}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.date\n                            ? new Date(payment.date).toLocaleDateString('pt-BR')\n                            : ''}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3} sx={{ mt: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" textAlign={'center'} mb={3}>\n            <PaymentQRCode valor={Number(payments[0].amount)} />\n          </Box>\n        </CardContent>\n      </Card >\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}