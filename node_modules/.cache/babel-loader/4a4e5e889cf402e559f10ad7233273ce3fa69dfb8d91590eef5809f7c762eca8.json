{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/MainNav/MainNav.component.tsx\",\n  _s = $RefreshSig$();\nimport { AppBar, Toolbar, Typography, Button, IconButton, Menu, MenuItem } from '@mui/material';\nimport { Menu as MenuIcon } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainNav = _ref => {\n  _s();\n  let {\n    onLogout,\n    onNav,\n    allowedRoutes\n  } = _ref;\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleItemClick = route => {\n    onNav(route);\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        id: \"main-menu\",\n        anchorEl: anchorEl,\n        open: open,\n        onClose: handleClose,\n        MenuListProps: {\n          'aria-labelledby': 'basic-button'\n        },\n        children: allowedRoutes.map((route, idX) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: () => handleItemClick(route),\n          children: route.label\n        }, idX, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: \"large\",\n          edge: \"start\",\n          color: \"#424242\",\n          \"aria-label\": \"menu\",\n          sx: {\n            mr: 2\n          },\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"CPVL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: onLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MainNav, \"+aMDa7FPcESUyQDF1vq0RSMn4/k=\");\n_c = MainNav;\nexport default MainNav;\nvar _c;\n$RefreshReg$(_c, \"MainNav\");","map":{"version":3,"names":["AppBar","Toolbar","Typography","Button","IconButton","Menu","MenuItem","MenuIcon","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MainNav","_ref","_s","onLogout","onNav","allowedRoutes","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","handleItemClick","route","children","position","id","onClose","MenuListProps","map","idX","onClick","label","fileName","_jsxFileName","lineNumber","columnNumber","size","edge","color","sx","mr","variant","component","flexGrow","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/MainNav/MainNav.component.tsx"],"sourcesContent":["import {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n  Menu,\n  MenuItem\n} from '@mui/material';\nimport { Menu as MenuIcon } from '@mui/icons-material';\nimport { useState } from 'react';\n\nexport interface IAllowedRoutes {\n  label: string;\n  route: string;\n}\n\ninterface IProps {\n  onLogout: () => void;\n  onNav: (link: IAllowedRoutes) => void;\n  allowedRoutes: IAllowedRoutes[];\n}\n\nconst MainNav = ({ onLogout, onNav, allowedRoutes }: IProps) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleItemClick = (route: IAllowedRoutes) => {\n    onNav(route);\n    handleClose();\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Menu\n          id=\"main-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button'\n          }}\n        >\n          {allowedRoutes.map((route, idX) => (\n            <MenuItem key={idX} onClick={() => handleItemClick(route)}>\n              {route.label}\n            </MenuItem>\n          ))}\n        </Menu>\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"#424242\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={handleClick}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            CPVL\n          </Typography>\n          <Button color=\"inherit\" onClick={onLogout}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default MainNav;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}