{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/StatusPilot/StatusPilots.component.tsx\",\n  _s = $RefreshSig$();\nimport { Box, FormControl, InputLabel, Button, CircularProgress, Alert } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// validStatus\n\nexport const StatusPilot = _ref => {\n  _s();\n  let {\n    currentStatus,\n    onStatusChange\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [status, setStatus] = useState(currentStatus);\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    data: validStatusCadastral\n  } = useFetch({\n    url: getURI(API.validStatusCadastral)\n  });\n\n  // Hook para fazer a requisição\n  const {\n    doFetch,\n    loading,\n    error\n  } = useFetch({\n    method: 'PATCH'\n  });\n  useEffect(() => {\n    setStatus(currentStatus);\n  }, [currentStatus]);\n  useEffect(() => {\n    if (error) {\n      setErrorMessage('Erro ao atualizar status');\n    }\n  }, [error]);\n  const handleUpdateStatus = async () => {\n    try {\n      const response = await doFetch({\n        url: getURI(API.updateStatusPilot),\n        body: {\n          userId,\n          status\n        },\n        method: 'PATCH'\n      });\n      if (response) {\n        alert('Status atualizado com sucesso!');\n      }\n      onStatusChange(status);\n    } catch (error) {\n      setErrorMessage('Erro ao atualizar status');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: 2,\n    mt: 1,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleUpdateStatus,\n      size: \"small\",\n      sx: {\n        borderRadius: 3\n      },\n      children: \"Atualizar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusPilot, \"2bCfaNT3DiBbDGONuRErzOJ3aes=\", false, function () {\n  return [useParams, useFetch, useFetch];\n});\n_c = StatusPilot;\nvar _c;\n$RefreshReg$(_c, \"StatusPilot\");","map":{"version":3,"names":["Box","FormControl","InputLabel","Button","CircularProgress","Alert","useState","useEffect","useFetch","API","getURI","useParams","jsxDEV","_jsxDEV","StatusPilot","_ref","_s","currentStatus","onStatusChange","userId","status","setStatus","errorMessage","setErrorMessage","data","validStatusCadastral","url","doFetch","loading","error","method","handleUpdateStatus","response","updateStatusPilot","body","alert","display","alignItems","gap","mt","children","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","sx","borderRadius","severity","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/StatusPilot/StatusPilots.component.tsx"],"sourcesContent":["import {\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  CircularProgress,\n  Alert\n} from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { useParams } from 'react-router-dom';\n\ninterface StatusPilotProps {\n  userId: number;\n  currentStatus: string;\n  onStatusChange: (newStatus: string) => void;\n}\n// validStatus\n\nexport const StatusPilot = ({\n  currentStatus,\n  onStatusChange\n}: StatusPilotProps) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [status, setStatus] = useState(currentStatus);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  const { data: validStatusCadastral } = useFetch<string[]>({\n    url: getURI(API.validStatusCadastral)\n  });\n\n  // Hook para fazer a requisição\n  const { doFetch, loading, error } = useFetch({\n    method: 'PATCH'\n  });\n\n  useEffect(() => {\n    setStatus(currentStatus);\n  }, [currentStatus]);\n\n  useEffect(() => {\n    if (error) {\n      setErrorMessage('Erro ao atualizar status');\n    }\n  }, [error]);\n\n  const handleUpdateStatus = async () => {\n    try {\n      const response = await doFetch({\n        url: getURI(API.updateStatusPilot),\n        body: {\n          userId,\n          status,\n        },\n        method: 'PATCH'\n      });\n\n      if (response) {\n        alert('Status atualizado com sucesso!');\n      }\n      onStatusChange(status);\n    } catch (error) {\n      setErrorMessage('Erro ao atualizar status');\n    }\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" gap={2} mt={1}>\n      <FormControl size=\"small\">\n        <InputLabel>Status</InputLabel>\n\n      </FormControl>\n\n      {loading ? (\n        <CircularProgress />\n      ) : (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleUpdateStatus}\n          size=\"small\"\n          sx={{ borderRadius: 3 }}\n        >\n          Atualizar\n        </Button>\n      )}\n\n      {errorMessage && <Alert severity=\"error\">{errorMessage}</Alert>}\n    </Box>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}