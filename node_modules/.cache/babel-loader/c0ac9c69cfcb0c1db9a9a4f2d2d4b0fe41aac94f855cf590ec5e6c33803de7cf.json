{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, FormControlLabel } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const [paymentConfirmed, setPaymentConfirmed] = useState({});\n  const [confirmingMonth, setConfirmingMonth] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const handleSwitchClick = (year, month) => {\n    setConfirmingMonth({\n      year,\n      month\n    });\n    setOpenModal(true);\n  };\n  const confirmPaymentOnServer = async paymentId => {\n    try {\n      const response = await fetch(`${API.confirmPayment}/confirm/${paymentId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Authorization': `Bearer ${token}` // se precisar autenticação\n        },\n        body: JSON.stringify({\n          status: 'Confirmado'\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Erro ao confirmar pagamento. Código: ${response.status}`);\n      }\n      const result = await response.json();\n      console.log('✅ Pagamento confirmado na API:', result);\n      return result;\n    } catch (error) {\n      console.error('❌ Falha ao confirmar pagamento na API:', error);\n      throw error;\n    }\n  };\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n    const {\n      year,\n      month\n    } = confirmingMonth;\n\n    // Encontre o pagamento correspondente\n    const paymentToConfirm = payments.find(p => p.ref_year === year && p.ref_month === month);\n    if (!paymentToConfirm || !paymentToConfirm.id) {\n      console.error('❌ Pagamento não encontrado para confirmação.');\n      return;\n    }\n    try {\n      await confirmPaymentOnServer(paymentToConfirm.id);\n      const key = `${year}-${month}`;\n      setPaymentConfirmed(prevState => ({\n        ...prevState,\n        [key]: true\n      }));\n\n      // Opcional: Atualiza o status local no array de pagamentos\n      setPayments(prev => prev.map(p => p.id === paymentToConfirm.id ? {\n        ...p,\n        status: 'Confirmado'\n      } : p));\n      console.log(`✅ Confirmação de pagamento registrada para ${key}.`);\n    } catch (error) {\n      alert('Erro ao confirmar pagamento. Tente novamente.');\n    } finally {\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.description || 'N/A',\n      status: payment.status || 'N/A',\n      date: payment.date,\n      createdAt: payment.createdAt,\n      updatedAt: payment.updatedAt\n    }));\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) {\n        acc[key] = 0;\n      }\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModal && confirmingMonth && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      bgcolor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1300,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirmar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Deseja confirmar o pagamento do m\\xEAs\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatMonth(confirmingMonth.month)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), \" de\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: confirmingMonth.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Cancelar\",\n            onClick: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"success\",\n            label: \"Confirmar\",\n            onClick: handlePaymentConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro\", ' ', selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 406,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[100],\n                        color: blue[800],\n                        '&:hover': {\n                          backgroundColor: blue[200]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[50],\n                        color: blue[700],\n                        '&:hover': {\n                          backgroundColor: blue[100]\n                        },\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        '&:hover': {\n                          backgroundColor: lime[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 29\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        '&:hover': {\n                          backgroundColor: green[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                        color: \"warning\",\n                        fontSize: \"medium\",\n                        titleAccess: \"\\xC0 confirmar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                        color: \"success\",\n                        fontSize: \"medium\",\n                        titleAccess: \"Confirmado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status !== 'Confirmado' && !paymentConfirmed[`${payment.ref_year}-${payment.ref_month}`] ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        onChange: () => handleSwitchClick(payment.ref_year, payment.ref_month)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 556,\n                        columnNumber: 33\n                      }, this),\n                      label: `Confirmar mês ${payment.ref_month}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 549,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 583,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 586,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 577,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"rxQn+Pglzew5xQf6oNUn3ty1+4I=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","confirmPaymentOnServer","paymentId","response","fetch","confirmPayment","method","headers","body","JSON","stringify","status","ok","Error","result","json","console","log","error","handlePaymentConfirm","paymentToConfirm","find","p","ref_year","ref_month","id","key","prevState","prev","map","alert","handleCancel","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","paymentsError","loading","paymentsLoading","url","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyStatus","monthName","type","description","date","createdAt","updatedAt","monthlyTotalsMissing","acc","paidMonths","Object","values","total","length","totalMissing","financialSummary","availableYears","severity","errorMessage","message","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","label","onClick","color","elevation","size","labelId","value","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","fontWeight","title","titleAccess","toLocaleDateString","control","checked","colSpan","toFixed","mt","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [paymentConfirmed, setPaymentConfirmed] = useState<\n    Record<number, boolean>\n  >({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{\n    year: string;\n    month: number;\n  } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSwitchClick = (year: string, month: number) => {\n    setConfirmingMonth({ year, month });\n    setOpenModal(true);\n  };\n\n  const confirmPaymentOnServer = async (paymentId: number) => {\n    try {\n      const response = await fetch(`${API.confirmPayment}/confirm/${paymentId}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Authorization': `Bearer ${token}` // se precisar autenticação\n        },\n        body: JSON.stringify({\n          status: 'Confirmado'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Erro ao confirmar pagamento. Código: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log('✅ Pagamento confirmado na API:', result);\n      return result;\n    } catch (error) {\n      console.error('❌ Falha ao confirmar pagamento na API:', error);\n      throw error;\n    }\n  };\n\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n\n    const { year, month } = confirmingMonth;\n\n    // Encontre o pagamento correspondente\n    const paymentToConfirm = payments.find(\n      (p) => p.ref_year === year && p.ref_month === month\n    );\n\n    if (!paymentToConfirm || !paymentToConfirm.id) {\n      console.error('❌ Pagamento não encontrado para confirmação.');\n      return;\n    }\n\n    try {\n      await confirmPaymentOnServer(paymentToConfirm.id);\n\n      const key = `${year}-${month}`;\n      setPaymentConfirmed((prevState) => ({\n        ...prevState,\n        [key]: true\n      }));\n\n      // Opcional: Atualiza o status local no array de pagamentos\n      setPayments((prev) =>\n        prev.map((p) =>\n          p.id === paymentToConfirm.id ? { ...p, status: 'Confirmado' } : p\n        )\n      );\n\n      console.log(`✅ Confirmação de pagamento registrada para ${key}.`);\n    } catch (error) {\n      alert('Erro ao confirmar pagamento. Tente novamente.');\n    } finally {\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = filteredPayments\n      .sort(\n        (a, b) =>\n          Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month\n      )\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.description || 'N/A',\n        status: payment.status || 'N/A',\n        date: payment.date,\n        createdAt: payment.createdAt,\n        updatedAt: payment.updatedAt\n      }));\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key]) {\n          (acc as { [key: string]: number })[key] = 0;\n        }\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {openModal && confirmingMonth && (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100vw\"\n          height=\"100vh\"\n          bgcolor=\"rgba(0,0,0,0.5)\"\n          zIndex={1300}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirmar Pagamento\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja confirmar o pagamento do mês{' '}\n              <strong>{formatMonth(confirmingMonth.month)}</strong> de{' '}\n              <strong>{confirmingMonth.year}</strong>?\n            </Typography>\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Chip label=\"Cancelar\" onClick={handleCancel} />\n              <Chip\n                color=\"success\"\n                label=\"Confirmar\"\n                onClick={handlePaymentConfirm}\n              />\n            </Box>\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell\n                      sx={{ color: blue[600], textAlign: 'center' }}\n                    ></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.ref_month === monthCurrent &&\n                            payment.ref_year.toString() ===\n                            yearCurrent.toString() ? (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[100],\n                                color: blue[800],\n                                '&:hover': { backgroundColor: blue[200] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          ) : (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[50],\n                                color: blue[700],\n                                '&:hover': { backgroundColor: blue[100] },\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                '&:hover': { backgroundColor: lime[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                '&:hover': { backgroundColor: green[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{\n                                color: blueGrey[300],\n                                width: 150\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <div>\n                            {payment.status &&\n                              payment.status !== 'Confirmado' ? (\n                              <BatteryCharging60Icon\n                                color=\"warning\"\n                                fontSize=\"medium\"\n                                titleAccess=\"À confirmar\"\n                              />\n                            ) : (\n                              <CheckIcon\n                                color=\"success\"\n                                fontSize=\"medium\"\n                                titleAccess=\"Confirmado\"\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' &&\n                            !paymentConfirmed[\n                            `${payment.ref_year}-${payment.ref_month}`\n                            ] ? (\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={false}\n                                  onChange={() =>\n                                    handleSwitchClick(\n                                      payment.ref_year,\n                                      payment.ref_month\n                                    )\n                                  }\n                                />\n                              }\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n"],"mappings":";;AAAA,SAASA,OAAO,IAAIC,WAAW,QAAQ,qBAAqB;AAC5D,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,gBAAgB,EAChBC,SAAS,EACTC,gBAAgB,EAChBC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,gBAAgB,QACX,eAAe;AACtB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,qBAAqB,MAAM,uCAAuC;AAEzE,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,QAAQ,sBAAsB;AAClE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,GAAG,EAAEC,MAAM,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAgB1C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAqB,CAAC;EAClD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAoB,EAAE,CAAC;EAC/D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAC9C,IAAIkB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CACpC,CAAC;EACD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAEtD,CAAC,CAAC,CAAC;EACL,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAG5C,IAAI,CAAC;EACf,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM2B,iBAAiB,GAAGA,CAACC,IAAY,EAAEC,KAAa,KAAK;IACzDL,kBAAkB,CAAC;MAAEI,IAAI;MAAEC;IAAM,CAAC,CAAC;IACnCH,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,sBAAsB,GAAG,MAAOC,SAAiB,IAAK;IAC1D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAG9B,GAAG,CAAC+B,cAAc,YAAYH,SAAS,EAAE,EAAE;QACzEI,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;UAChB;QACF,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAE;QACV,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wCAAwCV,QAAQ,CAACQ,MAAM,EAAE,CAAC;MAC5E;MAEA,MAAMG,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,MAAM,CAAC;MACrD,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9D,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACzB,eAAe,EAAE;IAEtB,MAAM;MAAEK,IAAI;MAAEC;IAAM,CAAC,GAAGN,eAAe;;IAEvC;IACA,MAAM0B,gBAAgB,GAAGnC,QAAQ,CAACoC,IAAI,CACnCC,CAAC,IAAKA,CAAC,CAACC,QAAQ,KAAKxB,IAAI,IAAIuB,CAAC,CAACE,SAAS,KAAKxB,KAChD,CAAC;IAED,IAAI,CAACoB,gBAAgB,IAAI,CAACA,gBAAgB,CAACK,EAAE,EAAE;MAC7CT,OAAO,CAACE,KAAK,CAAC,8CAA8C,CAAC;MAC7D;IACF;IAEA,IAAI;MACF,MAAMjB,sBAAsB,CAACmB,gBAAgB,CAACK,EAAE,CAAC;MAEjD,MAAMC,GAAG,GAAG,GAAG3B,IAAI,IAAIC,KAAK,EAAE;MAC9BP,mBAAmB,CAAEkC,SAAS,KAAM;QAClC,GAAGA,SAAS;QACZ,CAACD,GAAG,GAAG;MACT,CAAC,CAAC,CAAC;;MAEH;MACAxC,WAAW,CAAE0C,IAAI,IACfA,IAAI,CAACC,GAAG,CAAEP,CAAC,IACTA,CAAC,CAACG,EAAE,KAAKL,gBAAgB,CAACK,EAAE,GAAG;QAAE,GAAGH,CAAC;QAAEX,MAAM,EAAE;MAAa,CAAC,GAAGW,CAClE,CACF,CAAC;MAEDN,OAAO,CAACC,GAAG,CAAC,8CAA8CS,GAAG,GAAG,CAAC;IACnE,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdY,KAAK,CAAC,+CAA+C,CAAC;IACxD,CAAC,SAAS;MACRjC,YAAY,CAAC,KAAK,CAAC;MACnBF,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMoC,YAAY,GAAGA,CAAA,KAAM;IACzBlC,YAAY,CAAC,KAAK,CAAC;IACnBF,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMqC,aAAa,GAAGhD,MAAM,IAAI,CAACiD,KAAK,CAACC,QAAQ,CAAClD,MAAM,CAAC,CAAC;EACxD,MAAMmD,MAAM,GAAGH,aAAa,GACxBzD,MAAM,CAAC,GAAGD,GAAG,CAAC8D,cAAc,IAAIpD,MAAM,EAAE,CAAC,GACzCqD,SAAS;EAEb,MAAM;IACJC,IAAI,EAAEC,YAAY;IAClBrB,KAAK,EAAEsB,aAAa;IACpBC,OAAO,EAAEC;EACX,CAAC,GAAGrE,QAAQ,CAAoB;IAC9BiC,MAAM,EAAE,KAAK;IACbqC,GAAG,EAAER;EACP,CAAC,CAAC;EAEFjE,SAAS,CAAC,MAAM;IACdkB,eAAe,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,IAAIqE,YAAY,EAAE;MAChBrD,WAAW,CAAC0D,KAAK,CAACC,OAAO,CAACN,YAAY,CAAC,GAAGA,YAAY,GAAG,EAAE,CAAC;IAC9D,CAAC,MAAM,IAAIC,aAAa,EAAE;MACxBtD,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAACqD,YAAY,EAAEC,aAAa,CAAC,CAAC;EAEjC,IAAIE,eAAe,EAAE;IACnB,oBACE/D,OAAA,CAACtC,GAAG;MACFyG,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,OAAO;MAAAC,QAAA,eAEjBvE,OAAA,CAACzB,gBAAgB;QAAAiG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,MAAMC,WAAW,GAAIvD,KAAa,IAAK;IACrC,MAAMwD,MAAM,GAAG,CACb,SAAS,EACT,WAAW,EACX,OAAO,EACP,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,QAAQ,EACR,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,CACX;IACD,OAAOA,MAAM,CAACxD,KAAK,GAAG,CAAC,CAAC,IAAI,OAAOA,KAAK,EAAE;EAC5C,CAAC;EAED,MAAMyD,WAAW,GAAIC,MAAW,IAAa;IAC3C,IAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,EAAE,EAAE,OAAO,CAAC;IACtC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAOA,MAAM;IAC7C,IAAI;MACF,OAAOC,UAAU,CAACD,MAAM,CAACnE,QAAQ,CAAC,CAAC,CAACqE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC,CAAC,OAAO1C,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEwC,MAAM,EAAExC,KAAK,CAAC;MACrD,OAAO,CAAC;IACV;EACF,CAAC;EAED,MAAM2C,iBAAiB,GAAGA,CAAA,KAAgB;IACxC,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC9E,QAAQ,CAAC4C,GAAG,CAAEP,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzD,MAAMyC,UAAU,GAAGpB,KAAK,CAACqB,IAAI,CAACH,QAAQ,CAAC;IACvC,OAAOE,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACD,CAAC,CAAC,GAAGC,MAAM,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAyB;IACnD,IAAInF,YAAY,KAAK,KAAK,EAAE,OAAOF,QAAQ;IAC3C,OAAOA,QAAQ,CAACsF,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACjD,QAAQ,KAAKpC,YAAY,CAAC;EACxE,CAAC;EAED,MAAMsF,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,gBAAgB,GAAGJ,mBAAmB,CAAC,CAAC;IAC9C,MAAMK,WAAW,GAAGD,gBAAgB,CAACE,MAAM,CACzC,CAACC,GAAG,EAAEvD,CAAC,KAAKuD,GAAG,GAAGpB,WAAW,CAACnC,CAAC,CAACoC,MAAM,CAAC,EACvC,CACF,CAAC;IAED,MAAMoB,aAAa,GAAGJ,gBAAgB,CACnCR,IAAI,CACH,CAACC,CAAC,EAAEC,CAAC,KACHC,MAAM,CAACF,CAAC,CAAC5C,QAAQ,CAAC,GAAG8C,MAAM,CAACD,CAAC,CAAC7C,QAAQ,CAAC,IAAI4C,CAAC,CAAC3C,SAAS,GAAG4C,CAAC,CAAC5C,SAC/D,CAAC,CACAK,GAAG,CAAE2C,OAAO,KAAM;MACjBzE,IAAI,EAAEyE,OAAO,CAACjD,QAAQ;MACtBvB,KAAK,EAAEwE,OAAO,CAAChD,SAAS;MACxBuD,SAAS,EAAExB,WAAW,CAACiB,OAAO,CAAChD,SAAS,CAAC;MACzCkC,MAAM,EAAED,WAAW,CAACe,OAAO,CAACd,MAAM,CAAC;MACnCsB,IAAI,EAAER,OAAO,CAACQ,IAAI,IAAI,KAAK;MAC3BC,WAAW,EAAET,OAAO,CAACS,WAAW,IAAI,KAAK;MACzCtE,MAAM,EAAE6D,OAAO,CAAC7D,MAAM,IAAI,KAAK;MAC/BuE,IAAI,EAAEV,OAAO,CAACU,IAAI;MAClBC,SAAS,EAAEX,OAAO,CAACW,SAAS;MAC5BC,SAAS,EAAEZ,OAAO,CAACY;IACrB,CAAC,CAAC,CAAC;IAEL,MAAMC,oBAA+C,GACnDX,gBAAgB,CAACE,MAAM,CAAC,CAACU,GAAG,EAAEd,OAAO,KAAK;MACxC,MAAM9C,GAAG,GAAG,GAAG8C,OAAO,CAACjD,QAAQ,IAAIiD,OAAO,CAAChD,SAAS,EAAE;MACtD,IAAI,CAAE8D,GAAG,CAA+B5D,GAAG,CAAC,EAAE;QAC3C4D,GAAG,CAA+B5D,GAAG,CAAC,GAAG,CAAC;MAC7C;MACC4D,GAAG,CAA+B5D,GAAG,CAAC,IAAI+B,WAAW,CAACe,OAAO,CAACd,MAAM,CAAC;MACtE,OAAO4B,GAAG;IACZ,CAAC,EAAE,CAAC,CAA8B,CAAC;;IAErC;IACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACJ,oBAAoB,CAAC,CAACd,MAAM,CAC1DmB,KAAK,IAAK,CAAC,CAACA,KAAK,IAAIA,KAAK,GAAG,CAChC,CAAC,CAACC,MAAM;IACR,MAAMC,YAAY,GAAG,EAAE,GAAGL,UAAU;IAEpC,OAAO;MACLG,KAAK,EAAEhB,gBAAgB,CAACiB,MAAM;MAC9BC,YAAY;MACZjB,WAAW;MACXG;IACF,CAAC;EACH,CAAC;EAED,MAAMe,gBAAgB,GAAGpB,mBAAmB,CAAC,CAAC;EAC9C,MAAMqB,cAAc,GAAGjC,iBAAiB,CAAC,CAAC;EAC1C,MAAMa,gBAAgB,GAAGJ,mBAAmB,CAAC,CAAC;;EAE9C;EACA,IAAI,CAACtC,aAAa,EAAE;IAClBhB,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAElC,MAAM,CAAC;IACxC,oBACEL,OAAA,CAACjC,KAAK;MAACqJ,QAAQ,EAAC,OAAO;MAAA7C,QAAA,EAAC;IAExB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAEZ;EAEA,IAAIZ,eAAe,EAAE;IACnB,oBACE/D,OAAA,CAACtC,GAAG;MAACyG,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAACzB,CAAC,EAAE,CAAE;MAAA4B,QAAA,eAC/CvE,OAAA,CAACzB,gBAAgB;QAAAiG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,IAAId,aAAa,EAAE;IACjB,IAAIwD,YAAY,GAAG,iCAAiC;IACpD,IAAIxD,aAAa,CAACyD,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MACpDF,YAAY,GACV,qFAAqF;IACzF,CAAC,MAAM,IAAIxD,aAAa,CAACyD,OAAO,KAAK,cAAc,EAAE;MACnDD,YAAY,GAAG,yDAAyD;IAC1E,CAAC,MAAM,IAAIxD,aAAa,CAACyD,OAAO,KAAK,oBAAoB,EAAE;MACzDD,YAAY,GACV,sEAAsE;IAC1E,CAAC,MAAM,IAAIxD,aAAa,CAACyD,OAAO,EAAE;MAChCD,YAAY,IAAI,GAAGxD,aAAa,CAACyD,OAAO,EAAE;IAC5C;IACA,oBAAOtH,OAAA,CAACjC,KAAK;MAACqJ,QAAQ,EAAC,OAAO;MAAA7C,QAAA,EAAE8C;IAAY;MAAA7C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EACvD;EAEA,MAAM6C,WAAW,GAAG,IAAI9G,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC5C,MAAM8G,YAAY,GAAG,IAAI/G,IAAI,CAAC,CAAC,CAACgH,QAAQ,CAAC,CAAC,GAAG,CAAC;EAE9C,IAAIpH,QAAQ,CAAC0G,MAAM,KAAK,CAAC,EAAE;IACzB,oBACEhH,OAAA,CAACjC,KAAK;MAACqJ,QAAQ,EAAC,MAAM;MAAA7C,QAAA,EAAC;IAEvB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAEZ;EAEA,oBACE3E,OAAA,CAAAE,SAAA;IAAAqE,QAAA,GACGtD,SAAS,IAAIF,eAAe,iBAC3Bf,OAAA,CAACtC,GAAG;MACFiK,QAAQ,EAAC,OAAO;MAChBC,GAAG,EAAE,CAAE;MACPC,IAAI,EAAE,CAAE;MACRC,KAAK,EAAC,OAAO;MACbC,MAAM,EAAC,OAAO;MACdC,OAAO,EAAC,iBAAiB;MACzBC,MAAM,EAAE,IAAK;MACb9D,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MAAAE,QAAA,eAEnBvE,OAAA,CAACpC,IAAI;QAACsK,EAAE,EAAE;UAAEvF,CAAC,EAAE,CAAC;UAAEwF,QAAQ,EAAE;QAAI,CAAE;QAAA5D,QAAA,gBAChCvE,OAAA,CAACrC,UAAU;UAACyK,OAAO,EAAC,IAAI;UAACC,YAAY;UAAA9D,QAAA,EAAC;QAEtC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb3E,OAAA,CAACrC,UAAU;UAACyK,OAAO,EAAC,OAAO;UAACF,EAAE,EAAE;YAAEI,EAAE,EAAE;UAAE,CAAE;UAAA/D,QAAA,GAAC,wCACN,EAAC,GAAG,eACvCvE,OAAA;YAAAuE,QAAA,EAASK,WAAW,CAAC7D,eAAe,CAACM,KAAK;UAAC;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,OAAG,EAAC,GAAG,eAC5D3E,OAAA;YAAAuE,QAAA,EAASxD,eAAe,CAACK;UAAI;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,KACzC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb3E,OAAA,CAACtC,GAAG;UAACyG,OAAO,EAAC,MAAM;UAACC,cAAc,EAAC,UAAU;UAACmE,GAAG,EAAE,CAAE;UAAAhE,QAAA,gBACnDvE,OAAA,CAAClC,IAAI;YAAC0K,KAAK,EAAC,UAAU;YAACC,OAAO,EAAErF;UAAa;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChD3E,OAAA,CAAClC,IAAI;YACH4K,KAAK,EAAC,SAAS;YACfF,KAAK,EAAC,WAAW;YACjBC,OAAO,EAAEjG;UAAqB;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eAED3E,OAAA,CAACpC,IAAI;MAAC+K,SAAS,EAAE,CAAE;MAACT,EAAE,EAAE;QAAEI,EAAE,EAAE;MAAE,CAAE;MAAA/D,QAAA,eAChCvE,OAAA,CAACnC,WAAW;QAAA0G,QAAA,eACVvE,OAAA,CAACtC,GAAG;UAACyG,OAAO,EAAC,MAAM;UAACE,UAAU,EAAC,QAAQ;UAACkE,GAAG,EAAE,CAAE;UAAAhE,QAAA,gBAC7CvE,OAAA,CAACrC,UAAU;YAACyK,OAAO,EAAC,IAAI;YAACM,KAAK,EAAC,SAAS;YAAAnE,QAAA,EAAC;UAEzC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACb3E,OAAA,CAACrB,WAAW;YAACiK,IAAI,EAAC,OAAO;YAACV,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAI,CAAE;YAAA5D,QAAA,gBAC9CvE,OAAA,CAACpB,UAAU;cAACkE,EAAE,EAAC,mBAAmB;cAAAyB,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACnD3E,OAAA,CAACnB,MAAM;cACLgK,OAAO,EAAC,mBAAmB;cAC3BC,KAAK,EAAEtI,YAAa;cACpBgI,KAAK,EAAC,KAAK;cACXO,QAAQ,EAAGC,CAAC,IAAKvI,eAAe,CAACuI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cACjDZ,EAAE,EAAE;gBAAEgB,YAAY,EAAE;cAAE,CAAE;cAAA3E,QAAA,EAEvB4C,cAAc,CAACjE,GAAG,CAAE9B,IAAI,iBACvBpB,OAAA,CAAClB,QAAQ;gBAAYgK,KAAK,EAAE1H,IAAK;gBAAAmD,QAAA,EAC9BnD;cAAI,GADQA,IAAI;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACd3E,OAAA,CAACrC,UAAU;YAACyK,OAAO,EAAC,OAAO;YAACM,KAAK,EAAC,eAAe;YAAAnE,QAAA,EAC9C,aAAawB,gBAAgB,CAACiB,MAAM,iBAAiBxG,YAAY;UAAE;YAAAgE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEP3E,OAAA,CAACpC,IAAI;MAAC+K,SAAS,EAAE,CAAE;MAAApE,QAAA,eACjBvE,OAAA,CAACxB,SAAS;QAAA+F,QAAA,gBACRvE,OAAA,CAACvB,gBAAgB;UACf0K,UAAU,eAAEnJ,OAAA,CAACd,cAAc;YAACwJ,KAAK,EAAC,SAAS;YAACU,QAAQ,EAAC;UAAO;YAAA5E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAChE,iBAAc,gBAAgB;UAC9B7B,EAAE,EAAC,eAAe;UAAAyB,QAAA,eAElBvE,OAAA,CAACtC,GAAG;YAACyG,OAAO,EAAC,MAAM;YAACE,UAAU,EAAC,QAAQ;YAACiE,EAAE,EAAE,CAAE;YAAA/D,QAAA,gBAC5CvE,OAAA,CAACvC,WAAW;cAACyK,EAAE,EAAE;gBAAEkB,QAAQ,EAAE,EAAE;gBAAEV,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;gBAAEkK,EAAE,EAAE;cAAE;YAAE;cAAA7E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9D3E,OAAA,CAACrC,UAAU;cAACyK,OAAO,EAAC,IAAI;cAACM,KAAK,EAAC,SAAS;cAAAnE,QAAA,GAAC,mBACtB,EAAC,GAAG,EACpB/D,YAAY,KAAK,KAAK,IAAI,KAAKA,YAAY,EAAE;YAAA;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC,eACnB3E,OAAA,CAACtB,gBAAgB;UAAA6F,QAAA,eACfvE,OAAA,CAAC7B,cAAc;YAACmL,SAAS,EAAEhL,KAAM;YAACqK,SAAS,EAAE,CAAE;YAAApE,QAAA,eAC7CvE,OAAA,CAAChC,KAAK;cAAAuG,QAAA,gBACJvE,OAAA,CAAC5B,SAAS;gBAAAmG,QAAA,eACRvE,OAAA,CAAC3B,QAAQ;kBAAAkG,QAAA,gBACPvE,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACvDvE,OAAA;sBAAAuE,QAAA,EAAQ;oBAAG;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACvDvE,OAAA;sBAAAuE,QAAA,EAAQ;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACZ,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACvDvE,OAAA;sBAAAuE,QAAA,EAAQ;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACvDvE,OAAA;sBAAAuE,QAAA,EAAQ;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACd,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACvDvE,OAAA;sBAAAuE,QAAA,EAAQ;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACvDvE,OAAA;sBAAAuE,QAAA,EAAQ;oBAAW;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBACRgK,EAAE,EAAE;sBAAEQ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;sBAAEoK,SAAS,EAAE;oBAAS;kBAAE;oBAAA/E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACZ3E,OAAA,CAAC/B,SAAS;gBAAAsG,QAAA,EACPwB,gBAAgB,CACdR,IAAI,CACH,CAACC,CAAC,EAAEC,CAAC,KACHC,MAAM,CAACF,CAAC,CAAC5C,QAAQ,CAAC,GAAG8C,MAAM,CAACD,CAAC,CAAC7C,QAAQ,CAAC,IACvC4C,CAAC,CAAC3C,SAAS,GAAG4C,CAAC,CAAC5C,SACpB,CAAC,CACAK,GAAG,CAAC,CAAC2C,OAAO,EAAE2D,KAAK,kBAClBxJ,OAAA,CAAC3B,QAAQ;kBAAgCoL,KAAK;kBAAAlF,QAAA,gBAC5CvE,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEqB,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,EACpCsB,OAAO,CAAChD,SAAS,KAAK4E,YAAY,IACjC5B,OAAO,CAACjD,QAAQ,CAAChC,QAAQ,CAAC,CAAC,KAC3B4G,WAAW,CAAC5G,QAAQ,CAAC,CAAC,gBACtBZ,OAAA,CAAClC,IAAI;sBACH0K,KAAK,EAAE5D,WAAW,CAACiB,OAAO,CAAChD,SAAS,CAAE;sBACtC+F,IAAI,EAAC,OAAO;sBACZR,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACFwB,eAAe,EAAEvK,IAAI,CAAC,GAAG,CAAC;wBAC1BuJ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;wBAChB,SAAS,EAAE;0BAAEuK,eAAe,EAAEvK,IAAI,CAAC,GAAG;wBAAE,CAAC;wBACzCwK,UAAU,EAAE,MAAM;wBAClB7B,KAAK,EAAE;sBACT,CAAE;sBACF8B,KAAK,EAAE,GAAG/D,OAAO,CAACjD,QAAQ;oBAAG;sBAAA4B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B,CAAC,gBAEF3E,OAAA,CAAClC,IAAI;sBACH0K,KAAK,EAAE5D,WAAW,CAACiB,OAAO,CAAChD,SAAS,CAAE;sBACtC+F,IAAI,EAAC,OAAO;sBACZR,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACFwB,eAAe,EAAEvK,IAAI,CAAC,EAAE,CAAC;wBACzBuJ,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAC;wBAChB,SAAS,EAAE;0BAAEuK,eAAe,EAAEvK,IAAI,CAAC,GAAG;wBAAE,CAAC;wBACzC2I,KAAK,EAAE;sBACT,CAAE;sBACF8B,KAAK,EAAE,GAAG/D,OAAO,CAACjD,QAAQ;oBAAG;sBAAA4B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B;kBACF;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEqB,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,EACpCsB,OAAO,CAACQ,IAAI,gBACXrG,OAAA,CAAClC,IAAI;sBACH0K,KAAK,EAAE3C,OAAO,CAACQ,IAAK;sBACpBuC,IAAI,EAAC,OAAO;sBACZR,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACFwB,eAAe,EAAEpK,IAAI,CAAC,EAAE,CAAC;wBACzBoJ,KAAK,EAAEpJ,IAAI,CAAC,GAAG,CAAC;wBAChB,SAAS,EAAE;0BAAEoK,eAAe,EAAEpK,IAAI,CAAC,GAAG;wBAAE,CAAC;wBACzCqK,UAAU,EAAE,MAAM;wBAClB7B,KAAK,EAAE;sBACT;oBAAE;sBAAAtD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,GAEF;kBACD;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEqB,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,EACpCO,WAAW,CAACe,OAAO,CAACd,MAAM,CAAC,GAAG,CAAC,gBAC9B/E,OAAA,CAAClC,IAAI;sBACH0K,KAAK,EAAE3C,OAAO,CAACd,MAAO;sBACtB6D,IAAI,EAAC,OAAO;sBACZR,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACFwB,eAAe,EAAErK,KAAK,CAAC,EAAE,CAAC;wBAC1BqJ,KAAK,EAAErJ,KAAK,CAAC,GAAG,CAAC;wBACjB,SAAS,EAAE;0BAAEqK,eAAe,EAAErK,KAAK,CAAC,GAAG;wBAAE,CAAC;wBAC1CsK,UAAU,EAAE,MAAM;wBAClB7B,KAAK,EAAE;sBACT;oBAAE;sBAAAtD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,gBAEF3E,OAAA,CAAClC,IAAI;sBACH0K,KAAK,EAAE3C,OAAO,CAACd,MAAO;sBACtB6D,IAAI,EAAC,QAAQ;sBACbR,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACFQ,KAAK,EAAEtJ,QAAQ,CAAC,GAAG,CAAC;wBACpB0I,KAAK,EAAE;sBACT;oBAAE;sBAAAtD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH;kBACF;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEqB,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACrCvE,OAAA;sBAAAuE,QAAA,EACGsB,OAAO,CAAC7D,MAAM,IACb6D,OAAO,CAAC7D,MAAM,KAAK,YAAY,gBAC/BhC,OAAA,CAACf,qBAAqB;wBACpByJ,KAAK,EAAC,SAAS;wBACfU,QAAQ,EAAC,QAAQ;wBACjBS,WAAW,EAAC;sBAAa;wBAAArF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC1B,CAAC,gBAEF3E,OAAA,CAAChB,SAAS;wBACR0J,KAAK,EAAC,SAAS;wBACfU,QAAQ,EAAC,QAAQ;wBACjBS,WAAW,EAAC;sBAAY;wBAAArF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACzB;oBACF;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAAAqG,QAAA,eACRvE,OAAA,CAACrC,UAAU;sBAACyK,OAAO,EAAC,OAAO;sBAAA7D,QAAA,EACxBsB,OAAO,CAACW,SAAS,GACd,IAAI9F,IAAI,CAACmF,OAAO,CAACW,SAAS,CAAC,CAACsD,kBAAkB,CAC9C,OACF,CAAC,GACC;oBAAE;sBAAAtF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACI;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEqB,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,eACrCvE,OAAA,CAACrC,UAAU;sBAACyK,OAAO,EAAC,OAAO;sBAAA7D,QAAA,EACxBsB,OAAO,CAACY,SAAS,GACd,IAAI/F,IAAI,CAACmF,OAAO,CAACY,SAAS,CAAC,CAACqD,kBAAkB,CAC9C,OACF,CAAC,GACC;oBAAE;sBAAAtF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACI;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eACZ3E,OAAA,CAAC9B,SAAS;oBAACgK,EAAE,EAAE;sBAAEqB,SAAS,EAAE;oBAAS,CAAE;oBAAAhF,QAAA,EACpCsB,OAAO,CAAC7D,MAAM,KAAK,YAAY,IAC9B,CAACnB,gBAAgB,CACjB,GAAGgF,OAAO,CAACjD,QAAQ,IAAIiD,OAAO,CAAChD,SAAS,EAAE,CACzC,gBACD7C,OAAA,CAACjB,gBAAgB;sBACfgL,OAAO,eACL/J,OAAA,CAACF,MAAM;wBACLkK,OAAO,EAAE,KAAM;wBACfjB,QAAQ,EAAEA,CAAA,KACR5H,iBAAiB,CACf0E,OAAO,CAACjD,QAAQ,EAChBiD,OAAO,CAAChD,SACV;sBACD;wBAAA2B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF,CACF;sBACD6D,KAAK,EAAE,iBAAiB3C,OAAO,CAAChD,SAAS;oBAAG;sBAAA2B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC7C,CAAC,GACA;kBAAI;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA,GArIC,GAAGkB,OAAO,CAAC/C,EAAE,IAAI0G,KAAK,EAAE;kBAAAhF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAsI7B,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eAEZ3E,OAAA,CAAC/B,SAAS;gBAAAsG,QAAA,eACRvE,OAAA,CAAC3B,QAAQ;kBAAAkG,QAAA,eACPvE,OAAA,CAAC9B,SAAS;oBAAC+L,OAAO,EAAE,CAAE;oBAAA1F,QAAA,eACpBvE,OAAA,CAACtC,GAAG;sBACF6L,SAAS,EAAC,QAAQ;sBAClB5G,CAAC,EAAE,CAAE;sBACLqF,OAAO,EAAE7I,IAAI,CAAC,EAAE,CAAE;sBAClB+J,YAAY,EAAE,CAAE;sBAAA3E,QAAA,gBAEhBvE,OAAA,CAACrC,UAAU;wBAACyK,OAAO,EAAC,IAAI;wBAACM,KAAK,EAAEvJ,IAAI,CAAC,GAAG,CAAE;wBAAAoF,QAAA,GAAC,KACtC,EAAC2C,gBAAgB,CAAClB,WAAW,CAACkE,OAAO,CAAC,CAAC,CAAC;sBAAA;wBAAA1F,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjC,CAAC,eACb3E,OAAA,CAACrC,UAAU;wBAACyK,OAAO,EAAC,OAAO;wBAACM,KAAK,EAAC,eAAe;wBAAAnE,QAAA,GAAC,mBAC/B,EAAC,MAAM/D,YAAY,EAAE;sBAAA;wBAAAgE,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC5B,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACV;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAENoB,gBAAgB,CAACiB,MAAM,GAAG,CAAC,iBAC1BhH,OAAA,CAACpC,IAAI;MAAC+K,SAAS,EAAE,CAAE;MAACT,EAAE,EAAE;QAAEiC,EAAE,EAAE,CAAC;QAAE7B,EAAE,EAAE;MAAE,CAAE;MAAA/D,QAAA,eACvCvE,OAAA,CAACH,aAAa;QAACoH,YAAY,EAAEC,gBAAgB,CAACD;MAAa;QAAAzC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACP;EAAA,eACD,CAAC;AAEP,CAAC;AAACvE,EAAA,CA1iBWD,cAAc;EAAA,QACNV,SAAS,EAmGxBC,QAAQ;AAAA;AAAA0K,EAAA,GApGDjK,cAAc;AAAA,IAAAiK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}