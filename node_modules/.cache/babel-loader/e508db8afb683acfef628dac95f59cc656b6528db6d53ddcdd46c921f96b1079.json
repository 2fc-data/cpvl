{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, FormControlLabel } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport async function confirmPaymentOnServer(userId, ref_year, ref_month) {\n  if (!userId) throw new Error('userId ausente');\n  const url = getURI(`${API.confirmPayment}/${userId}`);\n  const payload = {\n    ref_year,\n    ref_month\n  };\n  const res = await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Authorization': `Bearer ${token}` // adicione se necessário\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!res.ok) {\n    // tenta extrair mensagem do body, senão status\n    let text = '';\n    try {\n      text = await res.text();\n    } catch (e) {\n      text = res.statusText || '';\n    }\n    throw new Error(`Erro ao confirmar pagamento. Código: ${res.status} ${text ? `- ${text}` : ''}`);\n  }\n  return res.json(); // retorna o body do backend (por exemplo { success: true, payment: {...} })\n}\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const [paymentConfirmed, setPaymentConfirmed] = useState({});\n  const [confirmingMonth, setConfirmingMonth] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const handleSwitchClick = (year, month) => {\n    setConfirmingMonth({\n      year,\n      month\n    });\n    setOpenModal(true);\n  };\n  const handlePaymentConfirm = () => {\n    if (confirmingMonth) {\n      const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n      setPaymentConfirmed(prevState => ({\n        ...prevState,\n        [key]: true\n      }));\n      console.log(`✅ Pagamento confirmado: ${key}`);\n    }\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.description || 'N/A',\n      status: payment.status || 'N/A',\n      date: payment.date,\n      createdAt: payment.createdAt,\n      updatedAt: payment.updatedAt\n    }));\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) {\n        acc[key] = 0;\n      }\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModal && confirmingMonth && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      bgcolor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1300,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirmar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Deseja confirmar o pagamento do m\\xEAs\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatMonth(confirmingMonth.month)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), \" de\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: confirmingMonth.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Cancelar\",\n            onClick: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"success\",\n            label: \"Confirmar\",\n            onClick: handlePaymentConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro\", ' ', selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 385,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 388,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[100],\n                        color: blue[800],\n                        '&:hover': {\n                          backgroundColor: blue[200]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[50],\n                        color: blue[700],\n                        '&:hover': {\n                          backgroundColor: blue[100]\n                        },\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        '&:hover': {\n                          backgroundColor: lime[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 29\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        '&:hover': {\n                          backgroundColor: green[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                        color: \"warning\",\n                        fontSize: \"medium\",\n                        titleAccess: \"\\xC0 confirmar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 493,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                        color: \"success\",\n                        fontSize: \"medium\",\n                        titleAccess: \"Confirmado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 499,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status !== 'Confirmado' && !paymentConfirmed[`${payment.ref_year}-${payment.ref_month}`] ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        onChange: () => handleSwitchClick(payment.ref_year, payment.ref_month)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 33\n                      }, this),\n                      label: `Confirmar mês ${payment.ref_month}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 559,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 553,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"rxQn+Pglzew5xQf6oNUn3ty1+4I=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","confirmPaymentOnServer","userId","ref_year","ref_month","Error","url","confirmPayment","payload","res","fetch","method","headers","body","JSON","stringify","ok","text","e","statusText","status","json","PaymentMonthly","_s","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","handlePaymentConfirm","key","prevState","console","log","handleCancel","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","error","paymentsError","loading","paymentsLoading","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","map","p","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyStatus","monthName","type","description","date","createdAt","updatedAt","monthlyTotalsMissing","acc","paidMonths","Object","values","total","length","totalMissing","financialSummary","availableYears","severity","errorMessage","message","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","label","onClick","color","elevation","size","id","labelId","value","onChange","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","fontWeight","title","titleAccess","toLocaleDateString","control","checked","colSpan","toFixed","mt","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport async function confirmPaymentOnServer(userId: number | string, ref_year: string, ref_month: number) {\n  if (!userId) throw new Error('userId ausente');\n\n  const url = getURI(`${API.confirmPayment}/${userId}`);\n  const payload = { ref_year, ref_month };\n\n  const res = await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      // 'Authorization': `Bearer ${token}` // adicione se necessário\n    },\n    body: JSON.stringify(payload),\n  });\n\n  if (!res.ok) {\n    // tenta extrair mensagem do body, senão status\n    let text = '';\n    try {\n      text = await res.text();\n    } catch (e) {\n      text = res.statusText || '';\n    }\n    throw new Error(`Erro ao confirmar pagamento. Código: ${res.status} ${text ? `- ${text}` : ''}`);\n  }\n\n  return res.json(); // retorna o body do backend (por exemplo { success: true, payment: {...} })\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [paymentConfirmed, setPaymentConfirmed] = useState<\n    Record<number, boolean>\n  >({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{\n    year: string;\n    month: number;\n  } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSwitchClick = (year: string, month: number) => {\n    setConfirmingMonth({ year, month });\n    setOpenModal(true);\n  };\n\n  const handlePaymentConfirm = () => {\n    if (confirmingMonth) {\n      const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n      setPaymentConfirmed((prevState) => ({\n        ...prevState,\n        [key]: true\n      }));\n      console.log(`✅ Pagamento confirmado: ${key}`);\n    }\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = filteredPayments\n      .sort(\n        (a, b) =>\n          Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month\n      )\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.description || 'N/A',\n        status: payment.status || 'N/A',\n        date: payment.date,\n        createdAt: payment.createdAt,\n        updatedAt: payment.updatedAt\n      }));\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key]) {\n          (acc as { [key: string]: number })[key] = 0;\n        }\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {openModal && confirmingMonth && (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100vw\"\n          height=\"100vh\"\n          bgcolor=\"rgba(0,0,0,0.5)\"\n          zIndex={1300}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirmar Pagamento\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja confirmar o pagamento do mês{' '}\n              <strong>{formatMonth(confirmingMonth.month)}</strong> de{' '}\n              <strong>{confirmingMonth.year}</strong>?\n            </Typography>\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Chip label=\"Cancelar\" onClick={handleCancel} />\n              <Chip\n                color=\"success\"\n                label=\"Confirmar\"\n                onClick={handlePaymentConfirm}\n              />\n            </Box>\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell\n                      sx={{ color: blue[600], textAlign: 'center' }}\n                    ></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.ref_month === monthCurrent &&\n                          payment.ref_year.toString() ===\n                            yearCurrent.toString() ? (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[100],\n                                color: blue[800],\n                                '&:hover': { backgroundColor: blue[200] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          ) : (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[50],\n                                color: blue[700],\n                                '&:hover': { backgroundColor: blue[100] },\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                '&:hover': { backgroundColor: lime[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                '&:hover': { backgroundColor: green[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{\n                                color: blueGrey[300],\n                                width: 150\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <div>\n                            {payment.status &&\n                            payment.status !== 'Confirmado' ? (\n                              <BatteryCharging60Icon\n                                color=\"warning\"\n                                fontSize=\"medium\"\n                                titleAccess=\"À confirmar\"\n                              />\n                            ) : (\n                              <CheckIcon\n                                color=\"success\"\n                                fontSize=\"medium\"\n                                titleAccess=\"Confirmado\"\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' &&\n                          !paymentConfirmed[\n                            `${payment.ref_year}-${payment.ref_month}`\n                          ] ? (\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={false}\n                                  onChange={() =>\n                                    handleSwitchClick(\n                                      payment.ref_year,\n                                      payment.ref_month\n                                    )\n                                  }\n                                />\n                              }\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}