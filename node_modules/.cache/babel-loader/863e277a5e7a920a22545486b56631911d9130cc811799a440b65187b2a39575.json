{"ast":null,"code":"// import {\n//   Add as AddIcon,\n//   EmailOutlined as Email,\n//   Phone,\n//   ArrowForward as ArrowForwardIcon\n// } from '@mui/icons-material';\n// import {\n//   Box,\n//   Breadcrumbs,\n//   Divider,\n//   Link,\n//   List,\n//   ListItem,\n//   ListItemButton,\n//   ListItemText,\n//   ListSubheader,\n//   Typography\n// } from '@mui/material';\n// import { blueGrey } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n// import * as Styled from './StatusList.styled';\n\n// interface IPilot {\n//   id?: number;\n//   userId: number;\n//   firstName: string;\n//   lastName: string;\n//   cpf: string;\n//   cellphone: string;\n//   email: string;\n//   status: string;\n// }\n\n// export const StatusList = () => {\n//   const [pilots, setPilots] = useState<Array<IPilot>>();\n//   // const { data } = useFetch<Array<IPilot>>({ url: getURI(API.status) });\n//   const { data, error } = useFetch<{ success: boolean; count: number; data: IPilot[] }>({\n//     url: getURI(API.status),\n//   });\n\n//   useEffect(() => {\n//     if (data && data.length) {\n//       setPilots(data);\n//     }\n//   }, [data]);\n\n//   return (\n//     <>\n//       <Box>\n//         <Box sx={{ padding: '15px' }}>\n//           <Breadcrumbs aria-label=\"breadcrumb\">\n//             <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n//               Dashboard\n//             </Link>\n//             <Typography color=\"text.primary\">Pilotos</Typography>\n//           </Breadcrumbs>\n//         </Box>\n//         {pilots && (\n//           <List\n//             subheader={\n//               <ListSubheader\n//                 component=\"div\"\n//                 id=\"nested-list-subheader\"\n//                 color=\"primary\"\n//               >\n//                 Total de {pilots.length} piloto(s) em nossa base de dados.\n//               </ListSubheader>\n//             }\n//           >\n//             {pilots.map((pilot, userId) => (\n//               <Box key={userId}>\n//                 <ListItem disablePadding>\n//                   <ListItemButton>\n//                     {' '}\n//                     {/* ✅ Clique no item inteiro */}\n//                     <ListItemText\n//                       primary={`${pilot.firstName} ${pilot.lastName}`}\n//                       secondary={\n//                         <span style={{ display: 'flex', alignItems: 'center' }}>\n//                           <Phone sx={{ fontSize: '14px' }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px', paddingTop: '2px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.cellphone}\n//                           </Typography>\n//                           <Email sx={{ fontSize: '15px', ml: 1 }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.email}\n//                           </Typography>\n//                         </span>\n//                       }\n//                       key={pilot.userId}\n//                     />\n//                   </ListItemButton>\n//                 </ListItem>\n//                 <Divider />\n//               </Box>\n//             ))}\n//           </List>\n//         )}\n//       </Box>\n//       <Styled.AddButton color=\"primary\" aria-label=\"add\">\n//         <AddIcon />\n//       </Styled.AddButton>\n//     </>\n//   );\n// };","map":{"version":3,"names":[],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/pages/StatusList/StatusList.component.tsx"],"sourcesContent":["// import {\n//   Add as AddIcon,\n//   EmailOutlined as Email,\n//   Phone,\n//   ArrowForward as ArrowForwardIcon\n// } from '@mui/icons-material';\n// import {\n//   Box,\n//   Breadcrumbs,\n//   Divider,\n//   Link,\n//   List,\n//   ListItem,\n//   ListItemButton,\n//   ListItemText,\n//   ListSubheader,\n//   Typography\n// } from '@mui/material';\n// import { blueGrey } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n// import * as Styled from './StatusList.styled';\n\n// interface IPilot {\n//   id?: number;\n//   userId: number;\n//   firstName: string;\n//   lastName: string;\n//   cpf: string;\n//   cellphone: string;\n//   email: string;\n//   status: string;\n// }\n\n// export const StatusList = () => {\n//   const [pilots, setPilots] = useState<Array<IPilot>>();\n//   // const { data } = useFetch<Array<IPilot>>({ url: getURI(API.status) });\n//   const { data, error } = useFetch<{ success: boolean; count: number; data: IPilot[] }>({\n//     url: getURI(API.status),\n//   });\n\n\n//   useEffect(() => {\n//     if (data && data.length) {\n//       setPilots(data);\n//     }\n//   }, [data]);\n\n//   return (\n//     <>\n//       <Box>\n//         <Box sx={{ padding: '15px' }}>\n//           <Breadcrumbs aria-label=\"breadcrumb\">\n//             <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n//               Dashboard\n//             </Link>\n//             <Typography color=\"text.primary\">Pilotos</Typography>\n//           </Breadcrumbs>\n//         </Box>\n//         {pilots && (\n//           <List\n//             subheader={\n//               <ListSubheader\n//                 component=\"div\"\n//                 id=\"nested-list-subheader\"\n//                 color=\"primary\"\n//               >\n//                 Total de {pilots.length} piloto(s) em nossa base de dados.\n//               </ListSubheader>\n//             }\n//           >\n//             {pilots.map((pilot, userId) => (\n//               <Box key={userId}>\n//                 <ListItem disablePadding>\n//                   <ListItemButton>\n//                     {' '}\n//                     {/* ✅ Clique no item inteiro */}\n//                     <ListItemText\n//                       primary={`${pilot.firstName} ${pilot.lastName}`}\n//                       secondary={\n//                         <span style={{ display: 'flex', alignItems: 'center' }}>\n//                           <Phone sx={{ fontSize: '14px' }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px', paddingTop: '2px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.cellphone}\n//                           </Typography>\n//                           <Email sx={{ fontSize: '15px', ml: 1 }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.email}\n//                           </Typography>\n//                         </span>\n//                       }\n//                       key={pilot.userId}\n//                     />\n//                   </ListItemButton>\n//                 </ListItem>\n//                 <Divider />\n//               </Box>\n//             ))}\n//           </List>\n//         )}\n//       </Box>\n//       <Styled.AddButton color=\"primary\" aria-label=\"add\">\n//         <AddIcon />\n//       </Styled.AddButton>\n//     </>\n//   );\n// };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}