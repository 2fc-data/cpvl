{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { QrCodePix } from 'qrcode_pix';\nimport { FormControl, InputLabel, MenuItem, Select, Typography, Button, Card, CardContent, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    totalMissing\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [qrCodeImage, setQrCodeImage] = useState('');\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [pixPayload, setPixPayload] = useState('');\n  const [isGeneratingQR, setIsGeneratingQR] = useState(false);\n\n  // Função para calcular o valor baseado no tipo de pagamento\n  const getPaymentValue = paymentType => {\n    switch (paymentType) {\n      case 'mensal':\n        return 50;\n      case 'trimestral':\n        return 50 * 3;\n      // 150\n      case 'semestral':\n        return 50 * 6;\n      // 300\n      case 'anual':\n        return 50 * 12;\n      // 600\n      default:\n        return 0;\n    }\n  };\n\n  // Função para obter desconto (se houver)\n  const getDiscount = paymentType => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.05;\n      // 5% de desconto\n      case 'semestral':\n        return 0.10;\n      // 10% de desconto\n      case 'anual':\n        return 0.15;\n      // 15% de desconto\n      default:\n        return 0;\n    }\n  };\n\n  // Calcular valor final com desconto\n  const calculateFinalValue = paymentType => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return baseValue * (1 - discount);\n  };\n  const generatePixQRCode = async paymentType => {\n    setIsGeneratingQR(true);\n    try {\n      const finalValue = calculateFinalValue(paymentType);\n      console.log('Generating PIX QR Code...', {\n        paymentType,\n        finalValue,\n        userId\n      });\n      const qrCodePix = QrCodePix({\n        version: '01',\n        key: process.env.REACT_APP_PIX_KEY_CPVL || 'test@example.com',\n        name: 'CPVL',\n        city: 'SAO PAULO',\n        value: finalValue,\n        transactionId: `CPVL${userId}_${paymentType}_${Date.now()}`,\n        message: `Mensalidade ${paymentType} - Usuario ${userId} - R$ ${finalValue.toFixed(2)}`\n      });\n      console.log('QrCodePix created:', qrCodePix);\n\n      // Get the payload for copy-paste\n      const payload = qrCodePix.payload();\n      console.log('Payload generated:', payload);\n      setPixPayload(payload);\n\n      // Try different methods to get the QR code image\n      try {\n        const qrCodeBase64 = await qrCodePix.base64();\n        setQrCodeImage(`data:image/png;base64,${qrCodeBase64}`);\n        console.log('QR Code generated with base64()');\n      } catch (base64Error) {\n        console.log('base64() failed, trying alternative method...', base64Error);\n        try {\n          const qrCodeDataUrl = await qrCodePix.toImage();\n          setQrCodeImage(qrCodeDataUrl);\n          console.log('QR Code generated with toImage()');\n        } catch (imageError) {\n          console.log('toImage() failed, using payload only...', imageError);\n          setQrCodeImage('');\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao gerar QR Code PIX:', error);\n      setQrCodeImage('');\n      setPixPayload('');\n    } finally {\n      setIsGeneratingQR(false);\n    }\n  };\n  useEffect(() => {\n    console.log('useEffect triggered:', {\n      selectedPaymentType,\n      userId\n    });\n    if (selectedPaymentType) {\n      generatePixQRCode(selectedPaymentType);\n    } else {\n      setQrCodeImage('');\n      setPixPayload('');\n    }\n  }, [selectedPaymentType, userId]);\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n    return types;\n  };\n  const handleChange = event => {\n    console.log('Payment type selected:', event.target.value);\n    setSelectedPaymentType(event.target.value);\n  };\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pixPayload);\n      alert('Código PIX copiado para a área de transferência!');\n    } catch (err) {\n      console.error('Erro ao copiar:', err);\n      const textArea = document.createElement('textarea');\n      textArea.value = pixPayload;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      alert('Código PIX copiado!');\n    }\n  };\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [totalMissing > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Faltam \", totalMissing, \" meses de pagamento.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"tipoPagamento\",\n        children: \"Tipo do pagamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"tipoPagamento\",\n        value: selectedPaymentType,\n        label: \"Tipo do pagamento\",\n        onChange: handleChange,\n        disabled: availableTypes.length === 0,\n        children: availableTypes.length === 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          disabled: true,\n          children: \"Nenhuma op\\xE7\\xE3o dispon\\xEDvel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this) : availableTypes.map((type, index) => {\n          const value = calculateFinalValue(type);\n          const discount = getDiscount(type);\n          const base = getPaymentValue(type);\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: type.charAt(0).toUpperCase() + type.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#666'\n                },\n                children: discount > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: 'line-through'\n                    },\n                    children: [\"R$ \", base.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 27\n                  }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: 'green',\n                      fontWeight: 'bold'\n                    },\n                    children: [\"R$ \", value.toFixed(2), \" (\", (discount * 100).toFixed(0), \"% desc.)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : `R$ ${value.toFixed(2)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), selectedPaymentType && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Pagamento PIX - \", selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), currentDiscount > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              textDecoration: 'line-through',\n              color: '#999'\n            },\n            children: [\"Valor original: R$ \", baseValue.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            style: {\n              color: 'green',\n              fontWeight: 'bold'\n            },\n            children: [\"Desconto de \", (currentDiscount * 100).toFixed(0), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          sx: {\n            mb: 2\n          },\n          children: [\"R$ \", currentValue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), isGeneratingQR && /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mb: 2\n          },\n          children: \"Gerando QR Code PIX...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this), pixPayload && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [qrCodeImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2\n              },\n              children: \"Escaneie o QR Code com o app do seu banco:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: qrCodeImage,\n                alt: \"QR Code PIX\",\n                style: {\n                  maxWidth: '300px',\n                  height: 'auto',\n                  border: '1px solid #e0e0e0',\n                  borderRadius: '8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2,\n              color: 'orange'\n            },\n            children: \"QR Code image n\\xE3o dispon\\xEDvel, use o c\\xF3digo PIX abaixo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"C\\xF3digo PIX (Copia e Cola):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: pixPayload,\n              readOnly: true,\n              rows: 4,\n              style: {\n                width: '100%',\n                padding: '8px',\n                fontSize: '11px',\n                fontFamily: 'monospace',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                resize: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: copyToClipboard,\n            sx: {\n              mt: 1\n            },\n            children: \"\\uD83D\\uDCCB Copiar C\\xF3digo PIX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"lGjAFNEbexFGf+KKT6tY64K42oU=\", false, function () {\n  return [useParams];\n});\n_c = PaymentQRCode;\nexport default PaymentQRCode;\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useEffect","useState","useParams","QrCodePix","FormControl","InputLabel","MenuItem","Select","Typography","Button","Card","CardContent","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentQRCode","_ref","_s","totalMissing","userId","qrCodeImage","setQrCodeImage","selectedPaymentType","setSelectedPaymentType","pixPayload","setPixPayload","isGeneratingQR","setIsGeneratingQR","getPaymentValue","paymentType","getDiscount","calculateFinalValue","baseValue","discount","generatePixQRCode","finalValue","console","log","qrCodePix","version","key","process","env","REACT_APP_PIX_KEY_CPVL","name","city","value","transactionId","Date","now","message","toFixed","payload","qrCodeBase64","base64","base64Error","qrCodeDataUrl","toImage","imageError","error","undefined","types","push","handleChange","event","target","copyToClipboard","navigator","clipboard","writeText","alert","err","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","availableTypes","currentValue","currentDiscount","children","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","id","labelId","label","onChange","disabled","length","map","type","index","base","charAt","toUpperCase","slice","style","fontSize","color","textDecoration","fontWeight","mt","textAlign","gutterBottom","src","alt","maxWidth","height","border","borderRadius","readOnly","rows","width","padding","fontFamily","resize","onClick","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { QrCodePix } from 'qrcode_pix';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Box\n} from '@mui/material';\n\ninterface PaymentProps {\n  totalMissing: number;\n}\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ totalMissing }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [qrCodeImage, setQrCodeImage] = useState<string>('');\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [pixPayload, setPixPayload] = useState<string>('');\n  const [isGeneratingQR, setIsGeneratingQR] = useState<boolean>(false);\n\n  // Função para calcular o valor baseado no tipo de pagamento\n  const getPaymentValue = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'mensal':\n        return 50;\n      case 'trimestral':\n        return 50 * 3; // 150\n      case 'semestral':\n        return 50 * 6; // 300\n      case 'anual':\n        return 50 * 12; // 600\n      default:\n        return 0;\n    }\n  };\n\n  // Função para obter desconto (se houver)\n  const getDiscount = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.05; // 5% de desconto\n      case 'semestral':\n        return 0.10; // 10% de desconto\n      case 'anual':\n        return 0.15; // 15% de desconto\n      default:\n        return 0;\n    }\n  };\n\n  // Calcular valor final com desconto\n  const calculateFinalValue = (paymentType: string): number => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return baseValue * (1 - discount);\n  };\n\n  const generatePixQRCode = async (paymentType: string) => {\n    setIsGeneratingQR(true);\n    \n    try {\n      const finalValue = calculateFinalValue(paymentType);\n      console.log('Generating PIX QR Code...', { paymentType, finalValue, userId });\n      \n      const qrCodePix = QrCodePix({\n        version: '01',\n        key: process.env.REACT_APP_PIX_KEY_CPVL || 'test@example.com',\n        name: 'CPVL',\n        city: 'SAO PAULO',\n        value: finalValue,\n        transactionId: `CPVL${userId}_${paymentType}_${Date.now()}`,\n        message: `Mensalidade ${paymentType} - Usuario ${userId} - R$ ${finalValue.toFixed(2)}`,\n      });\n\n      console.log('QrCodePix created:', qrCodePix);\n\n      // Get the payload for copy-paste\n      const payload = qrCodePix.payload();\n      console.log('Payload generated:', payload);\n      setPixPayload(payload);\n\n      // Try different methods to get the QR code image\n      try {\n        const qrCodeBase64 = await qrCodePix.base64();\n        setQrCodeImage(`data:image/png;base64,${qrCodeBase64}`);\n        console.log('QR Code generated with base64()');\n      } catch (base64Error) {\n        console.log('base64() failed, trying alternative method...', base64Error);\n        \n        try {\n          const qrCodeDataUrl = await qrCodePix.toImage();\n          setQrCodeImage(qrCodeDataUrl);\n          console.log('QR Code generated with toImage()');\n        } catch (imageError) {\n          console.log('toImage() failed, using payload only...', imageError);\n          setQrCodeImage('');\n        }\n      }\n      \n    } catch (error) {\n      console.error('Erro ao gerar QR Code PIX:', error);\n      setQrCodeImage('');\n      setPixPayload('');\n    } finally {\n      setIsGeneratingQR(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log('useEffect triggered:', { selectedPaymentType, userId });\n    \n    if (selectedPaymentType) {\n      generatePixQRCode(selectedPaymentType);\n    } else {\n      setQrCodeImage('');\n      setPixPayload('');\n    }\n  }, [selectedPaymentType, userId]);\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    console.log('Payment type selected:', event.target.value);\n    setSelectedPaymentType(event.target.value);\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pixPayload);\n      alert('Código PIX copiado para a área de transferência!');\n    } catch (err) {\n      console.error('Erro ao copiar:', err);\n      const textArea = document.createElement('textarea');\n      textArea.value = pixPayload;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      alert('Código PIX copiado!');\n    }\n  };\n\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n\n  return (\n    <Box>\n      {totalMissing > 0 && (\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Faltam {totalMissing} meses de pagamento.\n        </Typography>\n      )}\n      \n      <FormControl fullWidth sx={{ mb: 3 }}>\n        <InputLabel id=\"tipoPagamento\">Tipo do pagamento</InputLabel>\n        <Select\n          labelId=\"tipoPagamento\"\n          value={selectedPaymentType}\n          label=\"Tipo do pagamento\"\n          onChange={handleChange}\n          disabled={availableTypes.length === 0}\n        >\n          {availableTypes.length === 0 ? (\n            <MenuItem value=\"\" disabled>\n              Nenhuma opção disponível\n            </MenuItem>\n          ) : (\n            availableTypes.map((type: string, index: number) => {\n              const value = calculateFinalValue(type);\n              const discount = getDiscount(type);\n              const base = getPaymentValue(type);\n              \n              return (\n                <MenuItem key={index} value={type}>\n                  <div>\n                    <div>{type.charAt(0).toUpperCase() + type.slice(1)}</div>\n                    <div style={{ fontSize: '12px', color: '#666' }}>\n                      {discount > 0 ? (\n                        <>\n                          <span style={{ textDecoration: 'line-through' }}>R$ {base.toFixed(2)}</span>\n                          {' '}\n                          <span style={{ color: 'green', fontWeight: 'bold' }}>\n                            R$ {value.toFixed(2)} ({(discount * 100).toFixed(0)}% desc.)\n                          </span>\n                        </>\n                      ) : (\n                        `R$ ${value.toFixed(2)}`\n                      )}\n                    </div>\n                  </div>\n                </MenuItem>\n              );\n            })\n          )}\n        </Select>\n      </FormControl>\n      \n      {selectedPaymentType && (\n        <Card sx={{ mt: 2 }}>\n          <CardContent sx={{ textAlign: 'center' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Pagamento PIX - {selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)}\n            </Typography>\n            \n            {currentDiscount > 0 && (\n              <Box sx={{ mb: 1 }}>\n                <Typography variant=\"body2\" style={{ textDecoration: 'line-through', color: '#999' }}>\n                  Valor original: R$ {baseValue.toFixed(2)}\n                </Typography>\n                <Typography variant=\"body2\" style={{ color: 'green', fontWeight: 'bold' }}>\n                  Desconto de {(currentDiscount * 100).toFixed(0)}%\n                </Typography>\n              </Box>\n            )}\n            \n            <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 2 }}>\n              R$ {currentValue.toFixed(2)}\n            </Typography>\n            \n            {isGeneratingQR && (\n              <Typography sx={{ mb: 2 }}>Gerando QR Code PIX...</Typography>\n            )}\n            \n            {pixPayload && (\n              <>\n                {qrCodeImage ? (\n                  <>\n                    <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                      Escaneie o QR Code com o app do seu banco:\n                    </Typography>\n                    \n                    <Box sx={{ mb: 2 }}>\n                      <img \n                        src={qrCodeImage} \n                        alt=\"QR Code PIX\"\n                        style={{ \n                          maxWidth: '300px', \n                          height: 'auto',\n                          border: '1px solid #e0e0e0',\n                          borderRadius: '8px'\n                        }}\n                      />\n                    </Box>\n                  </>\n                ) : (\n                  <Typography variant=\"body2\" sx={{ mb: 2, color: 'orange' }}>\n                    QR Code image não disponível, use o código PIX abaixo:\n                  </Typography>\n                )}\n                \n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Código PIX (Copia e Cola):\n                </Typography>\n                \n                <Box sx={{ mb: 2 }}>\n                  <textarea\n                    value={pixPayload}\n                    readOnly\n                    rows={4}\n                    style={{\n                      width: '100%',\n                      padding: '8px',\n                      fontSize: '11px',\n                      fontFamily: 'monospace',\n                      border: '1px solid #ddd',\n                      borderRadius: '4px',\n                      resize: 'none'\n                    }}\n                  />\n                </Box>\n                \n                <Button \n                  variant=\"contained\" \n                  onClick={copyToClipboard}\n                  sx={{ mt: 1 }}\n                >\n                  📋 Copiar Código PIX\n                </Button>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default PaymentQRCode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}