{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport { FormControl, InputLabel, MenuItem, Select, Typography, Button, Card, CardContent, Box, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    totalMissing\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [pixCode, setPixCode] = useState('');\n  const [currentTransactionId, setCurrentTransactionId] = useState('');\n\n  // Generate unique transaction ID\n  const generateTransactionId = useCallback(paymentType => {\n    const timestamp = Date.now().toString();\n    const userPart = userId ? userId.slice(-3) : '000'; // Last 3 chars of userId\n    const typePart = paymentType.substring(0, 3).toUpperCase(); // First 3 chars of payment type\n\n    // Format: CPVL + UserPart + TypePart + Timestamp(last 8 digits)\n    // Total: 4 + 3 + 3 + 8 = 18 characters (within 25 limit)\n    const transactionId = `CPVL${userPart}${typePart}${timestamp.slice(-8)}`;\n    console.log('Generated Transaction ID:', transactionId, 'Length:', transactionId.length);\n    return transactionId;\n  }, [userId]);\n  const getPaymentValue = paymentType => {\n    switch (paymentType) {\n      case 'mensal':\n        return 50;\n      case 'trimestral':\n        return 50 * 3;\n      case 'semestral':\n        return 50 * 6;\n      case 'anual':\n        return 50 * 12;\n      default:\n        return 0;\n    }\n  };\n  const getDiscount = paymentType => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.05;\n      case 'semestral':\n        return 0.10;\n      case 'anual':\n        return 0.15;\n      default:\n        return 0;\n    }\n  };\n  const calculateFinalValue = paymentType => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n    return types;\n  };\n  const handleChange = event => {\n    const newPaymentType = event.target.value;\n    setSelectedPaymentType(newPaymentType);\n    setPixCode(''); // Clear previous code\n\n    // Generate new transaction ID for the new payment type\n    if (newPaymentType) {\n      const newTransactionId = generateTransactionId(newPaymentType);\n      setCurrentTransactionId(newTransactionId);\n    }\n  };\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [totalMissing > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Faltam \", totalMissing, \" meses de pagamento.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"tipoPagamento\",\n        children: \"Tipo do pagamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"tipoPagamento\",\n        value: selectedPaymentType,\n        label: \"Tipo do pagamento\",\n        onChange: handleChange,\n        disabled: availableTypes.length === 0,\n        children: availableTypes.map((type, index) => {\n          const amount = calculateFinalValue(type);\n          const discount = getDiscount(type);\n          const base = getPaymentValue(type);\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: type.charAt(0).toUpperCase() + type.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'right'\n                },\n                children: [discount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `-${(discount * 100).toFixed(0)}%`,\n                  size: \"small\",\n                  color: \"success\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [\"R$ \", amount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), selectedPaymentType && currentTransactionId && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Pagamento PIX - \", selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), currentDiscount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Economize ${(currentDiscount * 100).toFixed(0)}% - R$ ${(baseValue - currentValue).toFixed(2)}`,\n          color: \"success\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"primary\",\n          sx: {\n            mb: 3\n          },\n          children: [\"R$ \", currentValue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            p: 1,\n            backgroundColor: '#f5f5f5',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            display: \"block\",\n            children: [\"Transaction ID: \", currentTransactionId, \" (Length: \", currentTransactionId.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            display: \"block\",\n            children: [\"Amount: \", currentValue]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(QRCodePix, {\n            pixkey: process.env.REACT_APP_PIX_KEY_CPVL || '',\n            merchant: \"CPVL\",\n            city: \"SAO PAULO\",\n            cep: \"01310100\",\n            amount: currentValue // Use 'amount' instead of 'value'\n            ,\n            transactionId: currentTransactionId,\n            message: `Mensalidade ${selectedPaymentType} - Usuario ${userId || 'N/A'}`,\n            size: 280,\n            bgColor: \"#FFFFFF\",\n            fgColor: \"#000000\",\n            level: \"M\",\n            includeMargin: true,\n            onPixCodeGenerated: setPixCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), pixCode && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"C\\xF3digo PIX (Copia e Cola):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: pixCode,\n              readOnly: true,\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '11px',\n                fontFamily: 'monospace',\n                border: '1px solid #ddd',\n                borderRadius: '8px',\n                resize: 'none',\n                backgroundColor: '#f9f9f9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            onClick: copyToClipboard,\n            sx: {\n              mt: 1,\n              borderRadius: 2,\n              textTransform: 'none'\n            },\n            children: \"\\uD83D\\uDCCB Copiar C\\xF3digo PIX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"ZRn1Si2n2d3dH/gWzDH3nSQ19QU=\", false, function () {\n  return [useParams];\n});\n_c = PaymentQRCode;\nexport default PaymentQRCode;\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useState","useCallback","useParams","QRCodePix","FormControl","InputLabel","MenuItem","Select","Typography","Button","Card","CardContent","Box","Chip","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentQRCode","_ref","_s","totalMissing","userId","selectedPaymentType","setSelectedPaymentType","pixCode","setPixCode","currentTransactionId","setCurrentTransactionId","generateTransactionId","paymentType","timestamp","Date","now","toString","userPart","slice","typePart","substring","toUpperCase","transactionId","console","log","length","getPaymentValue","getDiscount","calculateFinalValue","baseValue","discount","Math","round","undefined","types","push","handleChange","event","newPaymentType","target","value","newTransactionId","copyToClipboard","navigator","clipboard","writeText","alert","err","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","availableTypes","currentValue","currentDiscount","children","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","id","labelId","label","onChange","disabled","map","type","index","amount","base","display","justifyContent","width","charAt","textAlign","toFixed","size","color","mr","style","fontWeight","mt","gutterBottom","p","backgroundColor","borderRadius","pixkey","process","env","REACT_APP_PIX_KEY_CPVL","merchant","city","cep","message","bgColor","fgColor","level","includeMargin","onPixCodeGenerated","readOnly","rows","padding","fontSize","fontFamily","border","resize","onClick","textTransform","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Box,\n  Chip\n} from '@mui/material';\n\ninterface PaymentProps {\n  totalMissing: number;\n}\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ totalMissing }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [pixCode, setPixCode] = useState<string>('');\n  const [currentTransactionId, setCurrentTransactionId] = useState<string>('');\n\n  // Generate unique transaction ID\n  const generateTransactionId = useCallback((paymentType: string): string => {\n    const timestamp = Date.now().toString();\n    const userPart = userId ? userId.slice(-3) : '000'; // Last 3 chars of userId\n    const typePart = paymentType.substring(0, 3).toUpperCase(); // First 3 chars of payment type\n    \n    // Format: CPVL + UserPart + TypePart + Timestamp(last 8 digits)\n    // Total: 4 + 3 + 3 + 8 = 18 characters (within 25 limit)\n    const transactionId = `CPVL${userPart}${typePart}${timestamp.slice(-8)}`;\n    \n    console.log('Generated Transaction ID:', transactionId, 'Length:', transactionId.length);\n    return transactionId;\n  }, [userId]);\n\n  const getPaymentValue = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'mensal': return 50;\n      case 'trimestral': return 50 * 3;\n      case 'semestral': return 50 * 6;\n      case 'anual': return 50 * 12;\n      default: return 0;\n    }\n  };\n\n  const getDiscount = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'trimestral': return 0.05;\n      case 'semestral': return 0.10;\n      case 'anual': return 0.15;\n      default: return 0;\n    }\n  };\n\n  const calculateFinalValue = (paymentType: string): number => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    const newPaymentType = event.target.value;\n    setSelectedPaymentType(newPaymentType);\n    setPixCode(''); // Clear previous code\n    \n    // Generate new transaction ID for the new payment type\n    if (newPaymentType) {\n      const newTransactionId = generateTransactionId(newPaymentType);\n      setCurrentTransactionId(newTransactionId);\n    }\n  };\n\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n\n  return (\n    <Box>\n      {totalMissing > 0 && (\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Faltam {totalMissing} meses de pagamento.\n        </Typography>\n      )}\n      \n      <FormControl fullWidth sx={{ mb: 3 }}>\n        <InputLabel id=\"tipoPagamento\">Tipo do pagamento</InputLabel>\n        <Select\n          labelId=\"tipoPagamento\"\n          value={selectedPaymentType}\n          label=\"Tipo do pagamento\"\n          onChange={handleChange}\n          disabled={availableTypes.length === 0}\n        >\n          {availableTypes.map((type: string, index: number) => {\n            const amount = calculateFinalValue(type);\n            const discount = getDiscount(type);\n            const base = getPaymentValue(type);\n            \n            return (\n              <MenuItem key={index} value={type}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n                  <span>{type.charAt(0).toUpperCase() + type.slice(1)}</span>\n                  <Box sx={{ textAlign: 'right' }}>\n                    {discount > 0 && (\n                      <Chip \n                        label={`-${(discount * 100).toFixed(0)}%`} \n                        size=\"small\" \n                        color=\"success\" \n                        sx={{ mr: 1 }} \n                      />\n                    )}\n                    <span style={{ fontWeight: 'bold' }}>\n                      R$ {amount.toFixed(2)}\n                    </span>\n                  </Box>\n                </Box>\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      \n      {selectedPaymentType && currentTransactionId && (\n        <Card sx={{ mt: 2 }}>\n          <CardContent sx={{ textAlign: 'center' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Pagamento PIX - {selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)}\n            </Typography>\n            \n            {currentDiscount > 0 && (\n              <Chip \n                label={`Economize ${(currentDiscount * 100).toFixed(0)}% - R$ ${(baseValue - currentValue).toFixed(2)}`}\n                color=\"success\"\n                sx={{ mb: 2 }}\n              />\n            )}\n            \n            <Typography variant=\"h4\" color=\"primary\" sx={{ mb: 3 }}>\n              R$ {currentValue.toFixed(2)}\n            </Typography>\n\n            {/* Debug Info - Remove after testing */}\n            <Box sx={{ mb: 2, p: 1, backgroundColor: '#f5f5f5', borderRadius: 1 }}>\n              <Typography variant=\"caption\" display=\"block\">\n                Transaction ID: {currentTransactionId} (Length: {currentTransactionId.length})\n              </Typography>\n              <Typography variant=\"caption\" display=\"block\">\n                Amount: {currentValue}\n              </Typography>\n            </Box>\n            \n            {/* QR Code */}\n            <Box sx={{ mb: 3 }}>\n              <QRCodePix\n                pixkey={process.env.REACT_APP_PIX_KEY_CPVL || ''}\n                merchant=\"CPVL\"\n                city=\"SAO PAULO\"\n                cep=\"01310100\"\n                amount={currentValue} // Use 'amount' instead of 'value'\n                transactionId={currentTransactionId}\n                message={`Mensalidade ${selectedPaymentType} - Usuario ${userId || 'N/A'}`}\n                size={280}\n                bgColor=\"#FFFFFF\"\n                fgColor=\"#000000\"\n                level=\"M\"\n                includeMargin={true}\n                onPixCodeGenerated={setPixCode}\n              />\n            </Box>\n            \n            {pixCode && (\n              <>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Código PIX (Copia e Cola):\n                </Typography>\n                \n                <Box sx={{ mb: 3 }}>\n                  <textarea\n                    value={pixCode}\n                    readOnly\n                    rows={3}\n                    style={{\n                      width: '100%',\n                      padding: '12px',\n                      fontSize: '11px',\n                      fontFamily: 'monospace',\n                      border: '1px solid #ddd',\n                      borderRadius: '8px',\n                      resize: 'none',\n                      backgroundColor: '#f9f9f9'\n                    }}\n                  />\n                </Box>\n                \n                <Button \n                  variant=\"contained\" \n                  size=\"large\"\n                  onClick={copyToClipboard}\n                  sx={{ \n                    mt: 1,\n                    borderRadius: 2,\n                    textTransform: 'none'\n                  }}\n                >\n                  📋 Copiar Código PIX\n                </Button>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default PaymentQRCode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}