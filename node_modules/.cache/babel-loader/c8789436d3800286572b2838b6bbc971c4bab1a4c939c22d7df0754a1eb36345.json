{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, FormControlLabel } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState(null);\n  const [paymentConfirmed, setPaymentConfirmed] = useState({});\n  const [confirmingMonth, setConfirmingMonth] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const handleSwitchClick = (year, month) => {\n    setConfirmingMonth({\n      year,\n      month\n    });\n    setOpenModal(true);\n  };\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n    try {\n      // Chama a API\n      const resp = await confirmPaymentOnServer(userId, confirmingMonth.year, confirmingMonth.month);\n      // resp pode ser { success: true, payment: { ... } } conforme backend\n\n      // Atualiza o estado local: marca payment com status 'Confirmado' e updatedAt\n      setPayments(prev => prev.map(p => p.ref_year === confirmingMonth.year && p.ref_month === confirmingMonth.month ? {\n        ...p,\n        status: 'Confirmado',\n        updatedAt: new Date().toISOString()\n      } // ajuste conforme format\n      : p));\n\n      // Marca confirmação local (para evitar re-render de modal etc)\n      setPaymentConfirmed(prevState => ({\n        ...prevState,\n        [key]: true\n      }));\n      console.log('✅ Pagamento confirmado (server):', resp);\n    } catch (err) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      setConfirmingError(err.message || 'Erro desconhecido ao confirmar pagamento.');\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.description || 'N/A',\n      status: payment.status || 'N/A',\n      date: payment.date,\n      createdAt: payment.createdAt,\n      updatedAt: payment.updatedAt\n    }));\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) {\n        acc[key] = 0;\n      }\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModal && confirmingMonth && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      bgcolor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1300,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirmar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Deseja confirmar o pagamento do m\\xEAs\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatMonth(confirmingMonth.month)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), \" de\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: confirmingMonth.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Cancelar\",\n            onClick: handleCancel,\n            disabled: confirmingLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"success\",\n            label: confirmingLoading ? 'Confirmando...' : 'Confirmar',\n            onClick: handlePaymentConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), confirmingError && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"caption\",\n          mt: 1,\n          children: confirmingError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro\", ' ', selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 390,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[100],\n                        color: blue[800],\n                        '&:hover': {\n                          backgroundColor: blue[200]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[50],\n                        color: blue[700],\n                        '&:hover': {\n                          backgroundColor: blue[100]\n                        },\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        '&:hover': {\n                          backgroundColor: lime[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 29\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        '&:hover': {\n                          backgroundColor: green[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                        color: \"warning\",\n                        fontSize: \"medium\",\n                        titleAccess: \"\\xC0 confirmar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 501,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                        color: \"success\",\n                        fontSize: \"medium\",\n                        titleAccess: \"Confirmado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 507,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 497,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status !== 'Confirmado' && !paymentConfirmed[`${payment.ref_year}-${payment.ref_month}`] ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        onChange: () => handleSwitchClick(payment.ref_year, payment.ref_month)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 540,\n                        columnNumber: 33\n                      }, this),\n                      label: `Confirmar mês ${payment.ref_month}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 567,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 570,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"CoWHyrIPPw/y0y3gq1SAwVGqjOw=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","confirmingLoading","setConfirmingLoading","confirmingError","setConfirmingError","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","handlePaymentConfirm","isUserIdValid","key","resp","confirmPaymentOnServer","prev","map","p","ref_year","ref_month","status","updatedAt","toISOString","prevState","console","log","err","error","message","handleCancel","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","paymentsError","loading","paymentsLoading","method","url","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyStatus","monthName","type","description","date","createdAt","monthlyTotalsMissing","acc","paidMonths","Object","values","total","length","totalMissing","financialSummary","availableYears","severity","errorMessage","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","label","onClick","disabled","color","mt","elevation","size","id","labelId","value","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","fontWeight","title","titleAccess","toLocaleDateString","control","checked","colSpan","toFixed","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState<string | null>(null);\n\n  const [paymentConfirmed, setPaymentConfirmed] = useState<\n    Record<number, boolean>\n  >({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{\n    year: string;\n    month: number;\n  } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSwitchClick = (year: string, month: number) => {\n    setConfirmingMonth({ year, month });\n    setOpenModal(true);\n  };\n\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n\n    try {\n      // Chama a API\n      const resp = await confirmPaymentOnServer(userId!, confirmingMonth.year, confirmingMonth.month);\n      // resp pode ser { success: true, payment: { ... } } conforme backend\n\n      // Atualiza o estado local: marca payment com status 'Confirmado' e updatedAt\n      setPayments((prev) =>\n        prev.map((p) =>\n          p.ref_year === confirmingMonth.year && p.ref_month === confirmingMonth.month\n            ? { ...p, status: 'Confirmado', updatedAt: new Date().toISOString() } // ajuste conforme format\n            : p\n        )\n      );\n\n      // Marca confirmação local (para evitar re-render de modal etc)\n      setPaymentConfirmed((prevState) => ({\n        ...prevState,\n        [key]: true\n      }));\n\n      console.log('✅ Pagamento confirmado (server):', resp);\n    } catch (err: any) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      setConfirmingError(err.message || 'Erro desconhecido ao confirmar pagamento.');\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = filteredPayments\n      .sort(\n        (a, b) =>\n          Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month\n      )\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.description || 'N/A',\n        status: payment.status || 'N/A',\n        date: payment.date,\n        createdAt: payment.createdAt,\n        updatedAt: payment.updatedAt\n      }));\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key]) {\n          (acc as { [key: string]: number })[key] = 0;\n        }\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {openModal && confirmingMonth && (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100vw\"\n          height=\"100vh\"\n          bgcolor=\"rgba(0,0,0,0.5)\"\n          zIndex={1300}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirmar Pagamento\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja confirmar o pagamento do mês{' '}\n              <strong>{formatMonth(confirmingMonth.month)}</strong> de{' '}\n              <strong>{confirmingMonth.year}</strong>?\n            </Typography>\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Chip label=\"Cancelar\" onClick={handleCancel} disabled={confirmingLoading} />\n              <Chip\n                color=\"success\"\n                label={confirmingLoading ? 'Confirmando...' : 'Confirmar'}\n                onClick={handlePaymentConfirm}\n              />\n            </Box>\n            {confirmingError && (\n              <Typography color=\"error\" variant=\"caption\" mt={1}>\n                {confirmingError}\n              </Typography>\n            )}\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell\n                      sx={{ color: blue[600], textAlign: 'center' }}\n                    ></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.ref_month === monthCurrent &&\n                            payment.ref_year.toString() ===\n                            yearCurrent.toString() ? (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[100],\n                                color: blue[800],\n                                '&:hover': { backgroundColor: blue[200] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          ) : (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[50],\n                                color: blue[700],\n                                '&:hover': { backgroundColor: blue[100] },\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                '&:hover': { backgroundColor: lime[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                '&:hover': { backgroundColor: green[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{\n                                color: blueGrey[300],\n                                width: 150\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <div>\n                            {payment.status &&\n                              payment.status !== 'Confirmado' ? (\n                              <BatteryCharging60Icon\n                                color=\"warning\"\n                                fontSize=\"medium\"\n                                titleAccess=\"À confirmar\"\n                              />\n                            ) : (\n                              <CheckIcon\n                                color=\"success\"\n                                fontSize=\"medium\"\n                                titleAccess=\"Confirmado\"\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' &&\n                            !paymentConfirmed[\n                            `${payment.ref_year}-${payment.ref_month}`\n                            ] ? (\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={false}\n                                  onChange={() =>\n                                    handleSwitchClick(\n                                      payment.ref_year,\n                                      payment.ref_month\n                                    )\n                                  }\n                                />\n                              }\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n\n\n"],"mappings":";;AAAA,SAASA,OAAO,IAAIC,WAAW,QAAQ,qBAAqB;AAC5D,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,gBAAgB,EAChBC,SAAS,EACTC,gBAAgB,EAChBC,gBAAgB,EAChBC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,gBAAgB,QACX,eAAe;AACtB,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,qBAAqB,MAAM,uCAAuC;AAEzE,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,QAAQ,sBAAsB;AAClE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,GAAG,EAAEC,MAAM,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAgB1C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAO,CAAC,GAAGZ,SAAS,CAAqB,CAAC;EAClD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAoB,EAAE,CAAC;EAC/D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAC9C,IAAIkB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CACpC,CAAC;EACD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAgB,IAAI,CAAC;EAE3E,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAEtD,CAAC,CAAC,CAAC;EACL,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAG5C,IAAI,CAAC;EACf,MAAM,CAAC6B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM+B,iBAAiB,GAAGA,CAACC,IAAY,EAAEC,KAAa,KAAK;IACzDL,kBAAkB,CAAC;MAAEI,IAAI;MAAEC;IAAM,CAAC,CAAC;IACnCH,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMI,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACP,eAAe,EAAE;IACtB,IAAI,CAACQ,aAAa,EAAE;MAClBX,kBAAkB,CAAC,yBAAyB,CAAC;MAC7C;IACF;IAEA,MAAMY,GAAG,GAAG,GAAGT,eAAe,CAACK,IAAI,IAAIL,eAAe,CAACM,KAAK,EAAE;IAC9DT,kBAAkB,CAAC,IAAI,CAAC;IACxBF,oBAAoB,CAAC,IAAI,CAAC;IAE1B,IAAI;MACF;MACA,MAAMe,IAAI,GAAG,MAAMC,sBAAsB,CAACzB,MAAM,EAAGc,eAAe,CAACK,IAAI,EAAEL,eAAe,CAACM,KAAK,CAAC;MAC/F;;MAEA;MACAlB,WAAW,CAAEwB,IAAI,IACfA,IAAI,CAACC,GAAG,CAAEC,CAAC,IACTA,CAAC,CAACC,QAAQ,KAAKf,eAAe,CAACK,IAAI,IAAIS,CAAC,CAACE,SAAS,KAAKhB,eAAe,CAACM,KAAK,GACxE;QAAE,GAAGQ,CAAC;QAAEG,MAAM,EAAE,YAAY;QAAEC,SAAS,EAAE,IAAI3B,IAAI,CAAC,CAAC,CAAC4B,WAAW,CAAC;MAAE,CAAC,CAAC;MAAA,EACpEL,CACN,CACF,CAAC;;MAED;MACAf,mBAAmB,CAAEqB,SAAS,KAAM;QAClC,GAAGA,SAAS;QACZ,CAACX,GAAG,GAAG;MACT,CAAC,CAAC,CAAC;MAEHY,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEZ,IAAI,CAAC;IACvD,CAAC,CAAC,OAAOa,GAAQ,EAAE;MACjBF,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAED,GAAG,CAAC;MAC1D1B,kBAAkB,CAAC0B,GAAG,CAACE,OAAO,IAAI,2CAA2C,CAAC;IAChF,CAAC,SAAS;MACR9B,oBAAoB,CAAC,KAAK,CAAC;MAC3BQ,YAAY,CAAC,KAAK,CAAC;MACnBF,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMyB,YAAY,GAAGA,CAAA,KAAM;IACzBvB,YAAY,CAAC,KAAK,CAAC;IACnBF,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMO,aAAa,GAAGtB,MAAM,IAAI,CAACyC,KAAK,CAACC,QAAQ,CAAC1C,MAAM,CAAC,CAAC;EACxD,MAAM2C,MAAM,GAAGrB,aAAa,GACxB/B,MAAM,CAAC,GAAGD,GAAG,CAACsD,cAAc,IAAI5C,MAAM,EAAE,CAAC,GACzC6C,SAAS;EAEb,MAAM;IACJC,IAAI,EAAEC,YAAY;IAClBT,KAAK,EAAEU,aAAa;IACpBC,OAAO,EAAEC;EACX,CAAC,GAAG7D,QAAQ,CAAoB;IAC9B8D,MAAM,EAAE,KAAK;IACbC,GAAG,EAAET;EACP,CAAC,CAAC;EAEFzD,SAAS,CAAC,MAAM;IACdkB,eAAe,CAAC,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,IAAI6D,YAAY,EAAE;MAChB7C,WAAW,CAACmD,KAAK,CAACC,OAAO,CAACP,YAAY,CAAC,GAAGA,YAAY,GAAG,EAAE,CAAC;IAC9D,CAAC,MAAM,IAAIC,aAAa,EAAE;MACxB9C,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB;EACF,CAAC,EAAE,CAAC6C,YAAY,EAAEC,aAAa,CAAC,CAAC;EAEjC,IAAIE,eAAe,EAAE;IACnB,oBACEvD,OAAA,CAACtC,GAAG;MACFkG,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MACnBC,SAAS,EAAC,OAAO;MAAAC,QAAA,eAEjBhE,OAAA,CAACzB,gBAAgB;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,MAAMC,WAAW,GAAI5C,KAAa,IAAK;IACrC,MAAM6C,MAAM,GAAG,CACb,SAAS,EACT,WAAW,EACX,OAAO,EACP,OAAO,EACP,MAAM,EACN,OAAO,EACP,OAAO,EACP,QAAQ,EACR,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,CACX;IACD,OAAOA,MAAM,CAAC7C,KAAK,GAAG,CAAC,CAAC,IAAI,OAAOA,KAAK,EAAE;EAC5C,CAAC;EAED,MAAM8C,WAAW,GAAIC,MAAW,IAAa;IAC3C,IAAI,CAACA,MAAM,IAAIA,MAAM,KAAK,EAAE,EAAE,OAAO,CAAC;IACtC,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAOA,MAAM;IAC7C,IAAI;MACF,OAAOC,UAAU,CAACD,MAAM,CAAC5D,QAAQ,CAAC,CAAC,CAAC8D,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxD,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAE6B,MAAM,EAAE7B,KAAK,CAAC;MACrD,OAAO,CAAC;IACV;EACF,CAAC;EAED,MAAMgC,iBAAiB,GAAGA,CAAA,KAAgB;IACxC,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAACvE,QAAQ,CAAC0B,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzD,MAAM4C,UAAU,GAAGpB,KAAK,CAACqB,IAAI,CAACH,QAAQ,CAAC;IACvC,OAAOE,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACD,CAAC,CAAC,GAAGC,MAAM,CAACF,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAyB;IACnD,IAAI5E,YAAY,KAAK,KAAK,EAAE,OAAOF,QAAQ;IAC3C,OAAOA,QAAQ,CAAC+E,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACpD,QAAQ,KAAK1B,YAAY,CAAC;EACxE,CAAC;EAED,MAAM+E,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,gBAAgB,GAAGJ,mBAAmB,CAAC,CAAC;IAC9C,MAAMK,WAAW,GAAGD,gBAAgB,CAACE,MAAM,CACzC,CAACC,GAAG,EAAE1D,CAAC,KAAK0D,GAAG,GAAGpB,WAAW,CAACtC,CAAC,CAACuC,MAAM,CAAC,EACvC,CACF,CAAC;IAED,MAAMoB,aAAa,GAAGJ,gBAAgB,CACnCR,IAAI,CACH,CAACC,CAAC,EAAEC,CAAC,KACHC,MAAM,CAACF,CAAC,CAAC/C,QAAQ,CAAC,GAAGiD,MAAM,CAACD,CAAC,CAAChD,QAAQ,CAAC,IAAI+C,CAAC,CAAC9C,SAAS,GAAG+C,CAAC,CAAC/C,SAC/D,CAAC,CACAH,GAAG,CAAEsD,OAAO,KAAM;MACjB9D,IAAI,EAAE8D,OAAO,CAACpD,QAAQ;MACtBT,KAAK,EAAE6D,OAAO,CAACnD,SAAS;MACxB0D,SAAS,EAAExB,WAAW,CAACiB,OAAO,CAACnD,SAAS,CAAC;MACzCqC,MAAM,EAAED,WAAW,CAACe,OAAO,CAACd,MAAM,CAAC;MACnCsB,IAAI,EAAER,OAAO,CAACQ,IAAI,IAAI,KAAK;MAC3BC,WAAW,EAAET,OAAO,CAACS,WAAW,IAAI,KAAK;MACzC3D,MAAM,EAAEkD,OAAO,CAAClD,MAAM,IAAI,KAAK;MAC/B4D,IAAI,EAAEV,OAAO,CAACU,IAAI;MAClBC,SAAS,EAAEX,OAAO,CAACW,SAAS;MAC5B5D,SAAS,EAAEiD,OAAO,CAACjD;IACrB,CAAC,CAAC,CAAC;IAEL,MAAM6D,oBAA+C,GACnDV,gBAAgB,CAACE,MAAM,CAAC,CAACS,GAAG,EAAEb,OAAO,KAAK;MACxC,MAAM1D,GAAG,GAAG,GAAG0D,OAAO,CAACpD,QAAQ,IAAIoD,OAAO,CAACnD,SAAS,EAAE;MACtD,IAAI,CAAEgE,GAAG,CAA+BvE,GAAG,CAAC,EAAE;QAC3CuE,GAAG,CAA+BvE,GAAG,CAAC,GAAG,CAAC;MAC7C;MACCuE,GAAG,CAA+BvE,GAAG,CAAC,IAAI2C,WAAW,CAACe,OAAO,CAACd,MAAM,CAAC;MACtE,OAAO2B,GAAG;IACZ,CAAC,EAAE,CAAC,CAA8B,CAAC;;IAErC;IACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAACJ,oBAAoB,CAAC,CAACb,MAAM,CAC1DkB,KAAK,IAAK,CAAC,CAACA,KAAK,IAAIA,KAAK,GAAG,CAChC,CAAC,CAACC,MAAM;IACR,MAAMC,YAAY,GAAG,EAAE,GAAGL,UAAU;IAEpC,OAAO;MACLG,KAAK,EAAEf,gBAAgB,CAACgB,MAAM;MAC9BC,YAAY;MACZhB,WAAW;MACXG;IACF,CAAC;EACH,CAAC;EAED,MAAMc,gBAAgB,GAAGnB,mBAAmB,CAAC,CAAC;EAC9C,MAAMoB,cAAc,GAAGhC,iBAAiB,CAAC,CAAC;EAC1C,MAAMa,gBAAgB,GAAGJ,mBAAmB,CAAC,CAAC;;EAE9C;EACA,IAAI,CAACzD,aAAa,EAAE;IAClBa,OAAO,CAACG,KAAK,CAAC,iBAAiB,EAAEtC,MAAM,CAAC;IACxC,oBACEL,OAAA,CAACjC,KAAK;MAAC6I,QAAQ,EAAC,OAAO;MAAA5C,QAAA,EAAC;IAExB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAEZ;EAEA,IAAIb,eAAe,EAAE;IACnB,oBACEvD,OAAA,CAACtC,GAAG;MAACkG,OAAO,EAAC,MAAM;MAACC,cAAc,EAAC,QAAQ;MAAC5B,CAAC,EAAE,CAAE;MAAA+B,QAAA,eAC/ChE,OAAA,CAACzB,gBAAgB;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,IAAIf,aAAa,EAAE;IACjB,IAAIwD,YAAY,GAAG,iCAAiC;IACpD,IAAIxD,aAAa,CAACT,OAAO,CAACkE,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MACpDD,YAAY,GACV,qFAAqF;IACzF,CAAC,MAAM,IAAIxD,aAAa,CAACT,OAAO,KAAK,cAAc,EAAE;MACnDiE,YAAY,GAAG,yDAAyD;IAC1E,CAAC,MAAM,IAAIxD,aAAa,CAACT,OAAO,KAAK,oBAAoB,EAAE;MACzDiE,YAAY,GACV,sEAAsE;IAC1E,CAAC,MAAM,IAAIxD,aAAa,CAACT,OAAO,EAAE;MAChCiE,YAAY,IAAI,GAAGxD,aAAa,CAACT,OAAO,EAAE;IAC5C;IACA,oBAAO5C,OAAA,CAACjC,KAAK;MAAC6I,QAAQ,EAAC,OAAO;MAAA5C,QAAA,EAAE6C;IAAY;MAAA5C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EACvD;EAEA,MAAM2C,WAAW,GAAG,IAAIrG,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC5C,MAAMqG,YAAY,GAAG,IAAItG,IAAI,CAAC,CAAC,CAACuG,QAAQ,CAAC,CAAC,GAAG,CAAC;EAE9C,IAAI3G,QAAQ,CAACkG,MAAM,KAAK,CAAC,EAAE;IACzB,oBACExG,OAAA,CAACjC,KAAK;MAAC6I,QAAQ,EAAC,MAAM;MAAA5C,QAAA,EAAC;IAEvB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAEZ;EAEA,oBACEpE,OAAA,CAAAE,SAAA;IAAA8D,QAAA,GACG3C,SAAS,IAAIF,eAAe,iBAC3BnB,OAAA,CAACtC,GAAG;MACFwJ,QAAQ,EAAC,OAAO;MAChBC,GAAG,EAAE,CAAE;MACPC,IAAI,EAAE,CAAE;MACRC,KAAK,EAAC,OAAO;MACbC,MAAM,EAAC,OAAO;MACdC,OAAO,EAAC,iBAAiB;MACzBC,MAAM,EAAE,IAAK;MACb5D,OAAO,EAAC,MAAM;MACdC,cAAc,EAAC,QAAQ;MACvBC,UAAU,EAAC,QAAQ;MAAAE,QAAA,eAEnBhE,OAAA,CAACpC,IAAI;QAAC6J,EAAE,EAAE;UAAExF,CAAC,EAAE,CAAC;UAAEyF,QAAQ,EAAE;QAAI,CAAE;QAAA1D,QAAA,gBAChChE,OAAA,CAACrC,UAAU;UAACgK,OAAO,EAAC,IAAI;UAACC,YAAY;UAAA5D,QAAA,EAAC;QAEtC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbpE,OAAA,CAACrC,UAAU;UAACgK,OAAO,EAAC,OAAO;UAACF,EAAE,EAAE;YAAEI,EAAE,EAAE;UAAE,CAAE;UAAA7D,QAAA,GAAC,wCACN,EAAC,GAAG,eACvChE,OAAA;YAAAgE,QAAA,EAASK,WAAW,CAAClD,eAAe,CAACM,KAAK;UAAC;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,OAAG,EAAC,GAAG,eAC5DpE,OAAA;YAAAgE,QAAA,EAAS7C,eAAe,CAACK;UAAI;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,KACzC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbpE,OAAA,CAACtC,GAAG;UAACkG,OAAO,EAAC,MAAM;UAACC,cAAc,EAAC,UAAU;UAACiE,GAAG,EAAE,CAAE;UAAA9D,QAAA,gBACnDhE,OAAA,CAAClC,IAAI;YAACiK,KAAK,EAAC,UAAU;YAACC,OAAO,EAAEnF,YAAa;YAACoF,QAAQ,EAAEpH;UAAkB;YAAAoD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7EpE,OAAA,CAAClC,IAAI;YACHoK,KAAK,EAAC,SAAS;YACfH,KAAK,EAAElH,iBAAiB,GAAG,gBAAgB,GAAG,WAAY;YAC1DmH,OAAO,EAAEtG;UAAqB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACLrD,eAAe,iBACdf,OAAA,CAACrC,UAAU;UAACuK,KAAK,EAAC,OAAO;UAACP,OAAO,EAAC,SAAS;UAACQ,EAAE,EAAE,CAAE;UAAAnE,QAAA,EAC/CjD;QAAe;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eAEDpE,OAAA,CAACpC,IAAI;MAACwK,SAAS,EAAE,CAAE;MAACX,EAAE,EAAE;QAAEI,EAAE,EAAE;MAAE,CAAE;MAAA7D,QAAA,eAChChE,OAAA,CAACnC,WAAW;QAAAmG,QAAA,eACVhE,OAAA,CAACtC,GAAG;UAACkG,OAAO,EAAC,MAAM;UAACE,UAAU,EAAC,QAAQ;UAACgE,GAAG,EAAE,CAAE;UAAA9D,QAAA,gBAC7ChE,OAAA,CAACrC,UAAU;YAACgK,OAAO,EAAC,IAAI;YAACO,KAAK,EAAC,SAAS;YAAAlE,QAAA,EAAC;UAEzC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbpE,OAAA,CAACrB,WAAW;YAAC0J,IAAI,EAAC,OAAO;YAACZ,EAAE,EAAE;cAAEC,QAAQ,EAAE;YAAI,CAAE;YAAA1D,QAAA,gBAC9ChE,OAAA,CAACpB,UAAU;cAAC0J,EAAE,EAAC,mBAAmB;cAAAtE,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACnDpE,OAAA,CAACnB,MAAM;cACL0J,OAAO,EAAC,mBAAmB;cAC3BC,KAAK,EAAEhI,YAAa;cACpBuH,KAAK,EAAC,KAAK;cACXU,QAAQ,EAAGC,CAAC,IAAKjI,eAAe,CAACiI,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cACjDf,EAAE,EAAE;gBAAEmB,YAAY,EAAE;cAAE,CAAE;cAAA5E,QAAA,EAEvB2C,cAAc,CAAC3E,GAAG,CAAER,IAAI,iBACvBxB,OAAA,CAAClB,QAAQ;gBAAY0J,KAAK,EAAEhH,IAAK;gBAAAwC,QAAA,EAC9BxC;cAAI,GADQA,IAAI;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACdpE,OAAA,CAACrC,UAAU;YAACgK,OAAO,EAAC,OAAO;YAACO,KAAK,EAAC,eAAe;YAAAlE,QAAA,EAC9C,aAAawB,gBAAgB,CAACgB,MAAM,iBAAiBhG,YAAY;UAAE;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAEPpE,OAAA,CAACpC,IAAI;MAACwK,SAAS,EAAE,CAAE;MAAApE,QAAA,eACjBhE,OAAA,CAACxB,SAAS;QAAAwF,QAAA,gBACRhE,OAAA,CAACvB,gBAAgB;UACfoK,UAAU,eAAE7I,OAAA,CAACd,cAAc;YAACgJ,KAAK,EAAC,SAAS;YAACY,QAAQ,EAAC;UAAO;YAAA7E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAChE,iBAAc,gBAAgB;UAC9BkE,EAAE,EAAC,eAAe;UAAAtE,QAAA,eAElBhE,OAAA,CAACtC,GAAG;YAACkG,OAAO,EAAC,MAAM;YAACE,UAAU,EAAC,QAAQ;YAAC+D,EAAE,EAAE,CAAE;YAAA7D,QAAA,gBAC5ChE,OAAA,CAACvC,WAAW;cAACgK,EAAE,EAAE;gBAAEqB,QAAQ,EAAE,EAAE;gBAAEZ,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;gBAAE4J,EAAE,EAAE;cAAE;YAAE;cAAA9E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC9DpE,OAAA,CAACrC,UAAU;cAACgK,OAAO,EAAC,IAAI;cAACO,KAAK,EAAC,SAAS;cAAAlE,QAAA,GAAC,mBACtB,EAAC,GAAG,EACpBxD,YAAY,KAAK,KAAK,IAAI,KAAKA,YAAY,EAAE;YAAA;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACU,CAAC,eACnBpE,OAAA,CAACtB,gBAAgB;UAAAsF,QAAA,eACfhE,OAAA,CAAC7B,cAAc;YAAC6K,SAAS,EAAE1K,KAAM;YAAC8J,SAAS,EAAE,CAAE;YAAApE,QAAA,eAC7ChE,OAAA,CAAChC,KAAK;cAAAgG,QAAA,gBACJhE,OAAA,CAAC5B,SAAS;gBAAA4F,QAAA,eACRhE,OAAA,CAAC3B,QAAQ;kBAAA2F,QAAA,gBACPhE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACvDhE,OAAA;sBAAAgE,QAAA,EAAQ;oBAAG;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACX,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACvDhE,OAAA;sBAAAgE,QAAA,EAAQ;oBAAI;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACZ,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACvDhE,OAAA;sBAAAgE,QAAA,EAAQ;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACb,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACvDhE,OAAA;sBAAAgE,QAAA,EAAQ;oBAAM;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACd,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACvDhE,OAAA;sBAAAgE,QAAA,EAAQ;oBAAS;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACjB,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACvDhE,OAAA;sBAAAgE,QAAA,EAAQ;oBAAW;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACnB,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBACRuJ,EAAE,EAAE;sBAAES,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;sBAAE8J,SAAS,EAAE;oBAAS;kBAAE;oBAAAhF,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACpC,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC,eACZpE,OAAA,CAAC/B,SAAS;gBAAA+F,QAAA,EACPwB,gBAAgB,CACdR,IAAI,CACH,CAACC,CAAC,EAAEC,CAAC,KACHC,MAAM,CAACF,CAAC,CAAC/C,QAAQ,CAAC,GAAGiD,MAAM,CAACD,CAAC,CAAChD,QAAQ,CAAC,IACvC+C,CAAC,CAAC9C,SAAS,GAAG+C,CAAC,CAAC/C,SACpB,CAAC,CACAH,GAAG,CAAC,CAACsD,OAAO,EAAE4D,KAAK,kBAClBlJ,OAAA,CAAC3B,QAAQ;kBAAgC8K,KAAK;kBAAAnF,QAAA,gBAC5ChE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAEwB,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,EACpCsB,OAAO,CAACnD,SAAS,KAAK6E,YAAY,IACjC1B,OAAO,CAACpD,QAAQ,CAACtB,QAAQ,CAAC,CAAC,KAC3BmG,WAAW,CAACnG,QAAQ,CAAC,CAAC,gBACtBZ,OAAA,CAAClC,IAAI;sBACHiK,KAAK,EAAE1D,WAAW,CAACiB,OAAO,CAACnD,SAAS,CAAE;sBACtCkG,IAAI,EAAC,OAAO;sBACZV,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACF2B,eAAe,EAAEjK,IAAI,CAAC,GAAG,CAAC;wBAC1B+I,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;wBAChB,SAAS,EAAE;0BAAEiK,eAAe,EAAEjK,IAAI,CAAC,GAAG;wBAAE,CAAC;wBACzCkK,UAAU,EAAE,MAAM;wBAClBhC,KAAK,EAAE;sBACT,CAAE;sBACFiC,KAAK,EAAE,GAAGhE,OAAO,CAACpD,QAAQ;oBAAG;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B,CAAC,gBAEFpE,OAAA,CAAClC,IAAI;sBACHiK,KAAK,EAAE1D,WAAW,CAACiB,OAAO,CAACnD,SAAS,CAAE;sBACtCkG,IAAI,EAAC,OAAO;sBACZV,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACF2B,eAAe,EAAEjK,IAAI,CAAC,EAAE,CAAC;wBACzB+I,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAC;wBAChB,SAAS,EAAE;0BAAEiK,eAAe,EAAEjK,IAAI,CAAC,GAAG;wBAAE,CAAC;wBACzCkI,KAAK,EAAE;sBACT,CAAE;sBACFiC,KAAK,EAAE,GAAGhE,OAAO,CAACpD,QAAQ;oBAAG;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC9B;kBACF;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAEwB,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,EACpCsB,OAAO,CAACQ,IAAI,gBACX9F,OAAA,CAAClC,IAAI;sBACHiK,KAAK,EAAEzC,OAAO,CAACQ,IAAK;sBACpBuC,IAAI,EAAC,OAAO;sBACZV,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACF2B,eAAe,EAAE9J,IAAI,CAAC,EAAE,CAAC;wBACzB4I,KAAK,EAAE5I,IAAI,CAAC,GAAG,CAAC;wBAChB,SAAS,EAAE;0BAAE8J,eAAe,EAAE9J,IAAI,CAAC,GAAG;wBAAE,CAAC;wBACzC+J,UAAU,EAAE,MAAM;wBAClBhC,KAAK,EAAE;sBACT;oBAAE;sBAAApD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,GAEF;kBACD;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAEwB,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,EACpCO,WAAW,CAACe,OAAO,CAACd,MAAM,CAAC,GAAG,CAAC,gBAC9BxE,OAAA,CAAClC,IAAI;sBACHiK,KAAK,EAAEzC,OAAO,CAACd,MAAO;sBACtB6D,IAAI,EAAC,OAAO;sBACZV,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACF2B,eAAe,EAAE/J,KAAK,CAAC,EAAE,CAAC;wBAC1B6I,KAAK,EAAE7I,KAAK,CAAC,GAAG,CAAC;wBACjB,SAAS,EAAE;0BAAE+J,eAAe,EAAE/J,KAAK,CAAC,GAAG;wBAAE,CAAC;wBAC1CgK,UAAU,EAAE,MAAM;wBAClBhC,KAAK,EAAE;sBACT;oBAAE;sBAAApD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH,CAAC,gBAEFpE,OAAA,CAAClC,IAAI;sBACHiK,KAAK,EAAEzC,OAAO,CAACd,MAAO;sBACtB6D,IAAI,EAAC,QAAQ;sBACbV,OAAO,EAAC,UAAU;sBAClBF,EAAE,EAAE;wBACFS,KAAK,EAAE9I,QAAQ,CAAC,GAAG,CAAC;wBACpBiI,KAAK,EAAE;sBACT;oBAAE;sBAAApD,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH;kBACF;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACQ,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAEwB,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACrChE,OAAA;sBAAAgE,QAAA,EACGsB,OAAO,CAAClD,MAAM,IACbkD,OAAO,CAAClD,MAAM,KAAK,YAAY,gBAC/BpC,OAAA,CAACf,qBAAqB;wBACpBiJ,KAAK,EAAC,SAAS;wBACfY,QAAQ,EAAC,QAAQ;wBACjBS,WAAW,EAAC;sBAAa;wBAAAtF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC1B,CAAC,gBAEFpE,OAAA,CAAChB,SAAS;wBACRkJ,KAAK,EAAC,SAAS;wBACfY,QAAQ,EAAC,QAAQ;wBACjBS,WAAW,EAAC;sBAAY;wBAAAtF,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACzB;oBACF;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAAA8F,QAAA,eACRhE,OAAA,CAACrC,UAAU;sBAACgK,OAAO,EAAC,OAAO;sBAAA3D,QAAA,EACxBsB,OAAO,CAACW,SAAS,GACd,IAAIvF,IAAI,CAAC4E,OAAO,CAACW,SAAS,CAAC,CAACuD,kBAAkB,CAC9C,OACF,CAAC,GACC;oBAAE;sBAAAvF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACI;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAEwB,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,eACrChE,OAAA,CAACrC,UAAU;sBAACgK,OAAO,EAAC,OAAO;sBAAA3D,QAAA,EACxBsB,OAAO,CAACjD,SAAS,GACd,IAAI3B,IAAI,CAAC4E,OAAO,CAACjD,SAAS,CAAC,CAACmH,kBAAkB,CAC9C,OACF,CAAC,GACC;oBAAE;sBAAAvF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACI;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eACZpE,OAAA,CAAC9B,SAAS;oBAACuJ,EAAE,EAAE;sBAAEwB,SAAS,EAAE;oBAAS,CAAE;oBAAAjF,QAAA,EACpCsB,OAAO,CAAClD,MAAM,KAAK,YAAY,IAC9B,CAACnB,gBAAgB,CACjB,GAAGqE,OAAO,CAACpD,QAAQ,IAAIoD,OAAO,CAACnD,SAAS,EAAE,CACzC,gBACDnC,OAAA,CAACjB,gBAAgB;sBACf0K,OAAO,eACLzJ,OAAA,CAACF,MAAM;wBACL4J,OAAO,EAAE,KAAM;wBACfjB,QAAQ,EAAEA,CAAA,KACRlH,iBAAiB,CACf+D,OAAO,CAACpD,QAAQ,EAChBoD,OAAO,CAACnD,SACV;sBACD;wBAAA8B,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF,CACF;sBACD2D,KAAK,EAAE,iBAAiBzC,OAAO,CAACnD,SAAS;oBAAG;sBAAA8B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC7C,CAAC,GACA;kBAAI;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC,CAAC;gBAAA,GArIC,GAAGkB,OAAO,CAACgD,EAAE,IAAIY,KAAK,EAAE;kBAAAjF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAsI7B,CACX;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eAEZpE,OAAA,CAAC/B,SAAS;gBAAA+F,QAAA,eACRhE,OAAA,CAAC3B,QAAQ;kBAAA2F,QAAA,eACPhE,OAAA,CAAC9B,SAAS;oBAACyL,OAAO,EAAE,CAAE;oBAAA3F,QAAA,eACpBhE,OAAA,CAACtC,GAAG;sBACFuL,SAAS,EAAC,QAAQ;sBAClBhH,CAAC,EAAE,CAAE;sBACLsF,OAAO,EAAEpI,IAAI,CAAC,EAAE,CAAE;sBAClByJ,YAAY,EAAE,CAAE;sBAAA5E,QAAA,gBAEhBhE,OAAA,CAACrC,UAAU;wBAACgK,OAAO,EAAC,IAAI;wBAACO,KAAK,EAAE/I,IAAI,CAAC,GAAG,CAAE;wBAAA6E,QAAA,GAAC,KACtC,EAAC0C,gBAAgB,CAACjB,WAAW,CAACmE,OAAO,CAAC,CAAC,CAAC;sBAAA;wBAAA3F,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACjC,CAAC,eACbpE,OAAA,CAACrC,UAAU;wBAACgK,OAAO,EAAC,OAAO;wBAACO,KAAK,EAAC,eAAe;wBAAAlE,QAAA,GAAC,mBAC/B,EAAC,MAAMxD,YAAY,EAAE;sBAAA;wBAAAyD,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC5B,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACV;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAENoB,gBAAgB,CAACgB,MAAM,GAAG,CAAC,iBAC1BxG,OAAA,CAACpC,IAAI;MAACwK,SAAS,EAAE,CAAE;MAACX,EAAE,EAAE;QAAEU,EAAE,EAAE,CAAC;QAAEN,EAAE,EAAE;MAAE,CAAE;MAAA7D,QAAA,eACvChE,OAAA,CAACH,aAAa;QAAC4G,YAAY,EAAEC,gBAAgB,CAACD;MAAa;QAAAxC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CACP;EAAA,eACD,CAAC;AAEP,CAAC;AAAChE,EAAA,CA1hBWD,cAAc;EAAA,QACNV,SAAS,EA8ExBC,QAAQ;AAAA;AAAAmK,EAAA,GA/ED1J,cAAc;AAAA,IAAA0J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}