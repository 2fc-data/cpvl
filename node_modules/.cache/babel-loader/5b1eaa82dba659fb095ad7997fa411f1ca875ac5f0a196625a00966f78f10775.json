{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.description || 'N/A',\n      status: payment.status || 'N/A',\n      date: payment.date,\n      createdAt: payment.createdAt,\n      updatedAt: payment.updatedAt\n    }));\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) {\n        acc[key] = 0;\n      }\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n  const handleChangeConfirm = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro\", ' ', selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[100],\n                        color: blue[800],\n                        '&:hover': {\n                          backgroundColor: blue[200]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[50],\n                        color: blue[700],\n                        '&:hover': {\n                          backgroundColor: blue[100]\n                        },\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        '&:hover': {\n                          backgroundColor: lime[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 29\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        '&:hover': {\n                          backgroundColor: green[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                        color: \"warning\",\n                        fontSize: \"medium\",\n                        titleAccess: \"\\xC0 confirmar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 402,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                        color: \"success\",\n                        fontSize: \"medium\",\n                        titleAccess: \"Confirmado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 408,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: payment.ref_month,\n                        onChange: handleChangeConfirm,\n                        name: payment.ref_month\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 31\n                      }, this) : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"YPP0V8wKeh399SyDhnst6/DNnJY=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","error","paymentsError","loading","paymentsLoading","method","url","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","month","months","parseAmount","amount","parseFloat","replace","console","getAvailableYears","yearsSet","Set","map","p","ref_year","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyStatus","ref_month","year","monthName","type","description","status","date","createdAt","updatedAt","monthlyTotalsMissing","acc","key","paidMonths","Object","values","total","length","totalMissing","financialSummary","availableYears","severity","errorMessage","message","includes","yearCurrent","monthCurrent","getMonth","handleChangeConfirm","elevation","sx","mb","gap","variant","color","size","minWidth","id","labelId","value","label","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","fontWeight","width","title","titleAccess","toLocaleDateString","checked","name","colSpan","bgcolor","toFixed","mt","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = filteredPayments\n      .sort(\n        (a, b) =>\n          Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month\n      )\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.description || 'N/A',\n        status: payment.status || 'N/A',\n        date: payment.date,\n        createdAt: payment.createdAt,\n        updatedAt: payment.updatedAt\n      }));\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key]) {\n          (acc as { [key: string]: number })[key] = 0;\n        }\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  const handleChangeConfirm = () => {\n\n  }\n\n  return (\n    <>\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.ref_month === monthCurrent &&\n                            payment.ref_year.toString() ===\n                            yearCurrent.toString() ? (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[100],\n                                color: blue[800],\n                                '&:hover': { backgroundColor: blue[200] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          ) : (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[50],\n                                color: blue[700],\n                                '&:hover': { backgroundColor: blue[100] },\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                '&:hover': { backgroundColor: lime[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                '&:hover': { backgroundColor: green[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{\n                                color: blueGrey[300],\n                                width: 150\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <div>\n                            {payment.status &&\n                              payment.status !== 'Confirmado' ? (\n                              <BatteryCharging60Icon\n                                color=\"warning\"\n                                fontSize=\"medium\"\n                                titleAccess=\"À confirmar\"\n                              />\n                            ) : (\n                              <CheckIcon\n                                color=\"success\"\n                                fontSize=\"medium\"\n                                titleAccess=\"Confirmado\"\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <div>\n                            {payment.status &&\n                              payment.status !== 'Confirmado' ? (\n                              <Switch checked={payment.ref_month} onChange={handleChangeConfirm} name={payment.ref_month} />\n                            ) : (\n                              ''\n                            )}\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}