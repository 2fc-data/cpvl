{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon, Warning as WarningIcon, CheckCircle as CheckCircleIcon, Schedule as ScheduleIcon, Block as BlockIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Grid, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\nimport { blueGrey, blue, green, orange, red } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  console.log('--> ', userId);\n  const [payments, setPayments] = useState([]);\n\n  // ✅ Buscar pagamentos mensais do piloto\n  const {\n    data: paymentsData,\n    loading: paymentsLoading,\n    error: paymentsError\n  } = useFetch({\n    url: getURI(`${API.paymentMonthly}?userId=${userId}`)\n  });\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(paymentsData);\n    }\n  }, [paymentsData]);\n\n  // Função para formatar o mês\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Função para converter valor monetário\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    // Converte string \"50,00\" para number 50.00\n    return parseFloat(amount.toString().replace(',', '.'));\n  };\n\n  // Função para obter cor do status\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'ativo':\n        return green[500];\n      case 'pendente':\n        return orange[500];\n      case 'inativo':\n        return red[500];\n      case 'trancado':\n        return blueGrey[500];\n      default:\n        return blueGrey[300];\n    }\n  };\n\n  // Função para obter ícone do status\n  const getStatusIcon = status => {\n    switch (status.toLowerCase()) {\n      case 'ativo':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          sx: {\n            fontSize: 16,\n            color: green[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }, this);\n      case 'pendente':\n        return /*#__PURE__*/_jsxDEV(ScheduleIcon, {\n          sx: {\n            fontSize: 16,\n            color: orange[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 16\n        }, this);\n      case 'inativo':\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          sx: {\n            fontSize: 16,\n            color: red[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this);\n      case 'trancado':\n        return /*#__PURE__*/_jsxDEV(BlockIcon, {\n          sx: {\n            fontSize: 16,\n            color: blueGrey[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          sx: {\n            fontSize: 16,\n            color: blueGrey[300]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Função para obter texto do status\n  const getStatusText = status => {\n    return status && status.trim() !== '' ? status : 'Não definido';\n  };\n\n  // Calcular resumo financeiro com status mês a mês\n  const getFinancialSummary = () => {\n    // Filtrar registros válidos (com status não vazio)\n    const validPayments = payments.filter(p => p.status && p.status.trim() !== '');\n    const activePayments = validPayments.filter(p => p.status === 'ativo').length;\n    const pendingPayments = validPayments.filter(p => p.status === 'pendente').length;\n    const inactivePayments = validPayments.filter(p => p.status === 'inativo').length;\n    const lockedPayments = validPayments.filter(p => p.status === 'trancado').length;\n    const undefinedPayments = payments.filter(p => !p.status || p.status.trim() === '').length;\n    const totalAmount = validPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n\n    // Criar array com status mês a mês (incluir apenas registros com dados relevantes)\n    const monthlyStatus = payments.filter(payment => payment.status && payment.status.trim() !== '') // Filtrar apenas registros com status\n    .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      status: payment.status,\n      amount: parseAmount(payment.amount),\n      type: payment.type,\n      description: payment.Description,\n      date: payment.date\n    }));\n    return {\n      total: payments.length,\n      valid: validPayments.length,\n      active: activePayments,\n      pending: pendingPayments,\n      inactive: inactivePayments,\n      locked: lockedPayments,\n      undefined: undefinedPayments,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      children: \"Erro ao carregar hist\\xF3rico de pagamentos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Resumo Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: green[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: green[600],\n                children: financialSummary.active\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Ativos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: orange[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: orange[600],\n                children: financialSummary.pending\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Pendentes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: red[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: red[600],\n                children: financialSummary.inactive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Inativos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: blueGrey[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: blueGrey[600],\n                children: financialSummary.locked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Trancados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blue[50],\n                borderRadius: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blue[600],\n                  children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Valor Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), financialSummary.undefined > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blueGrey[50],\n                borderRadius: 2,\n                border: 1,\n                borderColor: blueGrey[200],\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blueGrey[600],\n                  children: financialSummary.undefined\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Sem Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            color: \"primary\",\n            children: \"Status dos \\xDAltimos Meses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 1,\n            children: financialSummary.monthlyStatus.slice(0, 12).map((month, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${month.monthName.substring(0, 3)}/${month.year}`,\n              size: \"small\",\n              sx: {\n                backgroundColor: month.status === 'ativo' ? green[100] : month.status === 'pendente' ? orange[100] : month.status === 'inativo' ? red[100] : month.status === 'trancado' ? blueGrey[100] : blueGrey[50],\n                color: month.status === 'ativo' ? green[800] : month.status === 'pendente' ? orange[800] : month.status === 'inativo' ? red[800] : month.status === 'trancado' ? blueGrey[800] : blueGrey[600],\n                '&:hover': {\n                  backgroundColor: month.status === 'ativo' ? green[200] : month.status === 'pendente' ? orange[200] : month.status === 'inativo' ? red[200] : month.status === 'trancado' ? blueGrey[200] : blueGrey[100]\n                }\n              },\n              title: `${month.monthName} ${month.year} - R$ ${month.amount.toFixed(2)} (${getStatusText(month.status)})`\n            }, `${month.year}-${month.month}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), financialSummary.monthlyStatus.length > 12 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 1,\n              display: 'block'\n            },\n            children: [\"Mostrando os 12 meses mais recentes de \", financialSummary.valid, ' ', \"registros v\\xE1lidos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), financialSummary.monthlyStatus.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 1\n            },\n            children: \"Nenhum registro com status definido encontrado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n            sx: {\n              fontSize: 32,\n              color: blue[500],\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Hist\\xF3rico de Pagamentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), payments.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Per\\xEDodo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Valor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Descri\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: payments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [formatMonth(payment.ref_month), \" \", payment.ref_year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: payment.type,\n                    size: \"small\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"bold\",\n                    children: [\"R$ \", parseAmount(payment.amount).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [getStatusIcon(payment.status), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        ml: 1,\n                        color: getStatusColor(payment.status),\n                        textTransform: 'capitalize'\n                      },\n                      children: getStatusText(payment.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.Description && payment.Description.trim() !== '' ? payment.Description : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.date ? new Date(payment.date).toLocaleDateString('pt-BR') : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 25\n                }, this)]\n              }, `${payment.id || index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"yEVXp2eY/v82qXXpwRPo31BJDBI=\", false, function () {\n  return [useFetch];\n});\n_c = PaymentMonthly;\nexport default PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Warning","WarningIcon","CheckCircle","CheckCircleIcon","Schedule","ScheduleIcon","Block","BlockIcon","Box","Typography","Card","CardContent","Grid","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","blueGrey","blue","green","orange","red","useEffect","useState","useFetch","API","getURI","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_ref","_s","userId","console","log","payments","setPayments","data","paymentsData","loading","paymentsLoading","error","paymentsError","url","paymentMonthly","formatMonth","month","months","parseAmount","amount","parseFloat","toString","replace","getStatusColor","status","toLowerCase","getStatusIcon","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","trim","getFinancialSummary","validPayments","filter","p","activePayments","length","pendingPayments","inactivePayments","lockedPayments","undefinedPayments","totalAmount","reduce","sum","monthlyStatus","payment","sort","a","b","ref_year","ref_month","map","year","monthName","type","description","Description","date","total","valid","active","pending","inactive","locked","undefined","financialSummary","display","justifyContent","children","severity","elevation","mb","variant","gutterBottom","container","spacing","item","xs","sm","textAlign","bgcolor","borderRadius","mt","toFixed","border","borderColor","flexWrap","gap","slice","index","label","substring","size","backgroundColor","title","alignItems","mr","component","hover","fontWeight","ml","textTransform","Date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.tsx"],"sourcesContent":["import {\n  Payment as PaymentIcon,\n  Warning as WarningIcon,\n  CheckCircle as CheckCircleIcon,\n  Schedule as ScheduleIcon,\n  Block as BlockIcon\n} from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress\n} from '@mui/material';\nimport { blueGrey, blue, green, orange, red } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: number;\n  ref_month: number;\n  amount: number;\n  status: string;\n  type: string;\n  Description: string;\n  date: Date;\n}\n\ninterface PaymentMonthlyProps {\n  userId: string;\n}\n\nexport const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\n  console.log('--> ', userId)\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // ✅ Buscar pagamentos mensais do piloto\n  const {\n    data: paymentsData,\n    loading: paymentsLoading,\n    error: paymentsError\n  } = useFetch<IPaymentMonthly[]>({\n    url: getURI(`${API.paymentMonthly}?userId=${userId}`)\n  });\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(paymentsData);\n    }\n  }, [paymentsData]);\n\n  // Função para formatar o mês\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Função para converter valor monetário\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    // Converte string \"50,00\" para number 50.00\n    return parseFloat(amount.toString().replace(',', '.'));\n  };\n\n  // Função para obter cor do status\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'ativo':\n        return green[500];\n      case 'pendente':\n        return orange[500];\n      case 'inativo':\n        return red[500];\n      case 'trancado':\n        return blueGrey[500];\n      default:\n        return blueGrey[300];\n    }\n  };\n\n  // Função para obter ícone do status\n  const getStatusIcon = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'ativo':\n        return <CheckCircleIcon sx={{ fontSize: 16, color: green[500] }} />;\n      case 'pendente':\n        return <ScheduleIcon sx={{ fontSize: 16, color: orange[500] }} />;\n      case 'inativo':\n        return <WarningIcon sx={{ fontSize: 16, color: red[500] }} />;\n      case 'trancado':\n        return <BlockIcon sx={{ fontSize: 16, color: blueGrey[500] }} />;\n      default:\n        return <WarningIcon sx={{ fontSize: 16, color: blueGrey[300] }} />;\n    }\n  };\n\n  // Função para obter texto do status\n  const getStatusText = (status: string) => {\n    return status && status.trim() !== '' ? status : 'Não definido';\n  };\n\n  // Calcular resumo financeiro com status mês a mês\n  const getFinancialSummary = () => {\n    // Filtrar registros válidos (com status não vazio)\n    const validPayments = payments.filter(\n      (p) => p.status && p.status.trim() !== ''\n    );\n\n    const activePayments = validPayments.filter(\n      (p) => p.status === 'ativo'\n    ).length;\n    const pendingPayments = validPayments.filter(\n      (p) => p.status === 'pendente'\n    ).length;\n    const inactivePayments = validPayments.filter(\n      (p) => p.status === 'inativo'\n    ).length;\n    const lockedPayments = validPayments.filter(\n      (p) => p.status === 'trancado'\n    ).length;\n    const undefinedPayments = payments.filter(\n      (p) => !p.status || p.status.trim() === ''\n    ).length;\n    const totalAmount = validPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    // Criar array com status mês a mês (incluir apenas registros com dados relevantes)\n    const monthlyStatus = payments\n      .filter((payment) => payment.status && payment.status.trim() !== '') // Filtrar apenas registros com status\n      .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        status: payment.status,\n        amount: parseAmount(payment.amount),\n        type: payment.type,\n        description: payment.Description,\n        date: payment.date\n      }));\n\n    return {\n      total: payments.length,\n      valid: validPayments.length,\n      active: activePayments,\n      pending: pendingPayments,\n      inactive: inactivePayments,\n      locked: lockedPayments,\n      undefined: undefinedPayments,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    return (\n      <Alert severity=\"warning\">\n        Erro ao carregar histórico de pagamentos.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {/* Card Resumo Financeiro */}\n      <Card elevation={3} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Resumo Financeiro\n          </Typography>\n\n          <Grid container spacing={2}>\n            <Grid item xs={6} sm={3}>\n              <Box\n                textAlign=\"center\"\n                p={2}\n                bgcolor={green[50]}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" color={green[600]}>\n                  {financialSummary.active}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Ativos\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Box\n                textAlign=\"center\"\n                p={2}\n                bgcolor={orange[50]}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" color={orange[600]}>\n                  {financialSummary.pending}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Pendentes\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Box textAlign=\"center\" p={2} bgcolor={red[50]} borderRadius={2}>\n                <Typography variant=\"h4\" color={red[600]}>\n                  {financialSummary.inactive}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Inativos\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Box\n                textAlign=\"center\"\n                p={2}\n                bgcolor={blueGrey[50]}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" color={blueGrey[600]}>\n                  {financialSummary.locked}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Trancados\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n\n          {/* Card com valor total e registros indefinidos */}\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box\n                  textAlign=\"center\"\n                  p={2}\n                  bgcolor={blue[50]}\n                  borderRadius={2}\n                >\n                  <Typography variant=\"h5\" color={blue[600]}>\n                    R$ {financialSummary.totalAmount.toFixed(2)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Valor Total\n                  </Typography>\n                </Box>\n              </Grid>\n              {financialSummary.undefined > 0 && (\n                <Grid item xs={6}>\n                  <Box\n                    textAlign=\"center\"\n                    p={2}\n                    bgcolor={blueGrey[50]}\n                    borderRadius={2}\n                    border={1}\n                    borderColor={blueGrey[200]}\n                  >\n                    <Typography variant=\"h5\" color={blueGrey[600]}>\n                      {financialSummary.undefined}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      Sem Status\n                    </Typography>\n                  </Box>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n\n          {/* Status Mês a Mês */}\n          <Box mt={3}>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n              Status dos Últimos Meses\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n              {financialSummary.monthlyStatus\n                .slice(0, 12)\n                .map((month, index) => (\n                  <Chip\n                    key={`${month.year}-${month.month}`}\n                    label={`${month.monthName.substring(0, 3)}/${month.year}`}\n                    size=\"small\"\n                    sx={{\n                      backgroundColor:\n                        month.status === 'ativo'\n                          ? green[100]\n                          : month.status === 'pendente'\n                          ? orange[100]\n                          : month.status === 'inativo'\n                          ? red[100]\n                          : month.status === 'trancado'\n                          ? blueGrey[100]\n                          : blueGrey[50],\n                      color:\n                        month.status === 'ativo'\n                          ? green[800]\n                          : month.status === 'pendente'\n                          ? orange[800]\n                          : month.status === 'inativo'\n                          ? red[800]\n                          : month.status === 'trancado'\n                          ? blueGrey[800]\n                          : blueGrey[600],\n                      '&:hover': {\n                        backgroundColor:\n                          month.status === 'ativo'\n                            ? green[200]\n                            : month.status === 'pendente'\n                            ? orange[200]\n                            : month.status === 'inativo'\n                            ? red[200]\n                            : month.status === 'trancado'\n                            ? blueGrey[200]\n                            : blueGrey[100]\n                      }\n                    }}\n                    title={`${month.monthName} ${\n                      month.year\n                    } - R$ ${month.amount.toFixed(2)} (${getStatusText(\n                      month.status\n                    )})`}\n                  />\n                ))}\n            </Box>\n            {financialSummary.monthlyStatus.length > 12 && (\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                sx={{ mt: 1, display: 'block' }}\n              >\n                Mostrando os 12 meses mais recentes de {financialSummary.valid}{' '}\n                registros válidos\n              </Typography>\n            )}\n            {financialSummary.monthlyStatus.length === 0 && (\n              <Alert severity=\"info\" sx={{ mt: 1 }}>\n                Nenhum registro com status definido encontrado.\n              </Alert>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n\n      {/* Card com histórico de pagamentos */}\n      <Card elevation={3}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\n            <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n            <Typography variant=\"h5\" component=\"h2\">\n              Histórico de Pagamentos\n            </Typography>\n          </Box>\n\n          {payments.length === 0 ? (\n            <Alert severity=\"info\">\n              Nenhum registro de pagamento encontrado para este piloto.\n            </Alert>\n          ) : (\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>\n                      <strong>Período</strong>\n                    </TableCell>\n                    <TableCell>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell>\n                      <strong>Descrição</strong>\n                    </TableCell>\n                    <TableCell>\n                      <strong>Data</strong>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {payments\n                    .sort(\n                      (a, b) =>\n                        b.ref_year - a.ref_year || b.ref_month - a.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {formatMonth(payment.ref_month)} {payment.ref_year}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                            />\n                          ) : (\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                              -\n                            </Typography>\n                          )}\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\" fontWeight=\"bold\">\n                            R$ {parseAmount(payment.amount).toFixed(2)}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Box display=\"flex\" alignItems=\"center\">\n                            {getStatusIcon(payment.status)}\n                            <Typography\n                              variant=\"body2\"\n                              sx={{\n                                ml: 1,\n                                color: getStatusColor(payment.status),\n                                textTransform: 'capitalize'\n                              }}\n                            >\n                              {getStatusText(payment.status)}\n                            </Typography>\n                          </Box>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.Description &&\n                            payment.Description.trim() !== ''\n                              ? payment.Description\n                              : '-'}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {/* {payment.date && payment.date !== '' ? new Date(payment.date).toLocaleDateString('pt-BR') : '-'} */}\n                            {payment.date\n                              ? new Date(payment.date).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : '-'}\n                          </Typography>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          )}\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n\nexport default PaymentMonthly;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}