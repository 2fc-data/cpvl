{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon, Warning as WarningIcon, CheckCircle as CheckCircleIcon, Schedule as ScheduleIcon, Block as BlockIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Grid, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\nimport { blueGrey, blue, green, orange, red } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  console.log('--> PaymentMonthly userId:', userId);\n  const [payments, setPayments] = useState([]);\n\n  // Validate userId and construct API URL\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}?userId=${userId}`) : undefined;\n  console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // Fetch payments\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    console.log('--> paymentsData:', paymentsData);\n    console.log('--> paymentsError:', paymentsError);\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  // Format month\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Get status color\n  const getStatusColor = status => {\n    switch (status.toLowerCase()) {\n      case 'ativo':\n        return green[500];\n      case 'pendente':\n        return orange[500];\n      case 'inativo':\n        return red[500];\n      case 'trancado':\n        return blueGrey[500];\n      default:\n        return blueGrey[300];\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = status => {\n    switch (status.toLowerCase()) {\n      case 'ativo':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          sx: {\n            fontSize: 16,\n            color: green[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this);\n      case 'pendente':\n        return /*#__PURE__*/_jsxDEV(ScheduleIcon, {\n          sx: {\n            fontSize: 16,\n            color: orange[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      case 'inativo':\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          sx: {\n            fontSize: 16,\n            color: red[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n      case 'trancado':\n        return /*#__PURE__*/_jsxDEV(BlockIcon, {\n          sx: {\n            fontSize: 16,\n            color: blueGrey[500]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(WarningIcon, {\n          sx: {\n            fontSize: 16,\n            color: blueGrey[300]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  // Get status text\n  const getStatusText = status => {\n    return status && status.trim() !== '' ? status : 'Não definido';\n  };\n\n  // Calculate financial summary\n  const getFinancialSummary = () => {\n    const validPayments = payments.filter(p => p.status && p.status.trim() !== '');\n    const activePayments = validPayments.filter(p => p.status.toLowerCase() === 'ativo').length;\n    const pendingPayments = validPayments.filter(p => p.status.toLowerCase() === 'pendente').length;\n    const inactivePayments = validPayments.filter(p => p.status.toLowerCase() === 'inativo').length;\n    const lockedPayments = validPayments.filter(p => p.status.toLowerCase() === 'trancado').length;\n    const undefinedPayments = payments.filter(p => !p.status || p.status.trim() === '').length;\n    const totalAmount = validPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = validPayments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      status: payment.status,\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.Description || 'N/A',\n      date: payment.date\n    }));\n    return {\n      total: payments.length,\n      valid: validPayments.length,\n      active: activePayments,\n      pending: pendingPayments,\n      inactive: inactivePayments,\n      locked: lockedPayments,\n      undefined: undefinedPayments,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [errorMessage, \" Tente novamente mais tarde ou contate o suporte.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render empty state\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Resumo Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: green[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: green[600],\n                children: financialSummary.active\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Ativos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: orange[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: orange[600],\n                children: financialSummary.pending\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Pendentes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: red[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: red[600],\n                children: financialSummary.inactive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Inativos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 3,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: blueGrey[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                color: blueGrey[600],\n                children: financialSummary.locked\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Trancados\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blue[50],\n                borderRadius: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blue[600],\n                  children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Valor Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), financialSummary.undefined > 0 && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blueGrey[50],\n                borderRadius: 2,\n                border: 1,\n                borderColor: blueGrey[200],\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blueGrey[600],\n                  children: financialSummary.undefined\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Sem Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            color: \"primary\",\n            children: \"Status dos \\xDAltimos Meses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 1,\n            children: financialSummary.monthlyStatus.slice(0, 12).map((month, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${month.monthName.substring(0, 3)}/${month.year}`,\n              size: \"small\",\n              sx: {\n                backgroundColor: month.status.toLowerCase() === 'ativo' ? green[100] : month.status.toLowerCase() === 'pendente' ? orange[100] : month.status.toLowerCase() === 'inativo' ? red[100] : month.status.toLowerCase() === 'trancado' ? blueGrey[100] : blueGrey[50],\n                color: month.status.toLowerCase() === 'ativo' ? green[800] : month.status.toLowerCase() === 'pendente' ? orange[800] : month.status.toLowerCase() === 'inativo' ? red[800] : month.status.toLowerCase() === 'trancado' ? blueGrey[800] : blueGrey[600],\n                '&:hover': {\n                  backgroundColor: month.status.toLowerCase() === 'ativo' ? green[200] : month.status.toLowerCase() === 'pendente' ? orange[200] : month.status.toLowerCase() === 'inativo' ? red[200] : month.status.toLowerCase() === 'trancado' ? blueGrey[200] : blueGrey[100]\n                }\n              },\n              title: `${month.monthName} ${month.year} - R$ ${month.amount.toFixed(2)} (${getStatusText(month.status)})`\n            }, `${month.year}-${month.month}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), financialSummary.monthlyStatus.length > 12 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 1,\n              display: 'block'\n            },\n            children: [\"Mostrando os 12 meses mais recentes de \", financialSummary.valid, ' ', \"registros v\\xE1lidos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), financialSummary.monthlyStatus.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 1\n            },\n            children: \"Nenhum registro com status definido encontrado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n            sx: {\n              fontSize: 32,\n              color: blue[500],\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Hist\\xF3rico de Pagamentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Per\\xEDodo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Valor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Descri\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: payments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [formatMonth(payment.ref_month), \" \", payment.ref_year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: payment.type,\n                    size: \"small\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"bold\",\n                    children: [\"R$ \", parseAmount(payment.amount).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    children: [getStatusIcon(payment.status), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        ml: 1,\n                        color: getStatusColor(payment.status),\n                        textTransform: 'capitalize'\n                      },\n                      children: getStatusText(payment.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.Description && payment.Description.trim() !== '' ? payment.Description : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.date ? new Date(payment.date).toLocaleDateString('pt-BR') : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 23\n                }, this)]\n              }, `${payment.id || index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"QncJnODu76Cin27QJR3MAZwHAjI=\", false, function () {\n  return [useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Warning","WarningIcon","CheckCircle","CheckCircleIcon","Schedule","ScheduleIcon","Block","BlockIcon","Box","Typography","Card","CardContent","Grid","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","blueGrey","blue","green","orange","red","useEffect","useState","useFetch","API","getURI","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_ref","_s","userId","console","log","payments","setPayments","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","error","paymentsError","loading","paymentsLoading","method","url","Array","isArray","formatMonth","month","months","parseAmount","amount","parseFloat","toString","replace","getStatusColor","status","toLowerCase","getStatusIcon","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","trim","getFinancialSummary","validPayments","filter","p","activePayments","length","pendingPayments","inactivePayments","lockedPayments","undefinedPayments","totalAmount","reduce","sum","monthlyStatus","sort","a","b","ref_year","ref_month","map","payment","year","monthName","type","description","Description","date","total","valid","active","pending","inactive","locked","financialSummary","severity","children","display","justifyContent","errorMessage","message","includes","elevation","mb","variant","gutterBottom","container","spacing","item","xs","sm","textAlign","bgcolor","borderRadius","mt","toFixed","border","borderColor","flexWrap","gap","slice","index","label","substring","size","backgroundColor","title","alignItems","mr","component","hover","fontWeight","ml","textTransform","Date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import {\n  Payment as PaymentIcon,\n  Warning as WarningIcon,\n  CheckCircle as CheckCircleIcon,\n  Schedule as ScheduleIcon,\n  Block as BlockIcon\n} from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress\n} from '@mui/material';\nimport { blueGrey, blue, green, orange, red } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: number;\n  ref_month: number;\n  amount: number | string;\n  status: string;\n  type: string;\n  Description: string;\n  date: Date | string;\n}\n\ninterface PaymentMonthlyProps {\n  userId: string;\n}\n\nexport const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\n  console.log('--> PaymentMonthly userId:', userId);\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // Validate userId and construct API URL\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}?userId=${userId}`)\n    : undefined;\n  console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // Fetch payments\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    console.log('--> paymentsData:', paymentsData);\n    console.log('--> paymentsError:', paymentsError);\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  // Format month\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Get status color\n  const getStatusColor = (status: string) => {\n    switch (status!.toLowerCase()) {\n      case 'ativo':\n        return green[500];\n      case 'pendente':\n        return orange[500];\n      case 'inativo':\n        return red[500];\n      case 'trancado':\n        return blueGrey[500];\n      default:\n        return blueGrey[300];\n    }\n  };\n\n  // Get status icon\n  const getStatusIcon = (status: string) => {\n    switch (status!.toLowerCase()) {\n      case 'ativo':\n        return <CheckCircleIcon sx={{ fontSize: 16, color: green[500] }} />;\n      case 'pendente':\n        return <ScheduleIcon sx={{ fontSize: 16, color: orange[500] }} />;\n      case 'inativo':\n        return <WarningIcon sx={{ fontSize: 16, color: red[500] }} />;\n      case 'trancado':\n        return <BlockIcon sx={{ fontSize: 16, color: blueGrey[500] }} />;\n      default:\n        return <WarningIcon sx={{ fontSize: 16, color: blueGrey[300] }} />;\n    }\n  };\n\n  // Get status text\n  const getStatusText = (status: string) => {\n    return status && status.trim() !== '' ? status : 'Não definido';\n  };\n\n  // Calculate financial summary\n  const getFinancialSummary = () => {\n    const validPayments = payments.filter(\n      (p) => p.status && p.status.trim() !== ''\n    );\n\n    const activePayments = validPayments.filter(\n      (p) => p.status.toLowerCase() === 'ativo'\n    ).length;\n    const pendingPayments = validPayments.filter(\n      (p) => p.status.toLowerCase() === 'pendente'\n    ).length;\n    const inactivePayments = validPayments.filter(\n      (p) => p.status.toLowerCase() === 'inativo'\n    ).length;\n    const lockedPayments = validPayments.filter(\n      (p) => p.status.toLowerCase() === 'trancado'\n    ).length;\n    const undefinedPayments = payments.filter(\n      (p) => !p.status || p.status.trim() === ''\n    ).length;\n    const totalAmount = validPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = validPayments\n      .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        status: payment.status,\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.Description || 'N/A',\n        date: payment.date\n      }));\n\n    return {\n      total: payments.length,\n      valid: validPayments.length,\n      active: activePayments,\n      pending: pendingPayments,\n      inactive: inactivePayments,\n      locked: lockedPayments,\n      undefined: undefinedPayments,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return (\n      <Alert severity=\"error\">\n        {errorMessage} Tente novamente mais tarde ou contate o suporte.\n      </Alert>\n    );\n  }\n\n  // Render empty state\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <Card elevation={3} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Resumo Financeiro\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={6} sm={3}>\n              <Box\n                textAlign=\"center\"\n                p={2}\n                bgcolor={green[50]}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" color={green[600]}>\n                  {financialSummary.active}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Ativos\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Box\n                textAlign=\"center\"\n                p={2}\n                bgcolor={orange[50]}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" color={orange[600]}>\n                  {financialSummary.pending}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Pendentes\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Box textAlign=\"center\" p={2} bgcolor={red[50]} borderRadius={2}>\n                <Typography variant=\"h4\" color={red[600]}>\n                  {financialSummary.inactive}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Inativos\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <Box\n                textAlign=\"center\"\n                p={2}\n                bgcolor={blueGrey[50]}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" color={blueGrey[600]}>\n                  {financialSummary.locked}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Trancados\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Box\n                  textAlign=\"center\"\n                  p={2}\n                  bgcolor={blue[50]}\n                  borderRadius={2}\n                >\n                  <Typography variant=\"h5\" color={blue[600]}>\n                    R$ {financialSummary.totalAmount.toFixed(2)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Valor Total\n                  </Typography>\n                </Box>\n              </Grid>\n              {financialSummary.undefined > 0 && (\n                <Grid item xs={6}>\n                  <Box\n                    textAlign=\"center\"\n                    p={2}\n                    bgcolor={blueGrey[50]}\n                    borderRadius={2}\n                    border={1}\n                    borderColor={blueGrey[200]}\n                  >\n                    <Typography variant=\"h5\" color={blueGrey[600]}>\n                      {financialSummary.undefined}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      Sem Status\n                    </Typography>\n                  </Box>\n                </Grid>\n              )}\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n              Status dos Últimos Meses\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n              {financialSummary.monthlyStatus\n                .slice(0, 12)\n                .map((month, index) => (\n                  <Chip\n                    key={`${month.year}-${month.month}`}\n                    label={`${month.monthName.substring(0, 3)}/${month.year}`}\n                    size=\"small\"\n                    sx={{\n                      backgroundColor:\n                        month.status.toLowerCase() === 'ativo'\n                          ? green[100]\n                          : month.status.toLowerCase() === 'pendente'\n                          ? orange[100]\n                          : month.status.toLowerCase() === 'inativo'\n                          ? red[100]\n                          : month.status.toLowerCase() === 'trancado'\n                          ? blueGrey[100]\n                          : blueGrey[50],\n                      color:\n                        month.status.toLowerCase() === 'ativo'\n                          ? green[800]\n                          : month.status.toLowerCase() === 'pendente'\n                          ? orange[800]\n                          : month.status.toLowerCase() === 'inativo'\n                          ? red[800]\n                          : month.status.toLowerCase() === 'trancado'\n                          ? blueGrey[800]\n                          : blueGrey[600],\n                      '&:hover': {\n                        backgroundColor:\n                          month.status.toLowerCase() === 'ativo'\n                            ? green[200]\n                            : month.status.toLowerCase() === 'pendente'\n                            ? orange[200]\n                            : month.status.toLowerCase() === 'inativo'\n                            ? red[200]\n                            : month.status.toLowerCase() === 'trancado'\n                            ? blueGrey[200]\n                            : blueGrey[100]\n                      }\n                    }}\n                    title={`${month.monthName} ${\n                      month.year\n                    } - R$ ${month.amount.toFixed(2)} (${getStatusText(\n                      month.status\n                    )})`}\n                  />\n                ))}\n            </Box>\n            {financialSummary.monthlyStatus.length > 12 && (\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                sx={{ mt: 1, display: 'block' }}\n              >\n                Mostrando os 12 meses mais recentes de {financialSummary.valid}{' '}\n                registros válidos\n              </Typography>\n            )}\n            {financialSummary.monthlyStatus.length === 0 && (\n              <Alert severity=\"info\" sx={{ mt: 1 }}>\n                Nenhum registro com status definido encontrado.\n              </Alert>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n      <Card elevation={3}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\n            <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n            <Typography variant=\"h5\" component=\"h2\">\n              Histórico de Pagamentos\n            </Typography>\n          </Box>\n          <TableContainer component={Paper} elevation={0}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <strong>Período</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Tipo</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Valor</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Status</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Descrição</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Data</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {payments\n                  .sort(\n                    (a, b) =>\n                      b.ref_year - a.ref_year || b.ref_month - a.ref_month\n                  )\n                  .map((payment, index) => (\n                    <TableRow key={`${payment.id || index}`} hover>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {formatMonth(payment.ref_month)} {payment.ref_year}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {payment.type ? (\n                          <Chip\n                            label={payment.type}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        ) : (\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            -\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" fontWeight=\"bold\">\n                          R$ {parseAmount(payment.amount).toFixed(2)}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Box display=\"flex\" alignItems=\"center\">\n                          {getStatusIcon(payment.status)}\n                          <Typography\n                            variant=\"body2\"\n                            sx={{\n                              ml: 1,\n                              color: getStatusColor(payment.status),\n                              textTransform: 'capitalize'\n                            }}\n                          >\n                            {getStatusText(payment.status)}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.Description &&\n                          payment.Description.trim() !== ''\n                            ? payment.Description\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.date\n                            ? new Date(payment.date).toLocaleDateString('pt-BR')\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}