{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Button } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate(); // para redirecionar ao login se necessário\n\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState(null);\n  const [paymentConfirmed, setPaymentConfirmed] = useState({});\n  const [confirmingMonth, setConfirmingMonth] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const handleSwitchClick = (year, month) => {\n    setConfirmingMonth({\n      year,\n      month\n    });\n    setOpenModal(true);\n  };\n  const {\n    doFetch: doConfirm\n  } = useFetch({\n    method: 'PATCH'\n  });\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n    try {\n      await doConfirm({\n        url: getURI(API.confirmPayment),\n        body: {\n          userId,\n          ref_year: confirmingMonth.year,\n          ref_month: confirmingMonth.month\n        },\n        method: 'PATCH'\n      });\n\n      // setPayments((prev) =>\n      //   prev.map((p) =>\n      //     p.ref_year === confirmingMonth.year && p.ref_month === confirmingMonth.month\n      //       ? { ...p, status: 'Confirmado', updatedAt: new Date().toISOString() }\n      //       : p\n      //   )\n      // );\n\n      setPaymentConfirmed(prev => ({\n        ...prev,\n        [key]: true\n      }));\n    } catch (err) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      if (!confirmingError) {\n        setConfirmingError(err.message || 'Erro desconhecido ao confirmar pagamento.');\n      }\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n    setConfirmingError(null);\n  };\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) acc[key] = 0;\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus: []\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 12\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message && paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` ${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModal && confirmingMonth && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      bgcolor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1300,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirmar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Deseja confirmar o pagamento do m\\xEAs \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatMonth(confirmingMonth.month)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 51\n          }, this), \" de \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: confirmingMonth.year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 108\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCancel,\n            disabled: confirmingLoading,\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: handlePaymentConfirm,\n            disabled: confirmingLoading,\n            children: confirmingLoading ? 'Confirmando...' : 'Confirmar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), confirmingError && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"caption\",\n          mt: 1,\n          children: confirmingError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 47\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 41\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro \", selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? blue[100] : blue[50],\n                        color: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? blue[800] : blue[700],\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 43\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 317,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                      color: \"warning\",\n                      fontSize: \"medium\",\n                      titleAccess: \"\\xC0 confirmar\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                      color: \"success\",\n                      fontSize: \"medium\",\n                      titleAccess: \"Confirmado\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status !== 'Confirmado' && !paymentConfirmed[`${payment.ref_year}-${payment.ref_month}`] ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        onChange: () => handleSwitchClick(payment.ref_year, payment.ref_month)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 346,\n                        columnNumber: 40\n                      }, this),\n                      label: `Confirmar mês ${payment.ref_month}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"o4v78d0/peDyUfX50yEoOCNTlbw=\", false, function () {\n  return [useParams, useNavigate, useFetch, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Button","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useNavigate","useFetch","API","getURI","PaymentQRCode","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","navigate","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","confirmingLoading","setConfirmingLoading","confirmingError","setConfirmingError","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","doFetch","doConfirm","method","handlePaymentConfirm","isUserIdValid","key","url","confirmPayment","body","ref_year","ref_month","prev","err","console","error","message","handleCancel","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","paymentsError","loading","paymentsLoading","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","map","p","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyTotalsMissing","acc","paidMonths","Object","values","total","length","totalMissing","monthlyStatus","financialSummary","availableYears","severity","errorMessage","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","onClick","disabled","color","mt","elevation","size","id","labelId","value","label","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","title","type","status","titleAccess","createdAt","toLocaleDateString","updatedAt","control","checked","colSpan","toFixed","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel,\n  Button\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const navigate = useNavigate(); // para redirecionar ao login se necessário\n\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState<string | null>(null);\n\n  const [paymentConfirmed, setPaymentConfirmed] = useState<Record<string, boolean>>({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{ year: string; month: number } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSwitchClick = (year: string, month: number) => {\n    setConfirmingMonth({ year, month });\n    setOpenModal(true);\n  };\n\n  const { doFetch: doConfirm } = useFetch<IPaymentMonthly>({ method: 'PATCH' });\n\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n\n    try {\n      await doConfirm({\n        url: getURI(API.confirmPayment),\n        body: {\n          userId,\n          ref_year: confirmingMonth.year,\n          ref_month: confirmingMonth.month\n        },\n        method: 'PATCH'\n      })\n\n      // setPayments((prev) =>\n      //   prev.map((p) =>\n      //     p.ref_year === confirmingMonth.year && p.ref_month === confirmingMonth.month\n      //       ? { ...p, status: 'Confirmado', updatedAt: new Date().toISOString() }\n      //       : p\n      //   )\n      // );\n\n      setPaymentConfirmed((prev) => ({ ...prev, [key]: true }));\n\n    } catch (err: any) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      if (!confirmingError) {\n        setConfirmingError(err.message || 'Erro desconhecido ao confirmar pagamento.');\n      }\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n    setConfirmingError(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n\n  const { data: paymentsData, error: paymentsError, loading: paymentsLoading } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl,\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho',\n      'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n\n    const monthlyTotalsMissing: { [key: string]: number } = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!(acc as { [key: string]: number })[key]) (acc as { [key: string]: number })[key] = 0;\n      (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n      return acc;\n    }, {} as { [key: string]: number });\n\n    const paidMonths = Object.values(monthlyTotalsMissing).filter((total) => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n\n    return { total: filteredPayments.length, totalMissing, totalAmount, monthlyStatus: [] as any[] };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return <Alert severity=\"error\">ID de usuário inválido. Por favor, forneça um ID válido.</Alert>;\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message && paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` ${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return <Alert severity=\"info\">Nenhum registro de pagamento encontrado para este piloto.</Alert>;\n  }\n\n  return (\n    <>\n      {openModal && confirmingMonth && (\n        <Box position=\"fixed\" top={0} left={0} width=\"100vw\" height=\"100vh\" bgcolor=\"rgba(0,0,0,0.5)\" zIndex={1300} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>Confirmar Pagamento</Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja confirmar o pagamento do mês <strong>{formatMonth(confirmingMonth.month)}</strong> de <strong>{confirmingMonth.year}</strong>?\n            </Typography>\n\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Button onClick={handleCancel} disabled={confirmingLoading}>Cancelar</Button>\n              <Button variant=\"contained\" color=\"success\" onClick={handlePaymentConfirm} disabled={confirmingLoading}>\n                {confirmingLoading ? 'Confirmando...' : 'Confirmar'}\n              </Button>\n            </Box>\n\n            {confirmingError && <Typography color=\"error\" variant=\"caption\" mt={1}>{confirmingError}</Typography>}\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">Filtrar por Ano:</Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select labelId=\"year-select-label\" value={selectedYear} label=\"Ano\" onChange={(e) => setSelectedYear(e.target.value)} sx={{ borderRadius: 3 }}>\n                {availableYears.map((year) => <MenuItem key={year} value={year}>{year}</MenuItem>)}\n              </Select>\n            </FormControl>\n            <Typography variant=\"body2\" color=\"textSecondary\">{`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}</Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />} aria-controls=\"panel1-content\" id=\"panel1-header\">\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">Resumo Financeiro {selectedYear !== 'all' && `- ${selectedYear}`}</Typography>\n            </Box>\n          </AccordionSummary>\n\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}><strong>Mês</strong></TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}><strong>Tipo</strong></TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}><strong>Valor</strong></TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}><strong>Status</strong></TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}><strong>Pagamento</strong></TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}><strong>Confirmação</strong></TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {filteredPayments\n                    .sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month)\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Chip\n                            label={formatMonth(payment.ref_month)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            sx={{\n                              backgroundColor: (payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString()) ? blue[100] : blue[50],\n                              color: (payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString()) ? blue[800] : blue[700],\n                              width: 150\n                            }}\n                            title={`${payment.ref_year}`}\n                          />\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? <Chip label={payment.type} size=\"small\" variant=\"outlined\" sx={{ backgroundColor: lime[50], color: lime[800], width: 150 }} /> : ''}\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip label={payment.amount} size=\"small\" variant=\"outlined\" sx={{ backgroundColor: green[50], color: green[800], width: 150 }} />\n                          ) : (\n                            <Chip label={payment.amount} size=\"medium\" variant=\"outlined\" sx={{ color: blueGrey[300], width: 150 }} />\n                          )}\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status && payment.status !== 'Confirmado' ? (\n                            <BatteryCharging60Icon color=\"warning\" fontSize=\"medium\" titleAccess=\"À confirmar\" />\n                          ) : (\n                            <CheckIcon color=\"success\" fontSize=\"medium\" titleAccess=\"Confirmado\" />\n                          )}\n                        </TableCell>\n\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''}\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''}\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' && !paymentConfirmed[`${payment.ref_year}-${payment.ref_month}`] ? (\n                            <FormControlLabel\n                              control={<Switch checked={false} onChange={() => handleSwitchClick(payment.ref_year, payment.ref_month)} />}\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box textAlign=\"center\" p={2} bgcolor={blue[50]} borderRadius={3}>\n                        <Typography variant=\"h5\" color={blue[600]}>R$ {financialSummary.totalAmount.toFixed(2)}</Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">Valor Total Pago {`em ${selectedYear}`}</Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}