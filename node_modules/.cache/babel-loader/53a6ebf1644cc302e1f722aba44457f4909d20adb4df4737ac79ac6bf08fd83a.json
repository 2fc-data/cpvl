{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport { FormControl, InputLabel, MenuItem, Select, Typography, Button, Card, Box, Chip, Grid } from '@mui/material';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    totalMissing\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [pixCode, setPixCode] = useState('');\n  const [notice, setNotice] = useState('');\n  const amountMonthly = 50;\n  const {\n    doFetch: doNotice\n  } = useFetch({\n    method: 'POST'\n  });\n  const handlePaymentNotice = async () => {\n    if (!userId) return;\n    let currentValue = getPaymentValue(selectedPaymentType);\n    let n = currentValue / amountMonthly;\n    let ref_month = 12 - totalMissing;\n    try {\n      for (let i = 1; i <= n; i++, n > 0) {\n        console.log(n);\n        console.log(1);\n        console.log(amountMonthly);\n        amountMonthly;\n        await doNotice({\n          url: getURI(API.createPaymentMonthly),\n          body: {\n            userId,\n            amount: amountMonthly,\n            ref_year: new Date().getFullYear(),\n            ref_month: ref_month + i,\n            type: selectedPaymentType,\n            description: '',\n            status: 'Confirmar',\n            date: new Date(),\n            createdAt: new Date(),\n            updatedAt: new Date()\n          },\n          method: 'POST'\n        });\n        setSelectedPaymentType('');\n        setNotice('Avisado. Lançaremos em breve!');\n      }\n    } catch (err) {\n      console.error('Erro ao avisar pagamento', err);\n    }\n  };\n  const getPaymentValue = paymentType => {\n    switch (paymentType) {\n      case 'mensal':\n        return amountMonthly;\n      case 'trimestral':\n        return amountMonthly * 3;\n      case 'semestral':\n        return amountMonthly * 6;\n      case 'anual':\n        return amountMonthly * 12;\n      default:\n        return 0;\n    }\n  };\n  const getDiscount = paymentType => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.0;\n      // 0.05;\n      case 'semestral':\n        return 0.0;\n      // 0.10;\n      case 'anual':\n        return 0.0;\n      // 0.15;\n      default:\n        return 0;\n    }\n  };\n  const calculateFinalValue = paymentType => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n    return types;\n  };\n  const handleChange = event => {\n    setSelectedPaymentType(event.target.value);\n    setPixCode(''); // Clear previous code\n  };\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      alignItems: \"flex-start\",\n      padding: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        padding: 2,\n        children: notice ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"white\",\n          sx: {\n            bgcolor: 'warning.main',\n            borderRadius: '6px',\n            textAlign: 'center',\n            mb: 0\n          },\n          children: notice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this) : totalMissing > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"primary\",\n            sx: {\n              mb: 2\n            },\n            children: [totalMissing, \" meses \\xE0 pagar.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              minWidth: 280,\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"tipoPagamento\",\n              children: \"Tipo do pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"tipoPagamento\",\n              value: selectedPaymentType,\n              label: \"Tipo do pagamento\",\n              onChange: handleChange,\n              disabled: availableTypes.length === 0,\n              children: availableTypes.map((type, index) => {\n                const amount = calculateFinalValue(type);\n                const discount = getDiscount(type);\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: type.charAt(0).toUpperCase() + type.slice(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        textAlign: 'right'\n                      },\n                      children: [discount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `-${(discount * 100).toFixed(0)}%`,\n                        size: \"small\",\n                        color: \"success\",\n                        sx: {\n                          mr: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        children: [\"R$ \", amount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"primary\",\n          children: [totalMissing, \" meses \\xE0 pagar.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), \"CPVL agradece!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), selectedPaymentType && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          padding: 2,\n          sx: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: [\"Pagamento PIX -\", ' ', selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), currentDiscount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n            label: `Economize ${(currentDiscount * 100).toFixed(0)}% - R$ ${(baseValue - currentValue).toFixed(2)}`,\n            color: \"success\",\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"R$ \", currentValue.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(QRCodePix, {\n            pixkey: process.env.REACT_APP_PIX_KEY_CPVL || '',\n            merchant: \"CPVL\",\n            city: \"POCOS CALDAS\",\n            cep: \"37701000\",\n            amount: currentValue,\n            size: 280,\n            bgColor: \"#FFFFFF\",\n            level: \"M\",\n            onLoad: payload => setPixCode(payload)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), pixCode && /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Ou\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              size: \"large\",\n              onClick: copyToClipboard,\n              sx: {\n                mb: 0,\n                mt: 2,\n                borderRadius: 2,\n                textTransform: 'none'\n              },\n              children: \"C\\xF3digo PIX (Copia/Cola)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          padding: 2,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"primary\",\n              gutterBottom: true,\n              children: [/*#__PURE__*/_jsxDEV(\"u\", {\n                children: \"AP\\xD3S\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), \" o pagamento\", ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n                color: \"primary\",\n                fontSize: \"medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"warning\",\n              variant: \"contained\",\n              disabled: !pixCode ? true : false,\n              size: \"large\",\n              onClick: handlePaymentNotice,\n              sx: {\n                mt: 1,\n                borderRadius: 2,\n                textTransform: 'none',\n                padding: '10px 20px'\n              },\n              children: \"Avisar o pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"9LJeX6d2Quy7PAA00D9S9xZOYfs=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentQRCode;\nfunction whlie(arg0) {\n  throw new Error('Function not implemented.');\n}\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useState","useParams","QRCodePix","FormControl","InputLabel","MenuItem","Select","Typography","Button","Card","Box","Chip","Grid","ArrowDownwardIcon","useFetch","API","getURI","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentQRCode","_ref","_s","totalMissing","userId","selectedPaymentType","setSelectedPaymentType","pixCode","setPixCode","notice","setNotice","amountMonthly","doFetch","doNotice","method","handlePaymentNotice","currentValue","getPaymentValue","n","ref_month","i","console","log","url","createPaymentMonthly","body","amount","ref_year","Date","getFullYear","type","description","status","date","createdAt","updatedAt","err","error","paymentType","getDiscount","calculateFinalValue","baseValue","discount","Math","round","undefined","types","push","handleChange","event","target","value","copyToClipboard","navigator","clipboard","writeText","alert","textArea","document","createElement","appendChild","select","execCommand","removeChild","availableTypes","currentDiscount","children","container","spacing","alignItems","padding","item","xs","md","variant","color","sx","bgcolor","borderRadius","textAlign","mb","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","minWidth","id","labelId","label","onChange","disabled","length","map","index","display","justifyContent","width","charAt","toUpperCase","slice","toFixed","size","mr","style","fontWeight","gutterBottom","pixkey","process","env","REACT_APP_PIX_KEY_CPVL","merchant","city","cep","bgColor","level","onLoad","payload","onClick","mt","textTransform","fontSize","_c","whlie","arg0","Error","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix, { payload } from 'react-qrcode-pix';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  Button,\n  Card,\n  Box,\n  Chip,\n  Grid\n} from '@mui/material';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\n\ninterface PaymentProps {\n  totalMissing: number;\n}\n\ninterface IPaymentMonthly {\n  userId: string;\n  amount: number;\n  ref_year: string;\n  ref_month: number;\n  type?: string;\n  description?: string;\n  status?: string;\n  date?: Date;\n}\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ totalMissing }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [pixCode, setPixCode] = useState<string>('');\n  const [notice, setNotice] = useState<string>('');\n\n  const amountMonthly = 50;\n\n  const { doFetch: doNotice,\n  } = useFetch<IPaymentMonthly>({ method: 'POST' });\n\n  const handlePaymentNotice = async () => {\n    if (!userId) return;\n\n    let currentValue = getPaymentValue(selectedPaymentType);\n    let n = currentValue / amountMonthly;\n    let ref_month = 12 - totalMissing;\n\n    try {\n      for (let i = 1; i <= n; i++, n > 0) {\n        console.log(n)\n        console.log(1)\n        console.log(amountMonthly)\n        amountMonthly\n        await doNotice({\n          url: getURI(API.createPaymentMonthly),\n          body: {\n            userId,\n            amount: amountMonthly,\n            ref_year: new Date().getFullYear(),\n            ref_month: ref_month + i,\n            type: selectedPaymentType,\n            description: '',\n            status: 'Confirmar',\n            date: new Date(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          },\n          method: 'POST'\n        });\n\n        setSelectedPaymentType('');\n        setNotice('Avisado. Lançaremos em breve!');\n      }\n    } catch (err) {\n      console.error('Erro ao avisar pagamento', err);\n    }\n  };\n\n  const getPaymentValue = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'mensal':\n        return amountMonthly;\n      case 'trimestral':\n        return amountMonthly * 3;\n      case 'semestral':\n        return amountMonthly * 6;\n      case 'anual':\n        return amountMonthly * 12;\n      default:\n        return 0;\n    }\n  };\n\n  const getDiscount = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.0; // 0.05;\n      case 'semestral':\n        return 0.0; // 0.10;\n      case 'anual':\n        return 0.0; // 0.15;\n      default:\n        return 0;\n    }\n  };\n\n  const calculateFinalValue = (paymentType: string): number => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    setSelectedPaymentType(event.target.value);\n    setPixCode(''); // Clear previous code\n  };\n\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType\n    ? calculateFinalValue(selectedPaymentType)\n    : 0;\n  const currentDiscount = selectedPaymentType\n    ? getDiscount(selectedPaymentType)\n    : 0;\n  const baseValue = selectedPaymentType\n    ? getPaymentValue(selectedPaymentType)\n    : 0;\n\n  return (\n    <Card>\n      <Grid container spacing={3} alignItems=\"flex-start\" padding={3}>\n        <Grid item xs={12} md={4} padding={2}>\n          {notice ? (\n            <Typography\n              variant=\"h6\"\n              color=\"white\"\n              sx={{\n                bgcolor: 'warning.main',\n                borderRadius: '6px',\n                textAlign: 'center',\n                mb: 0\n              }}\n            >\n              {notice}\n            </Typography>\n          ) : totalMissing > 0 ? (\n            <Box>\n              <Typography variant=\"body1\" color=\"primary\" sx={{ mb: 2 }}>\n                {totalMissing} meses à pagar.\n              </Typography>\n\n              <FormControl fullWidth sx={{ minWidth: 280, mb: 1 }}>\n                <InputLabel id=\"tipoPagamento\">Tipo do pagamento</InputLabel>\n                <Select\n                  labelId=\"tipoPagamento\"\n                  value={selectedPaymentType}\n                  label=\"Tipo do pagamento\"\n                  onChange={handleChange}\n                  disabled={availableTypes.length === 0}\n                >\n                  {availableTypes.map((type: string, index: number) => {\n                    const amount = calculateFinalValue(type);\n                    const discount = getDiscount(type);\n\n                    return (\n                      <MenuItem key={index} value={type}>\n                        <Box\n                          sx={{\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            width: '100%'\n                          }}\n                        >\n                          <span>\n                            {type.charAt(0).toUpperCase() + type.slice(1)}\n                          </span>\n                          <Box sx={{ textAlign: 'right' }}>\n                            {discount > 0 && (\n                              <Chip\n                                label={`-${(discount * 100).toFixed(0)}%`}\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ mr: 1 }}\n                              />\n                            )}\n                            <span style={{ fontWeight: 'bold' }}>\n                              R$ {amount.toFixed(2)}\n                            </span>\n                          </Box>\n                        </Box>\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Box>\n          ) : (\n            <Typography variant=\"body1\" color=\"primary\">\n              {totalMissing} meses à pagar.\n              <br />\n              CPVL agradece!\n            </Typography>\n          )}\n        </Grid>\n\n        {selectedPaymentType && (\n          <>\n            <Grid item xs={12} md={4} padding={2} sx={{ textAlign: 'center' }}>\n              <Typography variant=\"body1\" color=\"primary\" gutterBottom>\n                Pagamento PIX -{' '}\n                {selectedPaymentType.charAt(0).toUpperCase() +\n                  selectedPaymentType.slice(1)}\n              </Typography>\n\n              {currentDiscount > 0 && (\n                <Chip\n                  label={`Economize ${(currentDiscount * 100).toFixed(\n                    0\n                  )}% - R$ ${(baseValue - currentValue).toFixed(2)}`}\n                  color=\"success\"\n                  sx={{\n                    mb: 2\n                  }}\n                />\n              )}\n\n              <Typography variant=\"h5\">R$ {currentValue.toFixed(2)}</Typography>\n              <QRCodePix\n                pixkey={process.env.REACT_APP_PIX_KEY_CPVL || ''}\n                merchant=\"CPVL\"\n                city=\"POCOS CALDAS\"\n                cep=\"37701000\"\n                amount={currentValue}\n                size={280}\n                bgColor=\"#FFFFFF\"\n                level=\"M\"\n                onLoad={(payload) => setPixCode(payload)}\n              />\n\n              {pixCode && (\n                <Box>\n                  <Typography variant=\"body1\">Ou</Typography>\n                  <Button\n                    variant=\"contained\"\n                    size=\"large\"\n                    onClick={copyToClipboard}\n                    sx={{\n                      mb: 0,\n                      mt: 2,\n                      borderRadius: 2,\n                      textTransform: 'none'\n                    }}\n                  >\n                    Código PIX (Copia/Cola)\n                  </Button>\n                </Box>\n              )}\n            </Grid>\n\n            <Grid item xs={12} md={4} padding={2}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography variant=\"body1\" color=\"primary\" gutterBottom>\n                  <u>APÓS</u> o pagamento{' '}\n                </Typography>\n                <Typography variant=\"body1\" color=\"primary\">\n                  <ArrowDownwardIcon color=\"primary\" fontSize=\"medium\" />\n                </Typography>\n                <Button\n                  color=\"warning\"\n                  variant=\"contained\"\n                  disabled={!pixCode ? true : false}\n                  size=\"large\"\n                  onClick={handlePaymentNotice}\n                  sx={{\n                    mt: 1,\n                    borderRadius: 2,\n                    textTransform: 'none',\n                    padding: '10px 20px'\n                  }}\n                >\n                  Avisar o pagamento\n                </Button>\n              </Box>\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Card>\n  );\n};\nfunction whlie(arg0: boolean) {\n  throw new Error('Function not implemented.');\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}