{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/QrCode/Qrcode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\n// import ContentCopyIcon from '@mui/icons-material/ContentCopy';\n// import QRCode from 'qrcode.react';\nimport { QrCodePix } from 'qrcode-pix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Qrcode = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [pixKey, setPixKey] = useState('');\n  const [value, setValue] = useState('');\n  const [pixCode, setPixCode] = useState('');\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const handleGeneratePix = async () => {\n    if (!pixKey || !value) {\n      alert('Por favor, preencha a chave PIX e o valor.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const qrCodePix = QrCodePix({\n        version: '01',\n        key: pixKey,\n        name: 'Seu Nome',\n        city: 'SAO PAULO',\n        transactionId: 'TX' + Math.random().toString(36).substr(2, 9),\n        value: parseFloat(value)\n      });\n      const payload = qrCodePix.payload();\n      const base64Image = await qrCodePix.base64();\n      setPixCode(payload);\n      setQrCodeUrl(base64Image);\n    } catch (error) {\n      console.error('Error generating PIX:', error);\n      alert('Erro ao gerar o QR Code PIX. Verifique os dados informados.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCopyToClipboard = async () => {\n    if (qrCodeUrl) {\n      await navigator.clipboard.writeText(qrCodeUrl);\n    } else {\n      await navigator.clipboard.writeText(pixCode);\n    }\n    setOpenSnackbar(true);\n  };\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 500,\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Gerador de QR Code PIX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Chave PIX\",\n      value: pixKey,\n      onChange: e => setPixKey(e.target.value),\n      fullWidth: true,\n      margin: \"normal\",\n      placeholder: \"Digite sua chave PIX (CPF, e-mail, telefone, etc.)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Valor (R$)\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      fullWidth: true,\n      margin: \"normal\",\n      type: \"number\"\n      // step=\"0.01\"\n      ,\n      placeholder: \"Digite o valor\",\n      inputProps: {\n        min: \"0.01\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleGeneratePix,\n      sx: {\n        mt: 2\n      },\n      disabled: loading,\n      children: loading ? 'Gerando...' : 'Gerar QR Code'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Qrcode, \"EytZPmlZvUOjjWdfYOivHNWNqTw=\");\n_c = Qrcode;\nvar _c;\n$RefreshReg$(_c, \"Qrcode\");","map":{"version":3,"names":["React","useState","TextField","Button","Box","Typography","QrCodePix","jsxDEV","_jsxDEV","Qrcode","_ref","_s","userId","pixKey","setPixKey","value","setValue","pixCode","setPixCode","qrCodeUrl","setQrCodeUrl","openSnackbar","setOpenSnackbar","loading","setLoading","handleGeneratePix","alert","qrCodePix","version","key","name","city","transactionId","Math","random","toString","substr","parseFloat","payload","base64Image","base64","error","console","handleCopyToClipboard","navigator","clipboard","writeText","handleCloseSnackbar","sx","p","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","e","target","fullWidth","placeholder","type","inputProps","min","color","onClick","mt","disabled","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/QrCode/Qrcode.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, IconButton, Snackbar } from '@mui/material';\n// import ContentCopyIcon from '@mui/icons-material/ContentCopy';\n// import QRCode from 'qrcode.react';\nimport { QrCodePix } from 'qrcode-pix';\n\nexport const Qrcode = ({userId}) => {\n  const [pixKey, setPixKey] = useState<string>('');\n  const [value, setValue] = useState<string>('');\n  const [pixCode, setPixCode] = useState<string>('');\n  const [qrCodeUrl, setQrCodeUrl] = useState<string>('');\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleGeneratePix = async () => {\n    if (!pixKey || !value) {\n      alert('Por favor, preencha a chave PIX e o valor.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const qrCodePix = QrCodePix({\n        version: '01',\n        key: pixKey,\n        name: 'Seu Nome',\n        city: 'SAO PAULO',\n        transactionId: 'TX' + Math.random().toString(36).substr(2, 9),\n        value: parseFloat(value),\n      });\n\n      const payload = qrCodePix.payload();\n      const base64Image = await qrCodePix.base64();\n\n      setPixCode(payload);\n      setQrCodeUrl(base64Image);\n    } catch (error) {\n      console.error('Error generating PIX:', error);\n      alert('Erro ao gerar o QR Code PIX. Verifique os dados informados.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCopyToClipboard = async () => {\n    if (qrCodeUrl) {\n      await navigator.clipboard.writeText(qrCodeUrl);\n    } else {\n      await navigator.clipboard.writeText(pixCode);\n    }\n    setOpenSnackbar(true);\n  };\n\n  const handleCloseSnackbar = () => {\n    setOpenSnackbar(false);\n  };\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 500, margin: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Gerador de QR Code PIX\n      </Typography>\n      <TextField\n        label=\"Chave PIX\"\n        value={pixKey}\n        onChange={(e) => setPixKey(e.target.value)}\n        fullWidth\n        margin=\"normal\"\n        placeholder=\"Digite sua chave PIX (CPF, e-mail, telefone, etc.)\"\n      />\n      <TextField\n        label=\"Valor (R$)\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        fullWidth\n        margin=\"normal\"\n        type=\"number\"\n        // step=\"0.01\"\n        placeholder=\"Digite o valor\"\n        inputProps={{ min: \"0.01\" }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleGeneratePix}\n        sx={{ mt: 2 }}\n        disabled={loading}\n      >\n        {loading ? 'Gerando...' : 'Gerar QR Code'}\n      </Button>\n      {/*       \n      {pixCode && (\n        <Box sx={{ mt: 3, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            QR Code para Pagamento\n          </Typography>\n          <QRCode value={pixCode} size={200} />\n          <Typography variant=\"body2\" sx={{ mt: 1, mb: 2 }}>\n            Valor: R$ {parseFloat(value).toFixed(2)}\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <TextField\n              value={pixCode}\n              fullWidth\n              multiline\n              rows={4}\n              InputProps={{\n                readOnly: true,\n              }}\n              sx={{ mr: 1, flex: 1 }}\n            />\n            <IconButton onClick={handleCopyToClipboard} color=\"primary\" size=\"large\">\n              <ContentCopyIcon />\n            </IconButton>\n          </Box>\n          <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n            Clique no ícone para copiar o código PIX ou a imagem do QR Code\n          </Typography>\n          {qrCodeUrl && (\n            <Box sx={{ mt: 2 }}>\n              <img src={qrCodeUrl} alt=\"QR Code PIX\" style={{ maxWidth: '100%' }} />\n            </Box>\n          )}\n        </Box>\n      )}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackbar}\n        message=\"Código PIX copiado!\"\n      /> */}\n    </Box>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}