{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress, Accordion, AccordionSummary, AccordionDetails, FormControl, InputLabel, Select, MenuItem, FormControlLabel } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear().toString());\n  const [paymentConfirmed, setPaymentConfirmed] = useState({});\n  const [confirmingMonth, setConfirmingMonth] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const handleSwitchClick = (year, month) => {\n    setConfirmingMonth({\n      year,\n      month\n    });\n    setOpenModal(true);\n  };\n  const handlePaymentConfirm = () => {\n    if (confirmingMonth !== null) {\n      setPaymentConfirmed(prevState => ({\n        ...prevState,\n        [confirmingMonth]: true\n      }));\n      console.log(`✅ Pagamento confirmado para o mês: ${confirmingMonth}`);\n    }\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const getAvailableYears = () => {\n    const yearsSet = new Set(payments.map(p => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n  const getFilteredPayments = () => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter(payment => payment.ref_year === selectedYear);\n  };\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.description || 'N/A',\n      status: payment.status || 'N/A',\n      date: payment.date,\n      createdAt: payment.createdAt,\n      updatedAt: payment.updatedAt\n    }));\n    const monthlyTotalsMissing = filteredPayments.reduce((acc, payment) => {\n      const key = `${payment.ref_year}-${payment.ref_month}`;\n      if (!acc[key]) {\n        acc[key] = 0;\n      }\n      acc[key] += parseAmount(payment.amount);\n      return acc;\n    }, {});\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(total => !!total && total > 0).length;\n    const totalMissing = 12 - paidMonths;\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModal && /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      bgcolor: \"rgba(0,0,0,0.5)\",\n      zIndex: 1300,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: 4,\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Confirmar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mb: 2\n          },\n          children: [\"Deseja realmente confirmar o pagamento do m\\xEAs:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: confirmingMonth && formatMonth(confirmingMonth)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Cancelar\",\n            onClick: handleCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            color: \"success\",\n            label: \"Confirmar\",\n            onClick: handlePaymentConfirm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 2,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            children: \"Filtrar por Ano:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            size: \"small\",\n            sx: {\n              minWidth: 150\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"year-select-label\",\n              children: \"Ano\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"year-select-label\",\n              value: selectedYear,\n              label: \"Ano\",\n              onChange: e => setSelectedYear(e.target.value),\n              sx: {\n                borderRadius: 3\n              },\n              children: availableYears.map(year => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: year,\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: `Mostrando ${filteredPayments.length} registros de ${selectedYear}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n            color: \"primary\",\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }, this),\n          \"aria-controls\": \"panel1-content\",\n          id: \"panel1-header\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n              sx: {\n                fontSize: 32,\n                color: blue[500],\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              children: [\"Resumo Financeiro\", ' ', selectedYear !== 'all' && `- ${selectedYear}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            elevation: 0,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 350,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Pagamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 356,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Confirma\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      color: blue[600],\n                      textAlign: 'center'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPayments.sort((a, b) => Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.ref_month === monthCurrent && payment.ref_year.toString() === yearCurrent.toString() ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[100],\n                        color: blue[800],\n                        '&:hover': {\n                          backgroundColor: blue[200]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: formatMonth(payment.ref_month),\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: blue[50],\n                        color: blue[700],\n                        '&:hover': {\n                          backgroundColor: blue[100]\n                        },\n                        width: 150\n                      },\n                      title: `${payment.ref_year}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 392,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.type,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: lime[50],\n                        color: lime[800],\n                        '&:hover': {\n                          backgroundColor: lime[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 29\n                    }, this) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: parseAmount(payment.amount) > 0 ? /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"small\",\n                      variant: \"outlined\",\n                      sx: {\n                        backgroundColor: green[50],\n                        color: green[800],\n                        '&:hover': {\n                          backgroundColor: green[100]\n                        },\n                        fontWeight: 'bold',\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                      label: payment.amount,\n                      size: \"medium\",\n                      variant: \"outlined\",\n                      sx: {\n                        color: blueGrey[300],\n                        width: 150\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: payment.status && payment.status !== 'Confirmado' ? /*#__PURE__*/_jsxDEV(BatteryCharging60Icon, {\n                        color: \"warning\",\n                        fontSize: \"medium\",\n                        titleAccess: \"\\xC0 confirmar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 31\n                      }, this) : /*#__PURE__*/_jsxDEV(CheckIcon, {\n                        color: \"success\",\n                        fontSize: \"medium\",\n                        titleAccess: \"Confirmado\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.createdAt ? new Date(payment.createdAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: payment.updatedAt ? new Date(payment.updatedAt).toLocaleDateString('pt-BR') : ''\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    sx: {\n                      textAlign: 'center'\n                    },\n                    children: payment.status !== 'Confirmado' && !paymentConfirmed[payment.ref_month] ? /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      control: /*#__PURE__*/_jsxDEV(Switch, {\n                        checked: false,\n                        onChange: () => handleSwitchClick(payment.ref_month)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 490,\n                        columnNumber: 33\n                      }, this),\n                      label: `Confirmar mês ${payment.ref_month}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 29\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 25\n                  }, this)]\n                }, `${payment.id || index}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 7,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      textAlign: \"center\",\n                      p: 2,\n                      bgcolor: blue[50],\n                      borderRadius: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"h5\",\n                        color: blue[600],\n                        children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 513,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        children: [\"Valor Total Pago \", `em ${selectedYear}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), filteredPayments.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        mb: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n        totalMissing: financialSummary.totalMissing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"rxQn+Pglzew5xQf6oNUn3ty1+4I=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","userId","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","handlePaymentConfirm","prevState","console","log","handleCancel","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","error","paymentsError","loading","paymentsLoading","method","url","Array","isArray","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","map","p","ref_year","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyStatus","ref_month","monthName","type","description","status","date","createdAt","updatedAt","monthlyTotalsMissing","acc","key","paidMonths","Object","values","total","length","totalMissing","financialSummary","availableYears","severity","errorMessage","message","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","label","onClick","color","elevation","size","id","labelId","value","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","fontWeight","title","titleAccess","toLocaleDateString","control","checked","colSpan","toFixed","mt","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [paymentConfirmed, setPaymentConfirmed] = useState<Record<number, boolean>>({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{ year: string; month: number } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\nconst handleSwitchClick = (year: string, month: number) => {\n  setConfirmingMonth({ year, month });\n  setOpenModal(true);\n};\n\n\n  const handlePaymentConfirm = () => {\n    if (confirmingMonth !== null) {\n      setPaymentConfirmed((prevState) => ({\n        ...prevState,\n        [confirmingMonth]: true,\n      }));\n\n      console.log(`✅ Pagamento confirmado para o mês: ${confirmingMonth}`);\n    }\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending (newest first)\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = filteredPayments\n      .sort(\n        (a, b) =>\n          Number(a.ref_year) - Number(b.ref_year) || a.ref_month - b.ref_month\n      )\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.description || 'N/A',\n        status: payment.status || 'N/A',\n        date: payment.date,\n        createdAt: payment.createdAt,\n        updatedAt: payment.updatedAt\n      }));\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key]) {\n          (acc as { [key: string]: number })[key] = 0;\n        }\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    // Count months with zero total\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += `${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {openModal && (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100vw\"\n          height=\"100vh\"\n          bgcolor=\"rgba(0,0,0,0.5)\"\n          zIndex={1300}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirmar Pagamento\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja realmente confirmar o pagamento do mês:{' '}\n              <strong>{confirmingMonth && formatMonth(confirmingMonth)}</strong>?\n            </Typography>\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Chip label=\"Cancelar\" onClick={handleCancel} />\n              <Chip color=\"success\" label=\"Confirmar\" onClick={handlePaymentConfirm} />\n            </Box>\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.ref_month === monthCurrent &&\n                            payment.ref_year.toString() ===\n                            yearCurrent.toString() ? (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[100],\n                                color: blue[800],\n                                '&:hover': { backgroundColor: blue[200] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          ) : (\n                            <Chip\n                              label={formatMonth(payment.ref_month)}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: blue[50],\n                                color: blue[700],\n                                '&:hover': { backgroundColor: blue[100] },\n                                width: 150\n                              }}\n                              title={`${payment.ref_year}`}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                '&:hover': { backgroundColor: lime[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                '&:hover': { backgroundColor: green[100] },\n                                fontWeight: 'bold',\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{\n                                color: blueGrey[300],\n                                width: 150\n                              }}\n                            />\n                          )}\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <div>\n                            {payment.status &&\n                              payment.status !== 'Confirmado' ? (\n                              <BatteryCharging60Icon\n                                color=\"warning\"\n                                fontSize=\"medium\"\n                                titleAccess=\"À confirmar\"\n                              />\n                            ) : (\n                              <CheckIcon\n                                color=\"success\"\n                                fontSize=\"medium\"\n                                titleAccess=\"Confirmado\"\n                              />\n                            )}\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                'pt-BR'\n                              )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' && !paymentConfirmed[payment.ref_month] ? (\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={false}\n                                  onChange={() => handleSwitchClick(payment.ref_month)}\n                                />\n                              }\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}