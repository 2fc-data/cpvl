{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/QrCode/Qrcode.component.tsx\";\nimport React from 'react';\nimport { TextField, Button, Box, Typography } from '@mui/material';\n// import ContentCopyIcon from '@mui/icons-material/ContentCopy';\n// import QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Qrcode = () => {\n  // const [pixKey, setPixKey] = useState<string>('');\n  // const [value, setValue] = useState<string>('');\n  // const [pixCode, setPixCode] = useState<string>('');\n  // const [qrCodeUrl, setQrCodeUrl] = useState<string>('');\n  // const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  // const [loading, setLoading] = useState<boolean>(false);\n\n  // const handleGeneratePix = async () => {\n  //   if (!pixKey || !value) {\n  //     alert('Por favor, preencha a chave PIX e o valor.');\n  //     return;\n  //   }\n\n  //   setLoading(true);\n  //   try {\n  //     const qrCodePix = QrCodePix({\n  //       version: '01',\n  //       key: pixKey,\n  //       name: 'Seu Nome',\n  //       city: 'SAO PAULO',\n  //       transactionId: 'TX' + Math.random().toString(36).substr(2, 9),\n  //       value: parseFloat(value),\n  //     });\n\n  //     const payload = qrCodePix.payload();\n  //     const base64Image = await qrCodePix.base64();\n\n  //     setPixCode(payload);\n  //     setQrCodeUrl(base64Image);\n  //   } catch (error) {\n  //     console.error('Error generating PIX:', error);\n  //     alert('Erro ao gerar o QR Code PIX. Verifique os dados informados.');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  // const handleCopyToClipboard = async () => {\n  //   if (qrCodeUrl) {\n  //     await navigator.clipboard.writeText(qrCodeUrl);\n  //   } else {\n  //     await navigator.clipboard.writeText(pixCode);\n  //   }\n  //   setOpenSnackbar(true);\n  // };\n\n  // const handleCloseSnackbar = () => {\n  //   setOpenSnackbar(false);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3,\n      maxWidth: 500,\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Gerador de QR Code PIX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Chave PIX\",\n      value: pixKey,\n      onChange: e => setPixKey(e.target.value),\n      fullWidth: true,\n      margin: \"normal\",\n      placeholder: \"Digite sua chave PIX (CPF, e-mail, telefone, etc.)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Valor (R$)\",\n      value: value,\n      onChange: e => setValue(e.target.value),\n      fullWidth: true,\n      margin: \"normal\",\n      type: \"number\"\n      // step=\"0.01\"\n      ,\n      placeholder: \"Digite o valor\",\n      inputProps: {\n        min: \"0.01\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleGeneratePix,\n      sx: {\n        mt: 2\n      },\n      disabled: loading,\n      children: loading ? 'Gerando...' : 'Gerar QR Code'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = Qrcode;\nvar _c;\n$RefreshReg$(_c, \"Qrcode\");","map":{"version":3,"names":["React","TextField","Button","Box","Typography","jsxDEV","_jsxDEV","Qrcode","sx","p","maxWidth","margin","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","value","pixKey","onChange","e","setPixKey","target","fullWidth","placeholder","setValue","type","inputProps","min","color","onClick","handleGeneratePix","mt","disabled","loading","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/QrCode/Qrcode.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box, Typography, IconButton, Snackbar } from '@mui/material';\n// import ContentCopyIcon from '@mui/icons-material/ContentCopy';\n// import QRCode from 'qrcode.react';\nimport { QrCodePix } from 'qrcode-pix';\n\nexport const Qrcode = () => {\n  // const [pixKey, setPixKey] = useState<string>('');\n  // const [value, setValue] = useState<string>('');\n  // const [pixCode, setPixCode] = useState<string>('');\n  // const [qrCodeUrl, setQrCodeUrl] = useState<string>('');\n  // const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n  // const [loading, setLoading] = useState<boolean>(false);\n\n  // const handleGeneratePix = async () => {\n  //   if (!pixKey || !value) {\n  //     alert('Por favor, preencha a chave PIX e o valor.');\n  //     return;\n  //   }\n\n  //   setLoading(true);\n  //   try {\n  //     const qrCodePix = QrCodePix({\n  //       version: '01',\n  //       key: pixKey,\n  //       name: 'Seu Nome',\n  //       city: 'SAO PAULO',\n  //       transactionId: 'TX' + Math.random().toString(36).substr(2, 9),\n  //       value: parseFloat(value),\n  //     });\n\n  //     const payload = qrCodePix.payload();\n  //     const base64Image = await qrCodePix.base64();\n\n  //     setPixCode(payload);\n  //     setQrCodeUrl(base64Image);\n  //   } catch (error) {\n  //     console.error('Error generating PIX:', error);\n  //     alert('Erro ao gerar o QR Code PIX. Verifique os dados informados.');\n  //   } finally {\n  //     setLoading(false);\n  //   }\n  // };\n\n  // const handleCopyToClipboard = async () => {\n  //   if (qrCodeUrl) {\n  //     await navigator.clipboard.writeText(qrCodeUrl);\n  //   } else {\n  //     await navigator.clipboard.writeText(pixCode);\n  //   }\n  //   setOpenSnackbar(true);\n  // };\n\n  // const handleCloseSnackbar = () => {\n  //   setOpenSnackbar(false);\n  // };\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 500, margin: 'auto' }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Gerador de QR Code PIX\n      </Typography>\n      <TextField\n        label=\"Chave PIX\"\n        value={pixKey}\n        onChange={(e) => setPixKey(e.target.value)}\n        fullWidth\n        margin=\"normal\"\n        placeholder=\"Digite sua chave PIX (CPF, e-mail, telefone, etc.)\"\n      />\n      <TextField\n        label=\"Valor (R$)\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        fullWidth\n        margin=\"normal\"\n        type=\"number\"\n        // step=\"0.01\"\n        placeholder=\"Digite o valor\"\n        inputProps={{ min: \"0.01\" }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleGeneratePix}\n        sx={{ mt: 2 }}\n        disabled={loading}\n      >\n        {loading ? 'Gerando...' : 'Gerar QR Code'}\n      </Button>\n      {/*       \n      {pixCode && (\n        <Box sx={{ mt: 3, textAlign: 'center' }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            QR Code para Pagamento\n          </Typography>\n          <QRCode value={pixCode} size={200} />\n          <Typography variant=\"body2\" sx={{ mt: 1, mb: 2 }}>\n            Valor: R$ {parseFloat(value).toFixed(2)}\n          </Typography>\n          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <TextField\n              value={pixCode}\n              fullWidth\n              multiline\n              rows={4}\n              InputProps={{\n                readOnly: true,\n              }}\n              sx={{ mr: 1, flex: 1 }}\n            />\n            <IconButton onClick={handleCopyToClipboard} color=\"primary\" size=\"large\">\n              <ContentCopyIcon />\n            </IconButton>\n          </Box>\n          <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1 }}>\n            Clique no ícone para copiar o código PIX ou a imagem do QR Code\n          </Typography>\n          {qrCodeUrl && (\n            <Box sx={{ mt: 2 }}>\n              <img src={qrCodeUrl} alt=\"QR Code PIX\" style={{ maxWidth: '100%' }} />\n            </Box>\n          )}\n        </Box>\n      )}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackbar}\n        message=\"Código PIX copiado!\"\n      /> */}\n    </Box>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAAEC,UAAU,QAA8B,eAAe;AACxF;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1B;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACED,OAAA,CAACH,GAAG;IAACK,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,QAAQ,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC/CN,OAAA,CAACF,UAAU;MAACS,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbZ,OAAA,CAACL,SAAS;MACRkB,KAAK,EAAC,WAAW;MACjBC,KAAK,EAAEC,MAAO;MACdC,QAAQ,EAAGC,CAAC,IAAKC,SAAS,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;MAC3CM,SAAS;MACTf,MAAM,EAAC,QAAQ;MACfgB,WAAW,EAAC;IAAoD;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACFZ,OAAA,CAACL,SAAS;MACRkB,KAAK,EAAC,YAAY;MAClBC,KAAK,EAAEA,KAAM;MACbE,QAAQ,EAAGC,CAAC,IAAKK,QAAQ,CAACL,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;MAC1CM,SAAS;MACTf,MAAM,EAAC,QAAQ;MACfkB,IAAI,EAAC;MACL;MAAA;MACAF,WAAW,EAAC,gBAAgB;MAC5BG,UAAU,EAAE;QAAEC,GAAG,EAAE;MAAO;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFZ,OAAA,CAACJ,MAAM;MACLW,OAAO,EAAC,WAAW;MACnBmB,KAAK,EAAC,SAAS;MACfC,OAAO,EAAEC,iBAAkB;MAC3B1B,EAAE,EAAE;QAAE2B,EAAE,EAAE;MAAE,CAAE;MACdC,QAAQ,EAAEC,OAAQ;MAAAzB,QAAA,EAEjByB,OAAO,GAAG,YAAY,GAAG;IAAe;MAAAtB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA0CN,CAAC;AAEV,CAAC;AAACoB,EAAA,GA/HW/B,MAAM;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}