{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\";\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, Grid, Chip, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport { blue } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n\n// interface IPaymentMonthly {\n//   id?: number;\n//   userId: number;\n//   ref_year: number;\n//   ref_month: number;\n//   amount: number | string;\n//   type: string;\n//   Description: string;\n//   date: Date | string;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = _ref => {\n  let {\n    userId\n  } = _ref;\n  // export const PaymentMonthly = () => {\n  // console.log('--> PaymentMonthly userId:', userId);\n  // const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // // Validate userId and construct API URL\n  // const isUserIdValid = userId && !isNaN(parseInt(userId));\n  // const apiUrl = isUserIdValid\n  //   ? getURI(`${API.paymentMonthly}?userId=${userId}`)\n  //   : undefined;\n  // console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // // Fetch payments\n  // const {\n  //   data: paymentsData,\n  //   error: paymentsError,\n  //   loading: paymentsLoading\n  // } = useFetch<IPaymentMonthly[]>({\n  //   method: 'GET',\n  //   url: apiUrl\n  // });\n\n  // useEffect(() => {\n  //   console.log('--> paymentsData:', paymentsData);\n  //   console.log('--> paymentsError:', paymentsError);\n  //   if (paymentsData) {\n  //     setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n  //   } else if (paymentsError) {\n  //     setPayments([]); // Clear payments on error\n  //   }\n  // }, [paymentsData, paymentsError]);\n\n  // Format month\n  // const formatMonth = (month: number) => {\n  //   const months = [\n  //     'Janeiro',\n  //     'Fevereiro',\n  //     'Março',\n  //     'Abril',\n  //     'Maio',\n  //     'Junho',\n  //     'Julho',\n  //     'Agosto',\n  //     'Setembro',\n  //     'Outubro',\n  //     'Novembro',\n  //     'Dezembro'\n  //   ];\n  //   return months[month - 1] || `Mês ${month}`;\n  // };\n\n  // // Parse amount\n  // const parseAmount = (amount: any): number => {\n  //   if (!amount || amount === '') return 0;\n  //   if (typeof amount === 'number') return amount;\n  //   try {\n  //     return parseFloat(amount.toString().replace(',', '.'));\n  //   } catch (error) {\n  //     console.error('Error parsing amount:', amount, error);\n  //     return 0;\n  //   }\n  // };\n\n  // Calculate financial summary\n  // const getFinancialSummary = () => {\n  //   const totalAmount = payments.reduce(\n  //     (sum, p) => sum + parseAmount(p.amount),\n  //     0\n  //   );\n\n  //   const monthlyStatus = payments\n  //     .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n  //     .map((payment) => ({\n  //       year: payment.ref_year,\n  //       month: payment.ref_month,\n  //       monthName: formatMonth(payment.ref_month),\n  //       amount: parseAmount(payment.amount),\n  //       type: payment.type || 'N/A',\n  //       description: payment.Description || 'N/A',\n  //       date: payment.date\n  //     }));\n\n  //   return {\n  //     total: payments.length,\n  //     totalAmount,\n  //     monthlyStatus\n  //   };\n  // };\n\n  // const financialSummary = getFinancialSummary();\n\n  // // Render invalid userId error\n  // if (!isUserIdValid) {\n  //   console.error('Invalid userId:', userId);\n  //   return (\n  //     <Alert severity=\"error\">\n  //       ID de usuário inválido. Por favor, forneça um ID válido.\n  //     </Alert>\n  //   );\n  // }\n\n  // // Render loading state\n  // if (paymentsLoading) {\n  //   return (\n  //     <Box display=\"flex\" justifyContent=\"center\" p={3}>\n  //       <CircularProgress />\n  //     </Box>\n  //   );\n  // }\n\n  // // Render error state\n  // if (paymentsError) {\n  //   let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n  //   if (paymentsError.message.includes('not valid JSON')) {\n  //     errorMessage =\n  //       'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n  //   } else if (paymentsError.message === 'Unauthorized') {\n  //     errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n  //   } else if (paymentsError.message === 'Forbidden resource') {\n  //     errorMessage =\n  //       'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n  //   } else if (paymentsError.message) {\n  //     errorMessage += ` Detalhes: ${paymentsError.message}`;\n  //   }\n  //   return (\n  //     <Alert severity=\"error\">\n  //       {errorMessage} Tente novamente mais tarde ou contate o suporte.\n  //     </Alert>\n  //   );\n  // }\n\n  // // Render empty state\n  // if (payments.length === 0) {\n  //   return (\n  //     <Alert severity=\"info\">\n  //       Nenhum registro de pagamento encontrado para este piloto.\n  //     </Alert>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        color: \"primary\",\n        children: [\"Resumo Financeiro \", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              p: 2,\n              bgcolor: blue[50],\n              borderRadius: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                color: blue[600],\n                children: \"R$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: \"Valor Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Status dos \\xDAltimos Meses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n          sx: {\n            fontSize: 32,\n            color: blue[500],\n            mr: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Hist\\xF3rico de Pagamentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        elevation: 0,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Per\\xEDodo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Tipo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Descri\\xE7\\xE3o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: payments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [formatMonth(payment.ref_month), \" \", payment.ref_year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                  label: payment.type,\n                  size: \"small\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  fontWeight: \"bold\",\n                  children: [\"R$ \", parseAmount(payment.amount).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: payment.Description && payment.Description.trim() !== '' ? payment.Description : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: payment.date ? new Date(payment.date).toLocaleDateString('pt-BR') : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this)]\n            }, `${payment.id || index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), \"*/}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","Grid","Chip","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","blue","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_ref","userId","children","elevation","sx","mb","variant","gutterBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","mt","container","spacing","item","xs","textAlign","p","bgcolor","borderRadius","display","alignItems","fontSize","mr","component","payments","sort","a","b","ref_year","ref_month","map","payment","index","hover","formatMonth","type","label","size","fontWeight","parseAmount","amount","toFixed","Description","trim","date","Date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress\n} from '@mui/material';\nimport { blue } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n\n// interface IPaymentMonthly {\n//   id?: number;\n//   userId: number;\n//   ref_year: number;\n//   ref_month: number;\n//   amount: number | string;\n//   type: string;\n//   Description: string;\n//   date: Date | string;\n// }\n\ninterface PaymentMonthlyProps {\n  userId: string;\n}\n\nexport const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\n// export const PaymentMonthly = () => {\n  // console.log('--> PaymentMonthly userId:', userId);\n  // const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // // Validate userId and construct API URL\n  // const isUserIdValid = userId && !isNaN(parseInt(userId));\n  // const apiUrl = isUserIdValid\n  //   ? getURI(`${API.paymentMonthly}?userId=${userId}`)\n  //   : undefined;\n  // console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // // Fetch payments\n  // const {\n  //   data: paymentsData,\n  //   error: paymentsError,\n  //   loading: paymentsLoading\n  // } = useFetch<IPaymentMonthly[]>({\n  //   method: 'GET',\n  //   url: apiUrl\n  // });\n\n  // useEffect(() => {\n  //   console.log('--> paymentsData:', paymentsData);\n  //   console.log('--> paymentsError:', paymentsError);\n  //   if (paymentsData) {\n  //     setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n  //   } else if (paymentsError) {\n  //     setPayments([]); // Clear payments on error\n  //   }\n  // }, [paymentsData, paymentsError]);\n\n  // Format month\n  // const formatMonth = (month: number) => {\n  //   const months = [\n  //     'Janeiro',\n  //     'Fevereiro',\n  //     'Março',\n  //     'Abril',\n  //     'Maio',\n  //     'Junho',\n  //     'Julho',\n  //     'Agosto',\n  //     'Setembro',\n  //     'Outubro',\n  //     'Novembro',\n  //     'Dezembro'\n  //   ];\n  //   return months[month - 1] || `Mês ${month}`;\n  // };\n\n  // // Parse amount\n  // const parseAmount = (amount: any): number => {\n  //   if (!amount || amount === '') return 0;\n  //   if (typeof amount === 'number') return amount;\n  //   try {\n  //     return parseFloat(amount.toString().replace(',', '.'));\n  //   } catch (error) {\n  //     console.error('Error parsing amount:', amount, error);\n  //     return 0;\n  //   }\n  // };\n\n  // Calculate financial summary\n  // const getFinancialSummary = () => {\n  //   const totalAmount = payments.reduce(\n  //     (sum, p) => sum + parseAmount(p.amount),\n  //     0\n  //   );\n\n  //   const monthlyStatus = payments\n  //     .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n  //     .map((payment) => ({\n  //       year: payment.ref_year,\n  //       month: payment.ref_month,\n  //       monthName: formatMonth(payment.ref_month),\n  //       amount: parseAmount(payment.amount),\n  //       type: payment.type || 'N/A',\n  //       description: payment.Description || 'N/A',\n  //       date: payment.date\n  //     }));\n\n  //   return {\n  //     total: payments.length,\n  //     totalAmount,\n  //     monthlyStatus\n  //   };\n  // };\n\n  // const financialSummary = getFinancialSummary();\n\n  // // Render invalid userId error\n  // if (!isUserIdValid) {\n  //   console.error('Invalid userId:', userId);\n  //   return (\n  //     <Alert severity=\"error\">\n  //       ID de usuário inválido. Por favor, forneça um ID válido.\n  //     </Alert>\n  //   );\n  // }\n\n  // // Render loading state\n  // if (paymentsLoading) {\n  //   return (\n  //     <Box display=\"flex\" justifyContent=\"center\" p={3}>\n  //       <CircularProgress />\n  //     </Box>\n  //   );\n  // }\n\n  // // Render error state\n  // if (paymentsError) {\n  //   let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n  //   if (paymentsError.message.includes('not valid JSON')) {\n  //     errorMessage =\n  //       'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n  //   } else if (paymentsError.message === 'Unauthorized') {\n  //     errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n  //   } else if (paymentsError.message === 'Forbidden resource') {\n  //     errorMessage =\n  //       'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n  //   } else if (paymentsError.message) {\n  //     errorMessage += ` Detalhes: ${paymentsError.message}`;\n  //   }\n  //   return (\n  //     <Alert severity=\"error\">\n  //       {errorMessage} Tente novamente mais tarde ou contate o suporte.\n  //     </Alert>\n  //   );\n  // }\n\n  // // Render empty state\n  // if (payments.length === 0) {\n  //   return (\n  //     <Alert severity=\"info\">\n  //       Nenhum registro de pagamento encontrado para este piloto.\n  //     </Alert>\n  //   );\n  // }\n\n  return (\n    <>\n      <Card elevation={3} sx={{ mb: 3 }}>        \n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Resumo Financeiro {userId}\n          </Typography>\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Box\n                  textAlign=\"center\"\n                  p={2}\n                  bgcolor={blue[50]}\n                  borderRadius={2}\n                >\n                  <Typography variant=\"h5\" color={blue[600]}>\n                    R$ \n                    {/* {financialSummary.totalAmount.toFixed(2)} */}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Valor Total\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n              Status dos Últimos Meses\n            </Typography>\n            {/* <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n              {financialSummary.monthlyStatus\n                .slice(0, 12)\n                .map((month, index) => (\n                  <Chip\n                    key={`${month.year}-${month.month}`}\n                    label={`${month.monthName.substring(0, 3)}/${month.year}`}\n                    size=\"small\"\n                    sx={{\n                      backgroundColor: blue[100],\n                      color: blue[800],\n                      '&:hover': {\n                        backgroundColor: blue[200]\n                      }\n                    }}\n                    title={`${month.monthName} ${\n                      month.year\n                    } - R$ ${month.amount.toFixed(2)}`}\n                  />\n                ))}\n            </Box>\n            {financialSummary.monthlyStatus.length > 12 && (\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                sx={{ mt: 1, display: 'block' }}\n              >\n                Mostrando os 12 meses mais recentes de {financialSummary.total}{' '}\n                registros\n              </Typography>\n            )}\n            {financialSummary.monthlyStatus.length === 0 && (\n              <Alert severity=\"info\" sx={{ mt: 1 }}>\n                Nenhum registro encontrado.\n              </Alert>\n            )} */}\n          </Box>\n      </Card>\n      \n      <Card elevation={3}>\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\n            <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n            <Typography variant=\"h5\" component=\"h2\">\n              Histórico de Pagamentos\n            </Typography>\n          </Box>\n          <TableContainer component={Paper} elevation={0}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <strong>Período</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Tipo</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Valor</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Descrição</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Data</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {payments\n                  .sort(\n                    (a, b) =>\n                      b.ref_year - a.ref_year || b.ref_month - a.ref_month\n                  )\n                  .map((payment, index) => (\n                    <TableRow key={`${payment.id || index}`} hover>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {formatMonth(payment.ref_month)} {payment.ref_year}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {payment.type ? (\n                          <Chip\n                            label={payment.type}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        ) : (\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            -\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" fontWeight=\"bold\">\n                          R$ {parseAmount(payment.amount).toFixed(2)}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.Description &&\n                          payment.Description.trim() !== ''\n                            ? payment.Description\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.date\n                            ? new Date(payment.date).toLocaleDateString('pt-BR')\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n         */}\n      </Card>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}