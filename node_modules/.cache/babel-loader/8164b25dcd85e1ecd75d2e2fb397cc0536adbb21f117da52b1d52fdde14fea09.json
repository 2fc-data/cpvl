{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport { FormControl, InputLabel, MenuItem, Select, Typography, Button, Card, CardContent, Box, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    totalMissing\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [pixCode, setPixCode] = useState('');\n  const amountMonthly = 50;\n  const getPaymentValue = paymentType => {\n    switch (paymentType) {\n      case 'mensal':\n        return amountMonthly;\n      case 'trimestral':\n        return amountMonthly * 3;\n      case 'semestral':\n        return amountMonthly * 6;\n      case 'anual':\n        return amountMonthly * 12;\n      default:\n        return 0;\n    }\n  };\n  const getDiscount = paymentType => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.0;\n      // 0.05;\n      case 'semestral':\n        return 0.0;\n      // 0.10;\n      case 'anual':\n        return 0.0;\n      // 0.15;\n      default:\n        return 0;\n    }\n  };\n  const calculateFinalValue = paymentType => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n    return types;\n  };\n  const handleChange = event => {\n    setSelectedPaymentType(event.target.value);\n    setPixCode(''); // Clear previous code\n  };\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      border: '3px solid red',\n      display: 'flex',\n      // flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: totalMissing > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            sx: {\n              mb: 2\n            },\n            children: [totalMissing, \" meses \\xE0 pagar.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              minWidth: 280,\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"tipoPagamento\",\n              children: \"Tipo do pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"tipoPagamento\",\n              value: selectedPaymentType,\n              label: \"Tipo do pagamento\",\n              onChange: handleChange,\n              disabled: availableTypes.length === 0,\n              children: availableTypes.map((type, index) => {\n                const amount = calculateFinalValue(type);\n                const discount = getDiscount(type);\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      width: '100%'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: type.charAt(0).toUpperCase() + type.slice(1)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        textAlign: 'right'\n                      },\n                      children: [discount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `-${(discount * 100).toFixed(0)}%`,\n                        size: \"small\",\n                        color: \"success\",\n                        sx: {\n                          mr: 1\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        children: [\"R$ \", amount.toFixed(2)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 157,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"primary\",\n          children: [totalMissing, \" meses \\xE0 pagar.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 44\n          }, this), \"Muito obrigado!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), selectedPaymentType && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Pagamento PIX -\", ' ', selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), currentDiscount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Economize ${(currentDiscount * 100).toFixed(0)}% - R$ ${(baseValue - currentValue).toFixed(2)}`,\n          color: \"success\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"primary\",\n          sx: {\n            mb: 3\n          },\n          children: [\"R$ \", currentValue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(QRCodePix, {\n            pixkey: process.env.REACT_APP_PIX_KEY_CPVL || '',\n            merchant: \"CPVL\",\n            city: \"POCOS CALDAS\",\n            cep: \"37701000\",\n            amount: currentValue,\n            size: 280,\n            bgColor: \"#FFFFFF\",\n            level: \"M\",\n            onLoad: payload => setPixCode(payload)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), pixCode && /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"C\\xF3digo PIX (Copia e Cola):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            onClick: copyToClipboard,\n            sx: {\n              mt: 1,\n              borderRadius: 2,\n              textTransform: 'none'\n            },\n            children: \"\\uD83D\\uDCCB Copiar C\\xF3digo PIX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"HRHVT4iFXG5UAQlrXAeCbC1PDH0=\", false, function () {\n  return [useParams];\n});\n_c = PaymentQRCode;\nexport default PaymentQRCode;\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useState","useParams","QRCodePix","FormControl","InputLabel","MenuItem","Select","Typography","Button","Card","CardContent","Box","Chip","jsxDEV","_jsxDEV","PaymentQRCode","_ref","_s","totalMissing","userId","selectedPaymentType","setSelectedPaymentType","pixCode","setPixCode","amountMonthly","getPaymentValue","paymentType","getDiscount","calculateFinalValue","baseValue","discount","Math","round","undefined","types","push","handleChange","event","target","value","copyToClipboard","navigator","clipboard","writeText","alert","err","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","availableTypes","currentValue","currentDiscount","sx","border","display","justifyContent","children","variant","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","minWidth","id","labelId","label","onChange","disabled","length","map","type","index","amount","width","charAt","toUpperCase","slice","textAlign","toFixed","size","mr","style","fontWeight","gutterBottom","pixkey","process","env","REACT_APP_PIX_KEY_CPVL","merchant","city","cep","bgColor","level","onLoad","payload","onClick","mt","borderRadius","textTransform","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Box,\n  Chip\n} from '@mui/material';\n\ninterface PaymentProps {\n  totalMissing: number;\n}\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ totalMissing }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [pixCode, setPixCode] = useState<string>('');\n\n  const amountMonthly = 50;\n\n  const getPaymentValue = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'mensal':\n        return amountMonthly;\n      case 'trimestral':\n        return amountMonthly * 3;\n      case 'semestral':\n        return amountMonthly * 6;\n      case 'anual':\n        return amountMonthly * 12;\n      default:\n        return 0;\n    }\n  };\n\n  const getDiscount = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.0; // 0.05;\n      case 'semestral':\n        return 0.0; // 0.10;\n      case 'anual':\n        return 0.0; // 0.15;\n      default:\n        return 0;\n    }\n  };\n\n  const calculateFinalValue = (paymentType: string): number => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    setSelectedPaymentType(event.target.value);\n    setPixCode(''); // Clear previous code\n  };\n\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType\n    ? calculateFinalValue(selectedPaymentType)\n    : 0;\n  const currentDiscount = selectedPaymentType\n    ? getDiscount(selectedPaymentType)\n    : 0;\n  const baseValue = selectedPaymentType\n    ? getPaymentValue(selectedPaymentType)\n    : 0;\n\n  return (\n    <Card sx={{\n      border: '3px solid red',\n      display: 'flex',\n      // flexDirection: 'row',\n      justifyContent: 'space-between'\n    }}>\n      <CardContent>\n        <Box>\n          {totalMissing > 0 ? (\n            <Box>\n              <Typography variant=\"h6\" color=\"primary\" sx={{ mb: 2 }}>\n                {totalMissing} meses à pagar.\n              </Typography>\n\n              <FormControl fullWidth sx={{ minWidth: 280, mb: 1 }}>\n                <InputLabel id=\"tipoPagamento\">Tipo do pagamento</InputLabel>\n                <Select\n                  labelId=\"tipoPagamento\"\n                  value={selectedPaymentType}\n                  label=\"Tipo do pagamento\"\n                  onChange={handleChange}\n                  disabled={availableTypes.length === 0}\n                >\n                  {availableTypes.map((type: string, index: number) => {\n                    const amount = calculateFinalValue(type);\n                    const discount = getDiscount(type);\n\n                    return (\n                      <MenuItem key={index} value={type}>\n                        <Box\n                          sx={{\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            width: '100%'\n                          }}\n                        >\n                          <span>{type.charAt(0).toUpperCase() + type.slice(1)}</span>\n                          <Box sx={{ textAlign: 'right' }}>\n                            {discount > 0 && (\n                              <Chip\n                                label={`-${(discount * 100).toFixed(0)}%`}\n                                size=\"small\"\n                                color=\"success\"\n                                sx={{ mr: 1 }}\n                              />\n                            )}\n                            <span style={{ fontWeight: 'bold' }}>\n                              R$ {amount.toFixed(2)}\n                            </span>\n                          </Box>\n                        </Box>\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </Box>\n          ) : (\n            <Typography variant=\"body1\" color=\"primary\">\n              {totalMissing} meses à pagar.<br />\n              Muito obrigado!\n            </Typography>\n          )}\n        </Box>\n\n        {selectedPaymentType && (\n          <Box sx={{ textAlign: 'center' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Pagamento PIX -{' '}\n              {selectedPaymentType.charAt(0).toUpperCase() +\n                selectedPaymentType.slice(1)}\n            </Typography>\n\n            {currentDiscount > 0 && (\n              <Chip\n                label={`Economize ${(currentDiscount * 100).toFixed(\n                  0\n                )}% - R$ ${(baseValue - currentValue).toFixed(2)}`}\n                color=\"success\"\n                sx={{ mb: 2 }}\n              />\n            )}\n\n            <Typography variant=\"h4\" color=\"primary\" sx={{ mb: 3 }}>\n              R$ {currentValue.toFixed(2)}\n            </Typography>\n\n            <Box sx={{ mb: 3 }}>\n              <QRCodePix\n                pixkey={process.env.REACT_APP_PIX_KEY_CPVL || ''}\n                merchant=\"CPVL\"\n                city=\"POCOS CALDAS\"\n                cep=\"37701000\"\n                amount={currentValue}\n                size={280}\n                bgColor=\"#FFFFFF\"\n                level=\"M\"\n                onLoad={(payload) => setPixCode(payload)}\n              />\n            </Box>\n\n            {pixCode && (\n              <Box>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Código PIX (Copia e Cola):\n                </Typography>\n\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={copyToClipboard}\n                  sx={{\n                    mt: 1,\n                    borderRadius: 2,\n                    textTransform: 'none'\n                  }}\n                >\n                  📋 Copiar Código PIX\n                </Button>\n              </Box>\n            )}\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PaymentQRCode;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}