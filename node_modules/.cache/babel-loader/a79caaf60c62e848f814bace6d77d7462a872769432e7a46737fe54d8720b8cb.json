{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\";\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Grid, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\nimport { blue } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n\n// interface IPaymentMonthly {\n//   id?: number;\n//   userId: number;\n//   ref_year: number;\n//   ref_month: number;\n//   amount: number | string;\n//   type: string;\n//   Description: string;\n//   date: Date | string;\n// }\n\n// interface PaymentMonthlyProps {\n//   userId: string;\n// }\n\n// export const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentMonthly = () => {\n  // console.log('--> PaymentMonthly userId:', userId);\n  // const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // // Validate userId and construct API URL\n  // const isUserIdValid = userId && !isNaN(parseInt(userId));\n  // const apiUrl = isUserIdValid\n  //   ? getURI(`${API.paymentMonthly}?userId=${userId}`)\n  //   : undefined;\n  // console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // // Fetch payments\n  // const {\n  //   data: paymentsData,\n  //   error: paymentsError,\n  //   loading: paymentsLoading\n  // } = useFetch<IPaymentMonthly[]>({\n  //   method: 'GET',\n  //   url: apiUrl\n  // });\n\n  // useEffect(() => {\n  //   console.log('--> paymentsData:', paymentsData);\n  //   console.log('--> paymentsError:', paymentsError);\n  //   if (paymentsData) {\n  //     setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n  //   } else if (paymentsError) {\n  //     setPayments([]); // Clear payments on error\n  //   }\n  // }, [paymentsData, paymentsError]);\n\n  // Format month\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Calculate financial summary\n  // const getFinancialSummary = () => {\n  //   const totalAmount = payments.reduce(\n  //     (sum, p) => sum + parseAmount(p.amount),\n  //     0\n  //   );\n\n  //   const monthlyStatus = payments\n  //     .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n  //     .map((payment) => ({\n  //       year: payment.ref_year,\n  //       month: payment.ref_month,\n  //       monthName: formatMonth(payment.ref_month),\n  //       amount: parseAmount(payment.amount),\n  //       type: payment.type || 'N/A',\n  //       description: payment.Description || 'N/A',\n  //       date: payment.date\n  //     }));\n\n  //   return {\n  //     total: payments.length,\n  //     totalAmount,\n  //     monthlyStatus\n  //   };\n  // };\n\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [errorMessage, \" Tente novamente mais tarde ou contate o suporte.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render empty state\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Resumo Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blue[50],\n                borderRadius: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blue[600],\n                  children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Valor Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            color: \"primary\",\n            children: \"Status dos \\xDAltimos Meses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 1,\n            children: financialSummary.monthlyStatus.slice(0, 12).map((month, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${month.monthName.substring(0, 3)}/${month.year}`,\n              size: \"small\",\n              sx: {\n                backgroundColor: blue[100],\n                color: blue[800],\n                '&:hover': {\n                  backgroundColor: blue[200]\n                }\n              },\n              title: `${month.monthName} ${month.year} - R$ ${month.amount.toFixed(2)}`\n            }, `${month.year}-${month.month}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), financialSummary.monthlyStatus.length > 12 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 1,\n              display: 'block'\n            },\n            children: [\"Mostrando os 12 meses mais recentes de \", financialSummary.total, ' ', \"registros\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), financialSummary.monthlyStatus.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 1\n            },\n            children: \"Nenhum registro encontrado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n            sx: {\n              fontSize: 32,\n              color: blue[500],\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Hist\\xF3rico de Pagamentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Per\\xEDodo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Valor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Descri\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: payments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [formatMonth(payment.ref_month), \" \", payment.ref_year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: payment.type,\n                    size: \"small\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"bold\",\n                    children: [\"R$ \", parseAmount(payment.amount).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.Description && payment.Description.trim() !== '' ? payment.Description : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.date ? new Date(payment.date).toLocaleDateString('pt-BR') : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 23\n                }, this)]\n              }, `${payment.id || index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Grid","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","blue","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","formatMonth","month","months","parseAmount","amount","parseFloat","toString","replace","error","console","financialSummary","getFinancialSummary","isUserIdValid","userId","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","paymentsLoading","display","justifyContent","p","paymentsError","errorMessage","message","includes","payments","length","elevation","sx","mb","variant","gutterBottom","color","mt","container","spacing","item","xs","textAlign","bgcolor","borderRadius","totalAmount","toFixed","flexWrap","gap","monthlyStatus","slice","map","index","label","monthName","substring","year","size","backgroundColor","title","total","alignItems","fontSize","mr","component","sort","a","b","ref_year","ref_month","payment","hover","type","fontWeight","Description","trim","date","Date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress\n} from '@mui/material';\nimport { blue } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n\n// interface IPaymentMonthly {\n//   id?: number;\n//   userId: number;\n//   ref_year: number;\n//   ref_month: number;\n//   amount: number | string;\n//   type: string;\n//   Description: string;\n//   date: Date | string;\n// }\n\n// interface PaymentMonthlyProps {\n//   userId: string;\n// }\n\n// export const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\nexport const PaymentMonthly = () => {\n  // console.log('--> PaymentMonthly userId:', userId);\n  // const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // // Validate userId and construct API URL\n  // const isUserIdValid = userId && !isNaN(parseInt(userId));\n  // const apiUrl = isUserIdValid\n  //   ? getURI(`${API.paymentMonthly}?userId=${userId}`)\n  //   : undefined;\n  // console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // // Fetch payments\n  // const {\n  //   data: paymentsData,\n  //   error: paymentsError,\n  //   loading: paymentsLoading\n  // } = useFetch<IPaymentMonthly[]>({\n  //   method: 'GET',\n  //   url: apiUrl\n  // });\n\n  // useEffect(() => {\n  //   console.log('--> paymentsData:', paymentsData);\n  //   console.log('--> paymentsError:', paymentsError);\n  //   if (paymentsData) {\n  //     setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n  //   } else if (paymentsError) {\n  //     setPayments([]); // Clear payments on error\n  //   }\n  // }, [paymentsData, paymentsError]);\n\n  // Format month\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Calculate financial summary\n  // const getFinancialSummary = () => {\n  //   const totalAmount = payments.reduce(\n  //     (sum, p) => sum + parseAmount(p.amount),\n  //     0\n  //   );\n\n  //   const monthlyStatus = payments\n  //     .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n  //     .map((payment) => ({\n  //       year: payment.ref_year,\n  //       month: payment.ref_month,\n  //       monthName: formatMonth(payment.ref_month),\n  //       amount: parseAmount(payment.amount),\n  //       type: payment.type || 'N/A',\n  //       description: payment.Description || 'N/A',\n  //       date: payment.date\n  //     }));\n\n  //   return {\n  //     total: payments.length,\n  //     totalAmount,\n  //     monthlyStatus\n  //   };\n  // };\n\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return (\n      <Alert severity=\"error\">\n        {errorMessage} Tente novamente mais tarde ou contate o suporte.\n      </Alert>\n    );\n  }\n\n  // Render empty state\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <Card elevation={3} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Resumo Financeiro\n          </Typography>\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Box\n                  textAlign=\"center\"\n                  p={2}\n                  bgcolor={blue[50]}\n                  borderRadius={2}\n                >\n                  <Typography variant=\"h5\" color={blue[600]}>\n                    R$ {financialSummary.totalAmount.toFixed(2)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Valor Total\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n              Status dos Últimos Meses\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n              {financialSummary.monthlyStatus\n                .slice(0, 12)\n                .map((month, index) => (\n                  <Chip\n                    key={`${month.year}-${month.month}`}\n                    label={`${month.monthName.substring(0, 3)}/${month.year}`}\n                    size=\"small\"\n                    sx={{\n                      backgroundColor: blue[100],\n                      color: blue[800],\n                      '&:hover': {\n                        backgroundColor: blue[200]\n                      }\n                    }}\n                    title={`${month.monthName} ${\n                      month.year\n                    } - R$ ${month.amount.toFixed(2)}`}\n                  />\n                ))}\n            </Box>\n            {financialSummary.monthlyStatus.length > 12 && (\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                sx={{ mt: 1, display: 'block' }}\n              >\n                Mostrando os 12 meses mais recentes de {financialSummary.total}{' '}\n                registros\n              </Typography>\n            )}\n            {financialSummary.monthlyStatus.length === 0 && (\n              <Alert severity=\"info\" sx={{ mt: 1 }}>\n                Nenhum registro encontrado.\n              </Alert>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n      \n      <Card elevation={3}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\n            <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n            <Typography variant=\"h5\" component=\"h2\">\n              Histórico de Pagamentos\n            </Typography>\n          </Box>\n          <TableContainer component={Paper} elevation={0}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <strong>Período</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Tipo</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Valor</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Descrição</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Data</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {payments\n                  .sort(\n                    (a, b) =>\n                      b.ref_year - a.ref_year || b.ref_month - a.ref_month\n                  )\n                  .map((payment, index) => (\n                    <TableRow key={`${payment.id || index}`} hover>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {formatMonth(payment.ref_month)} {payment.ref_year}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {payment.type ? (\n                          <Chip\n                            label={payment.type}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        ) : (\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            -\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" fontWeight=\"bold\">\n                          R$ {parseAmount(payment.amount).toFixed(2)}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.Description &&\n                          payment.Description.trim() !== ''\n                            ? payment.Description\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.date\n                            ? new Date(payment.date).toLocaleDateString('pt-BR')\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}