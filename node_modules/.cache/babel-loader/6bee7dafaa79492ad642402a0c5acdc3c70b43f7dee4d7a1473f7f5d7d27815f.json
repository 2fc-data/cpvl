{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocalStorage } from 'usehooks-ts';\nimport { getHeaderOptions } from '../services';\nimport { useNavigate } from 'react-router-dom';\nconst useFetch = _ref => {\n  _s();\n  let {\n    method = 'GET',\n    url,\n    body,\n    options\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [, setIsLogged] = useLocalStorage(process.env.REACT_APP_LOGGED_KEY || 'APP_LOGGED', false);\n  const navigate = useNavigate();\n  const abortController = useRef(null);\n  const doFetch = useCallback(async _ref2 => {\n    let {\n      url: fetchUrl,\n      body: fetchBody,\n      method: fetchMethod = method\n    } = _ref2;\n    setLoading(true);\n    setError(null);\n\n    // cancela requisição anterior se ainda estiver ativa\n    if (abortController.current) {\n      abortController.current.abort();\n    }\n    abortController.current = new AbortController();\n    try {\n      const response = await fetch(fetchUrl, {\n        method: fetchMethod,\n        ...(fetchBody && {\n          body: JSON.stringify(fetchBody)\n        }),\n        ...getHeaderOptions(),\n        ...options,\n        signal: abortController.current.signal\n      });\n      console.log(getHeaderOptions());\n      if (!response.ok) {\n        const fetchError = new Error(response.statusText || 'Erro na requisição');\n        fetchError.status = response.status;\n        throw fetchError;\n      }\n      const json = await response.json();\n\n      // normaliza resposta no formato `{ data: ... }`\n      const normalized = json.data || json;\n      setData(normalized);\n      return normalized;\n    } catch (err) {\n      if (err.name !== 'AbortError') {\n        setError(err);\n        if (err.status === 401) {\n          setIsLogged(false);\n        }\n        if (err.status === 403) {\n          navigate('/');\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [method, navigate, options, setIsLogged]);\n\n  // efeito inicial caso `url` seja passado direto\n  useEffect(() => {\n    if (url) {\n      doFetch({\n        url,\n        body,\n        method\n      });\n    }\n    return () => {\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, body, method]);\n  return {\n    doFetch,\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"XkAXn6WObBJZ/sPcCJcRyGnb7rE=\", false, function () {\n  return [useLocalStorage, useNavigate];\n});\nexport default useFetch;","map":{"version":3,"names":["useEffect","useRef","useState","useCallback","useLocalStorage","getHeaderOptions","useNavigate","useFetch","_ref","_s","method","url","body","options","loading","setLoading","data","setData","error","setError","setIsLogged","process","env","REACT_APP_LOGGED_KEY","navigate","abortController","doFetch","_ref2","fetchUrl","fetchBody","fetchMethod","current","abort","AbortController","response","fetch","JSON","stringify","signal","console","log","ok","fetchError","Error","statusText","status","json","normalized","err","name"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/hooks/useFetch.ts"],"sourcesContent":["import { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocalStorage } from 'usehooks-ts';\nimport { getHeaderOptions } from '../services';\nimport { useNavigate } from 'react-router-dom';\n\ninterface IProps {\n  method?: 'POST' | 'GET' | 'PATCH' | 'PUT' | 'DELETE';\n  url?: string;\n  body?: any;\n  options?: RequestInit;\n}\n\ninterface FetchError extends Error {\n  status?: number;\n}\n\nconst useFetch = <T>({ method = 'GET', url, body, options }: IProps) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<T | null>(null);\n  const [error, setError] = useState<FetchError | null>(null);\n\n  const [, setIsLogged] = useLocalStorage(\n    process.env.REACT_APP_LOGGED_KEY || 'APP_LOGGED',\n    false\n  );\n  const navigate = useNavigate();\n  const abortController = useRef<AbortController | null>(null);\n\n  const doFetch = useCallback(\n    async ({\n      url: fetchUrl,\n      body: fetchBody,\n      method: fetchMethod = method\n    }: {\n      url: string;\n      body?: any;\n      method?: 'POST' | 'GET' | 'PATCH' | 'PUT' | 'DELETE';\n    }) => {\n      setLoading(true);\n      setError(null);\n\n      // cancela requisição anterior se ainda estiver ativa\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n      abortController.current = new AbortController();\n\n      try {\n        const response = await fetch(fetchUrl, {\n          method: fetchMethod,\n          ...(fetchBody && { body: JSON.stringify(fetchBody) }),\n          ...getHeaderOptions(),\n          ...options,\n          signal: abortController.current.signal\n        });\n        console.log(getHeaderOptions())\n        \n        if (!response.ok) {\n          const fetchError: FetchError = new Error(\n            response.statusText || 'Erro na requisição'\n          );\n          fetchError.status = response.status;\n          throw fetchError;\n        }\n\n        const json = await response.json();\n\n        // normaliza resposta no formato `{ data: ... }`\n        const normalized = json!.data || json;\n\n        setData(normalized);\n        return normalized as T;\n      } catch (err: any) {\n        if (err.name !== 'AbortError') {\n          setError(err);\n\n          if (err.status === 401) {\n            setIsLogged(false);\n          }\n          if (err.status === 403) {\n            navigate('/');\n          }\n        }\n      } finally {\n        setLoading(false);\n      }\n    },\n    [method, navigate, options, setIsLogged]\n  );\n\n  // efeito inicial caso `url` seja passado direto\n  useEffect(() => {\n    if (url) {\n      doFetch({ url, body, method });\n    }\n    return () => {\n      if (abortController.current) {\n        abortController.current.abort();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, body, method]);\n\n  return { doFetch, data, error, loading };\n};\n\nexport default useFetch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}