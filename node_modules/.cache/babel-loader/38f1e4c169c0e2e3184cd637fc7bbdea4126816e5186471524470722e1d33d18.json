{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCode from 'qrcode';\nimport { FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst pix_key_cpvl = process.env.PIX_KEY_CPVL;\nconsole.log();\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    valor,\n    totalMissing\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [qrCodeImage, setQrCodeImage] = useState('');\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [paymentLink, setPaymentLink] = useState('');\n\n  // Generate QR code only when payment type is selected\n  useEffect(() => {\n    if (selectedPaymentType && valor) {\n      const paymentUrl = `${pix_key_cpvl}${valor}&descricao=Pagamento${selectedPaymentType}&tipo=${selectedPaymentType}`;\n      QRCode.toDataURL(paymentUrl).then(qrCode => {\n        setQrCodeImage(qrCode);\n        setPaymentLink(paymentUrl);\n      }).catch(err => {\n        console.error('Erro ao gerar o QR Code:', err);\n      });\n    } else {\n      // Clear QR code if no payment type selected\n      setQrCodeImage('');\n      setPaymentLink('');\n    }\n  }, [valor, selectedPaymentType]); // Generate when both valor and selectedPaymentType change\n\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n\n    // Monthly is always possible if there are missing months\n    if (totalMissing > 0) {\n      types.push('mensal');\n    }\n\n    // Quarterly possible if missing 3+ months\n    if (totalMissing >= 3) {\n      types.push('trimestral');\n    }\n\n    // Semi-annual possible if missing 6+ months  \n    if (totalMissing >= 6) {\n      types.push('semestral');\n    }\n\n    // Annual only if all 12 months are missing\n    if (totalMissing === 12) {\n      types.push('anual');\n    }\n    return types;\n  };\n  const handleChange = event => {\n    setSelectedPaymentType(event.target.value);\n  };\n  const availableTypes = paymentType(totalMissing);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        minWidth: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"tipoPagamento\",\n        children: \"Tipo do pagamento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"tipoPagamento\",\n        id: \"tipopagamento\",\n        value: selectedPaymentType,\n        label: \"Tipo do pagamento\",\n        onChange: handleChange,\n        disabled: availableTypes.length === 0,\n        children: availableTypes.length === 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          disabled: true,\n          children: \"Nenhuma op\\xE7\\xE3o dispon\\xEDvel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : availableTypes.map((type, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: type,\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), selectedPaymentType && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Escaneie o QR Code abaixo para efetuar o pagamento \", selectedPaymentType, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), qrCodeImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '16px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: qrCodeImage,\n          alt: `QR Code de Pagamento ${selectedPaymentType} CPVL`,\n          style: {\n            maxWidth: '300px',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ou copie o link abaixo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: paymentLink,\n        readOnly: true,\n        style: {\n          width: '100%',\n          padding: '8px',\n          marginTop: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"wt4Vgn6kEbJMSFFpx70SbufTFug=\", false, function () {\n  return [useParams];\n});\n_c = PaymentQRCode;\nexport default PaymentQRCode;\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useEffect","useState","useParams","QRCode","FormControl","InputLabel","MenuItem","Select","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","pix_key_cpvl","process","env","PIX_KEY_CPVL","console","log","PaymentQRCode","_ref","_s","valor","totalMissing","userId","qrCodeImage","setQrCodeImage","selectedPaymentType","setSelectedPaymentType","paymentLink","setPaymentLink","paymentUrl","toDataURL","then","qrCode","catch","err","error","paymentType","undefined","types","push","handleChange","event","target","value","availableTypes","children","sx","minWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","label","onChange","disabled","length","map","type","index","charAt","toUpperCase","slice","variant","mt","style","marginTop","textAlign","src","alt","maxWidth","height","readOnly","width","padding","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCode from 'qrcode';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography\n} from '@mui/material';\n\nconst pix_key_cpvl = process.env.PIX_KEY_CPVL;\nconsole.log()\ninterface PaymentProps {\n  valor: number;\n  totalMissing: number;\n}\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ valor, totalMissing }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [qrCodeImage, setQrCodeImage] = useState<string>('');\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [paymentLink, setPaymentLink] = useState<string>('');\n\n  // Generate QR code only when payment type is selected\n  useEffect(() => {\n    if (selectedPaymentType && valor) {\n      const paymentUrl = `${pix_key_cpvl}${valor}&descricao=Pagamento${selectedPaymentType}&tipo=${selectedPaymentType}`;\n\n      QRCode.toDataURL(paymentUrl)\n        .then((qrCode: string) => {\n          setQrCodeImage(qrCode);\n          setPaymentLink(paymentUrl);\n        })\n        .catch((err: any) => {\n          console.error('Erro ao gerar o QR Code:', err);\n        });\n    } else {\n      // Clear QR code if no payment type selected\n      setQrCodeImage('');\n      setPaymentLink('');\n    }\n  }, [valor, selectedPaymentType]); // Generate when both valor and selectedPaymentType change\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n\n    // Monthly is always possible if there are missing months\n    if (totalMissing > 0) {\n      types.push('mensal');\n    }\n\n    // Quarterly possible if missing 3+ months\n    if (totalMissing >= 3) {\n      types.push('trimestral');\n    }\n\n    // Semi-annual possible if missing 6+ months  \n    if (totalMissing >= 6) {\n      types.push('semestral');\n    }\n\n    // Annual only if all 12 months are missing\n    if (totalMissing === 12) {\n      types.push('anual');\n    }\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    setSelectedPaymentType(event.target.value);\n  };\n\n  const availableTypes = paymentType(totalMissing);\n\n  return (\n    <div>\n      <FormControl sx={{ minWidth: 300 }}>\n        <InputLabel id=\"tipoPagamento\">Tipo do pagamento:</InputLabel>\n        <Select\n          labelId=\"tipoPagamento\"\n          id=\"tipopagamento\"\n          value={selectedPaymentType}\n          label=\"Tipo do pagamento\"\n          onChange={handleChange}\n          disabled={availableTypes.length === 0}\n        >\n          {availableTypes.length === 0 ? (\n            <MenuItem value=\"\" disabled>\n              Nenhuma opção disponível\n            </MenuItem>\n          ) : (\n            availableTypes.map((type: string, index: number) => (\n              <MenuItem key={index} value={type}>\n                {type.charAt(0).toUpperCase() + type.slice(1)}\n              </MenuItem>\n            ))\n          )}\n        </Select>\n      </FormControl>\n\n      {/* Show QR Code only after payment type is selected */}\n      {selectedPaymentType && (\n        <>\n          <Typography variant=\"body1\" sx={{ mt: 2 }}>\n            Escaneie o QR Code abaixo para efetuar o pagamento {selectedPaymentType}.\n          </Typography>\n          {qrCodeImage && (\n            <div style={{ marginTop: '16px', textAlign: 'center' }}>\n              <img\n                src={qrCodeImage}\n                alt={`QR Code de Pagamento ${selectedPaymentType} CPVL`}\n                style={{ maxWidth: '300px', height: 'auto' }}\n              />\n            </div>\n          )}\n          <br />\n          <p>Ou copie o link abaixo:</p>\n          <input\n            type=\"text\"\n            value={paymentLink}\n            readOnly\n            style={{ width: '100%', padding: '8px', marginTop: '8px' }}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PaymentQRCode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}