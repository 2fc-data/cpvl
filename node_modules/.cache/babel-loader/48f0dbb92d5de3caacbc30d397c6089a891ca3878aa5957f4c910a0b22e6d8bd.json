{"ast":null,"code":"import _objectSpread from\"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{Payment as PaymentIcon}from'@mui/icons-material';import{Box,Typography,Card,CardContent,Chip,Alert,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,CircularProgress,Accordion,AccordionSummary,AccordionDetails,FormControl,InputLabel,Select,MenuItem,FormControlLabel,Button}from'@mui/material';import CheckIcon from'@mui/icons-material/Check';import BatteryCharging60Icon from'@mui/icons-material/BatteryCharging60';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';import{blue,blueGrey,green,lime}from'@mui/material/colors';import{useEffect,useState}from'react';import{useParams}from'react-router-dom';import{useFetch}from'../../hooks';import{API,getURI}from'../../services';import{PaymentQRCode}from'../PaymentQRCode';import Switch from'@mui/material/Switch';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const PaymentMonthly=()=>{const{userId}=useParams();const[payments,setPayments]=useState([]);const[selectedYear,setSelectedYear]=useState(new Date().getFullYear().toString());const[confirmingLoading,setConfirmingLoading]=useState(false);const[confirmingError,setConfirmingError]=useState(null);const[paymentConfirmed,setPaymentConfirmed]=useState({});const[confirmingMonth,setConfirmingMonth]=useState(null);const[openModal,setOpenModal]=useState(false);const handleSwitchClick=(year,month)=>{setConfirmingMonth({year,month});setOpenModal(true);};const{doFetch:doConfirm}=useFetch({method:'PATCH'});const handlePaymentConfirm=async()=>{if(!confirmingMonth)return;if(!isUserIdValid){setConfirmingError('ID de usuário inválido.');return;}const key=\"\".concat(confirmingMonth.year,\"-\").concat(confirmingMonth.month);setConfirmingError(null);setConfirmingLoading(true);try{await doConfirm({url:getURI(API.confirmPayment),body:{userId,ref_year:confirmingMonth.year,ref_month:confirmingMonth.month},method:'PATCH'});setPayments(prev=>prev.map(p=>p.ref_year===confirmingMonth.year&&p.ref_month===confirmingMonth.month?_objectSpread(_objectSpread({},p),{},{status:'Confirmado',updatedAt:new Date().toISOString()}):p));setPaymentConfirmed(prev=>_objectSpread(_objectSpread({},prev),{},{[key]:true}));}catch(err){console.error('Falha ao confirmar pagamento na API:',err);if(!confirmingError){setConfirmingError(err.message||'Erro desconhecido ao confirmar pagamento.');}}finally{setConfirmingLoading(false);setOpenModal(false);setConfirmingMonth(null);}};const handleCancel=()=>{setOpenModal(false);setConfirmingMonth(null);setConfirmingError(null);};const isUserIdValid=userId&&!isNaN(parseInt(userId));const apiUrl=isUserIdValid?getURI(\"\".concat(API.paymentMonthly,\"/\").concat(userId)):undefined;const{data:paymentsData,error:paymentsError,loading:paymentsLoading}=useFetch({method:'GET',url:apiUrl});useEffect(()=>{setSelectedYear(new Date().getFullYear().toString());},[]);useEffect(()=>{if(paymentsData){setPayments(Array.isArray(paymentsData)?paymentsData:[]);}else if(paymentsError){setPayments([]);// Clear payments on error\n}},[paymentsData,paymentsError]);if(paymentsLoading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}const formatMonth=month=>{const months=['Janeiro','Fevereiro','Março','Abril','Maio','Junho','Julho','Agosto','Setembro','Outubro','Novembro','Dezembro'];return months[month-1]||\"M\\xEAs \".concat(month);};const parseAmount=amount=>{if(!amount||amount==='')return 0;if(typeof amount==='number')return amount;try{return parseFloat(amount.toString().replace(',','.'));}catch(error){console.error('Error parsing amount:',amount,error);return 0;}};const getAvailableYears=()=>{const yearsSet=new Set(payments.map(p=>p.ref_year));const yearsArray=Array.from(yearsSet);return yearsArray.sort((a,b)=>Number(b)-Number(a));// Sort descending\n};const getFilteredPayments=()=>{if(selectedYear==='all')return payments;return payments.filter(payment=>payment.ref_year===selectedYear);};const getFinancialSummary=()=>{const filteredPayments=getFilteredPayments();const totalAmount=filteredPayments.reduce((sum,p)=>sum+parseAmount(p.amount),0);const monthlyTotalsMissing=filteredPayments.reduce((acc,payment)=>{const key=\"\".concat(payment.ref_year,\"-\").concat(payment.ref_month);if(!acc[key])acc[key]=0;acc[key]+=parseAmount(payment.amount);return acc;},{});const paidMonths=Object.values(monthlyTotalsMissing).filter(total=>!!total&&total>0).length;const totalMissing=12-paidMonths;return{total:filteredPayments.length,totalMissing,totalAmount,monthlyStatus:[]};};const financialSummary=getFinancialSummary();const availableYears=getAvailableYears();const filteredPayments=getFilteredPayments();// Render invalid userId error\nif(!isUserIdValid){console.error('Invalid userId:',userId);return/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:\"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"});}if(paymentsError){let errorMessage='Não há histórico de pagamentos.';if(paymentsError.message&&paymentsError.message.includes('not valid JSON')){errorMessage='Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';}else if(paymentsError.message==='Unauthorized'){errorMessage='Acesso não autorizado. Por favor, faça login novamente.';}else if(paymentsError.message==='Forbidden resource'){errorMessage='Acesso proibido. Você não tem permissão para visualizar esses dados.';}else if(paymentsError.message){errorMessage+=\" \".concat(paymentsError.message);}return/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:errorMessage});}const yearCurrent=new Date().getFullYear();const monthCurrent=new Date().getMonth()+1;if(payments.length===0){return/*#__PURE__*/_jsx(Alert,{severity:\"info\",children:\"Nenhum registro de pagamento encontrado para este piloto.\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[openModal&&confirmingMonth&&/*#__PURE__*/_jsx(Box,{position:\"fixed\",top:0,left:0,width:\"100vw\",height:\"81vh\",bgcolor:\"rgba(0,0,0,0.5)\",zIndex:1300,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",children:/*#__PURE__*/_jsxs(Card,{sx:{p:4,minWidth:300},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Confirmar Pagamento\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{mb:2},children:[\"Deseja confirmar o pagamento do m\\xEAs\",' ',/*#__PURE__*/_jsx(\"strong\",{children:formatMonth(confirmingMonth.month)}),\" de\",' ',/*#__PURE__*/_jsx(\"strong\",{children:confirmingMonth.year}),\"?\"]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"flex-end\",gap:2,children:[/*#__PURE__*/_jsx(Button,{onClick:handleCancel,disabled:confirmingLoading,children:\"Cancelar\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"success\",onClick:handlePaymentConfirm,disabled:confirmingLoading,children:confirmingLoading?'Confirmando...':'Confirmar'})]}),confirmingError&&/*#__PURE__*/_jsx(Typography,{color:\"error\",variant:\"caption\",mt:1,children:confirmingError})]})}),/*#__PURE__*/_jsx(Card,{elevation:2,sx:{mb:3},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"primary\",children:\"Filtrar por Ano:\"}),/*#__PURE__*/_jsxs(FormControl,{size:\"small\",sx:{minWidth:150},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"year-select-label\",children:\"Ano\"}),/*#__PURE__*/_jsx(Select,{labelId:\"year-select-label\",value:selectedYear,label:\"Ano\",onChange:e=>setSelectedYear(e.target.value),sx:{borderRadius:3},children:availableYears.map(year=>/*#__PURE__*/_jsx(MenuItem,{value:year,children:year},year))})]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Mostrando \".concat(filteredPayments.length,\" registros de \").concat(selectedYear)})]})})}),/*#__PURE__*/_jsx(Card,{elevation:3,children:/*#__PURE__*/_jsxs(Accordion,{children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{color:\"primary\",fontSize:\"large\"}),\"aria-controls\":\"panel1-content\",id:\"panel1-header\",children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(PaymentIcon,{sx:{fontSize:32,color:blue[500],mr:2}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:\"primary\",children:[\"Resumo Financeiro\",' ',selectedYear!=='all'&&\"- \".concat(selectedYear)]})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsx(TableContainer,{component:Paper,elevation:0,children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"M\\xEAs\"})}),/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Tipo\"})}),/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Valor\"})}),/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Status\"})}),/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Pagamento\"})}),/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'},children:/*#__PURE__*/_jsx(\"strong\",{children:\"Confirma\\xE7\\xE3o\"})}),/*#__PURE__*/_jsx(TableCell,{sx:{color:blue[600],textAlign:'center'}})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredPayments.sort((a,b)=>Number(a.ref_year)-Number(b.ref_year)||a.ref_month-b.ref_month).map((payment,index)=>/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{sx:{textAlign:'center'},children:/*#__PURE__*/_jsx(Chip,{label:formatMonth(payment.ref_month),size:\"small\",variant:\"outlined\",sx:{backgroundColor:payment.ref_month===monthCurrent&&payment.ref_year.toString()===yearCurrent.toString()?blue[100]:blue[50],color:payment.ref_month===monthCurrent&&payment.ref_year.toString()===yearCurrent.toString()?blue[800]:blue[700],width:150},title:\"\".concat(payment.ref_year)})}),/*#__PURE__*/_jsx(TableCell,{sx:{textAlign:'center'},children:payment.type?/*#__PURE__*/_jsx(Chip,{label:payment.type,size:\"small\",variant:\"outlined\",sx:{backgroundColor:lime[50],color:lime[800],width:150}}):''}),/*#__PURE__*/_jsx(TableCell,{sx:{textAlign:'center'},children:parseAmount(payment.amount)>0?/*#__PURE__*/_jsx(Chip,{label:payment.amount,size:\"small\",variant:\"outlined\",sx:{backgroundColor:green[50],color:green[800],width:150}}):/*#__PURE__*/_jsx(Chip,{label:payment.amount,size:\"medium\",variant:\"outlined\",sx:{color:blueGrey[300],width:150}})}),/*#__PURE__*/_jsx(TableCell,{sx:{textAlign:'center'},children:payment.status&&payment.status!=='Confirmado'?/*#__PURE__*/_jsx(BatteryCharging60Icon,{color:\"warning\",fontSize:\"medium\",titleAccess:\"\\xC0 confirmar\"}):/*#__PURE__*/_jsx(CheckIcon,{color:\"success\",fontSize:\"medium\",titleAccess:\"Confirmado\"})}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:payment.createdAt?new Date(payment.createdAt).toLocaleDateString('pt-BR'):''})}),/*#__PURE__*/_jsx(TableCell,{sx:{textAlign:'center'},children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:payment.updatedAt?new Date(payment.updatedAt).toLocaleDateString('pt-BR'):''})}),/*#__PURE__*/_jsx(TableCell,{sx:{textAlign:'center'},children:payment.status!=='Confirmado'&&!paymentConfirmed[\"\".concat(payment.ref_year,\"-\").concat(payment.ref_month)]?/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:false,onChange:()=>handleSwitchClick(payment.ref_year,payment.ref_month)}),label:\"Confirmar m\\xEAs \".concat(payment.ref_month)}):null})]},\"\".concat(payment.id||index)))}),/*#__PURE__*/_jsx(TableBody,{children:/*#__PURE__*/_jsx(TableRow,{children:/*#__PURE__*/_jsx(TableCell,{colSpan:7,children:/*#__PURE__*/_jsxs(Box,{textAlign:\"center\",p:2,bgcolor:blue[50],borderRadius:3,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",color:blue[600],children:[\"R$ \",financialSummary.totalAmount.toFixed(2)]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[\"Valor Total Pago \",\"em \".concat(selectedYear)]})]})})})})]})})})]})}),filteredPayments.length>0&&/*#__PURE__*/_jsx(Card,{elevation:3,sx:{mt:3,mb:0},children:/*#__PURE__*/_jsx(PaymentQRCode,{totalMissing:financialSummary.totalMissing})})]});};","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","Accordion","AccordionSummary","AccordionDetails","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Button","CheckIcon","BatteryCharging60Icon","ExpandMoreIcon","blue","blueGrey","green","lime","useEffect","useState","useParams","useFetch","API","getURI","PaymentQRCode","Switch","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PaymentMonthly","userId","payments","setPayments","selectedYear","setSelectedYear","Date","getFullYear","toString","confirmingLoading","setConfirmingLoading","confirmingError","setConfirmingError","paymentConfirmed","setPaymentConfirmed","confirmingMonth","setConfirmingMonth","openModal","setOpenModal","handleSwitchClick","year","month","doFetch","doConfirm","method","handlePaymentConfirm","isUserIdValid","key","concat","url","confirmPayment","body","ref_year","ref_month","prev","map","p","_objectSpread","status","updatedAt","toISOString","err","console","error","message","handleCancel","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","paymentsError","loading","paymentsLoading","Array","isArray","display","justifyContent","alignItems","minHeight","children","formatMonth","months","parseAmount","amount","parseFloat","replace","getAvailableYears","yearsSet","Set","yearsArray","from","sort","a","b","Number","getFilteredPayments","filter","payment","getFinancialSummary","filteredPayments","totalAmount","reduce","sum","monthlyTotalsMissing","acc","paidMonths","Object","values","total","length","totalMissing","monthlyStatus","financialSummary","availableYears","severity","errorMessage","includes","yearCurrent","monthCurrent","getMonth","position","top","left","width","height","bgcolor","zIndex","sx","minWidth","variant","gutterBottom","mb","gap","onClick","disabled","color","mt","elevation","size","id","labelId","value","label","onChange","e","target","borderRadius","expandIcon","fontSize","mr","component","textAlign","index","hover","backgroundColor","title","type","titleAccess","createdAt","toLocaleDateString","control","checked","colSpan","toFixed"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormControlLabel,\n  Button\n} from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport BatteryCharging60Icon from '@mui/icons-material/BatteryCharging60';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\nimport Switch from '@mui/material/Switch';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: string;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  description: string;\n  status: string;\n  date: Date;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [selectedYear, setSelectedYear] = useState<string | 'all'>(\n    new Date().getFullYear().toString()\n  );\n  const [confirmingLoading, setConfirmingLoading] = useState(false);\n  const [confirmingError, setConfirmingError] = useState<string | null>(null);\n\n  const [paymentConfirmed, setPaymentConfirmed] = useState<\n    Record<string, boolean>\n  >({});\n  const [confirmingMonth, setConfirmingMonth] = useState<{\n    year: string;\n    month: number;\n  } | null>(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleSwitchClick = (year: string, month: number) => {\n    setConfirmingMonth({ year, month });\n    setOpenModal(true);\n  };\n\n  const { doFetch: doConfirm } = useFetch<IPaymentMonthly>({\n    method: 'PATCH'\n  });\n\n  const handlePaymentConfirm = async () => {\n    if (!confirmingMonth) return;\n\n    if (!isUserIdValid) {\n      setConfirmingError('ID de usuário inválido.');\n      return;\n    }\n\n    const key = `${confirmingMonth.year}-${confirmingMonth.month}`;\n    setConfirmingError(null);\n    setConfirmingLoading(true);\n\n    try {\n      await doConfirm({\n        url: getURI(API.confirmPayment),\n        body: {\n          userId,\n          ref_year: confirmingMonth.year,\n          ref_month: confirmingMonth.month\n        },\n        method: 'PATCH'\n      });\n\n      setPayments((prev) =>\n        prev.map((p) =>\n          p.ref_year === confirmingMonth.year &&\n          p.ref_month === confirmingMonth.month\n            ? {\n                ...p,\n                status: 'Confirmado',\n                updatedAt: new Date().toISOString()\n              }\n            : p\n        )\n      );\n\n      setPaymentConfirmed((prev) => ({ ...prev, [key]: true }));\n    } catch (err: any) {\n      console.error('Falha ao confirmar pagamento na API:', err);\n      if (!confirmingError) {\n        setConfirmingError(\n          err.message || 'Erro desconhecido ao confirmar pagamento.'\n        );\n      }\n    } finally {\n      setConfirmingLoading(false);\n      setOpenModal(false);\n      setConfirmingMonth(null);\n    }\n  };\n\n  const handleCancel = () => {\n    setOpenModal(false);\n    setConfirmingMonth(null);\n    setConfirmingError(null);\n  };\n\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}/${userId}`)\n    : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    setSelectedYear(new Date().getFullYear().toString());\n  }, []);\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  if (paymentsLoading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const getAvailableYears = (): string[] => {\n    const yearsSet = new Set(payments.map((p) => p.ref_year));\n    const yearsArray = Array.from(yearsSet);\n    return yearsArray.sort((a, b) => Number(b) - Number(a)); // Sort descending\n  };\n\n  const getFilteredPayments = (): IPaymentMonthly[] => {\n    if (selectedYear === 'all') return payments;\n    return payments.filter((payment) => payment.ref_year === selectedYear);\n  };\n\n  const getFinancialSummary = () => {\n    const filteredPayments = getFilteredPayments();\n    const totalAmount = filteredPayments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyTotalsMissing: { [key: string]: number } =\n      filteredPayments.reduce((acc, payment) => {\n        const key = `${payment.ref_year}-${payment.ref_month}`;\n        if (!(acc as { [key: string]: number })[key])\n          (acc as { [key: string]: number })[key] = 0;\n        (acc as { [key: string]: number })[key] += parseAmount(payment.amount);\n        return acc;\n      }, {} as { [key: string]: number });\n\n    const paidMonths = Object.values(monthlyTotalsMissing).filter(\n      (total) => !!total && total > 0\n    ).length;\n    const totalMissing = 12 - paidMonths;\n\n    return {\n      total: filteredPayments.length,\n      totalMissing,\n      totalAmount,\n      monthlyStatus: [] as any[]\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n  const availableYears = getAvailableYears();\n  const filteredPayments = getFilteredPayments();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  if (paymentsError) {\n    let errorMessage = 'Não há histórico de pagamentos.';\n    if (\n      paymentsError.message &&\n      paymentsError.message.includes('not valid JSON')\n    ) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` ${paymentsError.message}`;\n    }\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  const yearCurrent = new Date().getFullYear();\n  const monthCurrent = new Date().getMonth() + 1;\n\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      {openModal && confirmingMonth && (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100vw\"\n          height=\"81vh\"\n          bgcolor=\"rgba(0,0,0,0.5)\"\n          zIndex={1300}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Card sx={{ p: 4, minWidth: 300 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Confirmar Pagamento\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2 }}>\n              Deseja confirmar o pagamento do mês{' '}\n              <strong>{formatMonth(confirmingMonth.month)}</strong> de{' '}\n              <strong>{confirmingMonth.year}</strong>?\n            </Typography>\n\n            <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\n              <Button onClick={handleCancel} disabled={confirmingLoading}>\n                Cancelar\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handlePaymentConfirm}\n                disabled={confirmingLoading}\n              >\n                {confirmingLoading ? 'Confirmando...' : 'Confirmar'}\n              </Button>\n            </Box>\n\n            {confirmingError && (\n              <Typography color=\"error\" variant=\"caption\" mt={1}>\n                {confirmingError}\n              </Typography>\n            )}\n          </Card>\n        </Box>\n      )}\n\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={2}>\n            <Typography variant=\"h6\" color=\"primary\">\n              Filtrar por Ano:\n            </Typography>\n            <FormControl size=\"small\" sx={{ minWidth: 150 }}>\n              <InputLabel id=\"year-select-label\">Ano</InputLabel>\n              <Select\n                labelId=\"year-select-label\"\n                value={selectedYear}\n                label=\"Ano\"\n                onChange={(e) => setSelectedYear(e.target.value)}\n                sx={{ borderRadius: 3 }}\n              >\n                {availableYears.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >{`Mostrando ${filteredPayments.length} registros de ${selectedYear}`}</Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Card elevation={3}>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon color=\"primary\" fontSize=\"large\" />}\n            aria-controls=\"panel1-content\"\n            id=\"panel1-header\"\n          >\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n              <Typography variant=\"h5\" color=\"primary\">\n                Resumo Financeiro{' '}\n                {selectedYear !== 'all' && `- ${selectedYear}`}\n              </Typography>\n            </Box>\n          </AccordionSummary>\n\n          <AccordionDetails>\n            <TableContainer component={Paper} elevation={0}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Mês</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Tipo</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Valor</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Status</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Pagamento</strong>\n                    </TableCell>\n                    <TableCell sx={{ color: blue[600], textAlign: 'center' }}>\n                      <strong>Confirmação</strong>\n                    </TableCell>\n                    <TableCell\n                      sx={{ color: blue[600], textAlign: 'center' }}\n                    ></TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {filteredPayments\n                    .sort(\n                      (a, b) =>\n                        Number(a.ref_year) - Number(b.ref_year) ||\n                        a.ref_month - b.ref_month\n                    )\n                    .map((payment, index) => (\n                      <TableRow key={`${payment.id || index}`} hover>\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Chip\n                            label={formatMonth(payment.ref_month)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                            sx={{\n                              backgroundColor:\n                                payment.ref_month === monthCurrent &&\n                                payment.ref_year.toString() ===\n                                  yearCurrent.toString()\n                                  ? blue[100]\n                                  : blue[50],\n                              color:\n                                payment.ref_month === monthCurrent &&\n                                payment.ref_year.toString() ===\n                                  yearCurrent.toString()\n                                  ? blue[800]\n                                  : blue[700],\n                              width: 150\n                            }}\n                            title={`${payment.ref_year}`}\n                          />\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.type ? (\n                            <Chip\n                              label={payment.type}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: lime[50],\n                                color: lime[800],\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            ''\n                          )}\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {parseAmount(payment.amount) > 0 ? (\n                            <Chip\n                              label={payment.amount}\n                              size=\"small\"\n                              variant=\"outlined\"\n                              sx={{\n                                backgroundColor: green[50],\n                                color: green[800],\n                                width: 150\n                              }}\n                            />\n                          ) : (\n                            <Chip\n                              label={payment.amount}\n                              size=\"medium\"\n                              variant=\"outlined\"\n                              sx={{ color: blueGrey[300], width: 150 }}\n                            />\n                          )}\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status && payment.status !== 'Confirmado' ? (\n                            <BatteryCharging60Icon\n                              color=\"warning\"\n                              fontSize=\"medium\"\n                              titleAccess=\"À confirmar\"\n                            />\n                          ) : (\n                            <CheckIcon\n                              color=\"success\"\n                              fontSize=\"medium\"\n                              titleAccess=\"Confirmado\"\n                            />\n                          )}\n                        </TableCell>\n\n                        <TableCell>\n                          <Typography variant=\"body2\">\n                            {payment.createdAt\n                              ? new Date(payment.createdAt).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          <Typography variant=\"body2\">\n                            {payment.updatedAt\n                              ? new Date(payment.updatedAt).toLocaleDateString(\n                                  'pt-BR'\n                                )\n                              : ''}\n                          </Typography>\n                        </TableCell>\n\n                        <TableCell sx={{ textAlign: 'center' }}>\n                          {payment.status !== 'Confirmado' &&\n                          !paymentConfirmed[\n                            `${payment.ref_year}-${payment.ref_month}`\n                          ] ? (\n                            <FormControlLabel\n                              control={\n                                <Switch\n                                  checked={false}\n                                  onChange={() =>\n                                    handleSwitchClick(\n                                      payment.ref_year,\n                                      payment.ref_month\n                                    )\n                                  }\n                                />\n                              }\n                              label={`Confirmar mês ${payment.ref_month}`}\n                            />\n                          ) : null}\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n\n                <TableBody>\n                  <TableRow>\n                    <TableCell colSpan={7}>\n                      <Box\n                        textAlign=\"center\"\n                        p={2}\n                        bgcolor={blue[50]}\n                        borderRadius={3}\n                      >\n                        <Typography variant=\"h5\" color={blue[600]}>\n                          R$ {financialSummary.totalAmount.toFixed(2)}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\">\n                          Valor Total Pago {`em ${selectedYear}`}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </AccordionDetails>\n        </Accordion>\n      </Card>\n\n      {filteredPayments.length > 0 && (\n        <Card elevation={3} sx={{ mt: 3, mb: 0 }}>\n          <PaymentQRCode totalMissing={financialSummary.totalMissing} />\n        </Card>\n      )}\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}