{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// components/PaymentMonthly.tsx\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Skeleton, Grid, Accordion, AccordionSummary, AccordionDetails, IconButton, Button } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\n// import { usePaymentActions } from '../../hooks/useUpdatePayment';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\n// import { PaymentEditDialog } from './PaymentEditDialog';\n// import { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useFinancialSummary = payments => {\n  _s();\n  const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n  const formatDate = date => {\n    if (!date) return '';\n    return new Date(date).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n  const financialSummary = useMemo(() => {\n    const totalAmount = payments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = payments.sort((a, b) => a.ref_year - b.ref_year || a.ref_month - b.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: months[payment.ref_month - 1] || `Mês ${payment.ref_month}`,\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.Description || 'N/A',\n      date: formatDate(payment.date)\n    }));\n    return {\n      total: payments.length,\n      totalAmount,\n      monthlyStatus\n    };\n  }, [payments]);\n  return financialSummary;\n};\n_s(useFinancialSummary, \"knwzlJXAzdD72xoa/l2FcN85H1k=\");\nconst StyledChip = _ref => {\n  let {\n    label,\n    isCurrent,\n    variant = 'outlined',\n    sx\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Chip, {\n    label: label,\n    size: \"small\",\n    variant: variant,\n    sx: {\n      width: 150,\n      fontWeight: isCurrent ? 'bold' : 'normal',\n      backgroundColor: isCurrent ? blue[100] : blue[50],\n      color: isCurrent ? blue[800] : blue[700],\n      '&:hover': {\n        backgroundColor: isCurrent ? blue[200] : blue[100]\n      },\n      ...sx\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 3\n  }, this);\n};\n_c = StyledChip;\nexport const PaymentMonthly = () => {\n  _s2();\n  const {\n    userId\n  } = useParams();\n  const [payments, setPayments] = useState([]);\n  const [editingPayment, setEditingPayment] = useState(null);\n  // const { isAdmin } = useAuth();\n  // const { updatePayment, createPayment } = usePaymentActions();\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading,\n    refetch\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]);\n    }\n  }, [paymentsData, paymentsError]);\n  const financialSummary = useFinancialSummary(payments);\n  const currentYear = new Date().getFullYear();\n  const currentMonth = new Date().getMonth() + 1;\n  const errorMessages = {\n    'not valid JSON': 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.',\n    Unauthorized: 'Acesso não autorizado. Por favor, faça login novamente.',\n    'Forbidden resource': 'Acesso proibido. Você não tem permissão para visualizar esses dados.',\n    default: 'Erro ao carregar histórico de pagamentos. Tente novamente mais tarde ou contate o suporte.'\n  };\n  const handleSavePayment = async updatedPayment => {\n    if (!editingPayment.id) {\n      // Create new payment\n      await createPayment({\n        ...updatedPayment,\n        userId: parseInt(userId),\n        ref_year: updatedPayment.ref_year || currentYear,\n        ref_month: updatedPayment.ref_month || currentMonth\n      });\n    } else {\n      // Update existing payment\n      await updatePayment(editingPayment.id, updatedPayment);\n    }\n    await refetch();\n  };\n  const handleCreatePayment = () => {\n    setEditingPayment({\n      userId: parseInt(userId),\n      ref_year: currentYear,\n      ref_month: currentMonth,\n      amount: 0,\n      type: '',\n      Description: '',\n      date: new Date().toISOString()\n    });\n  };\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 12\n    }, this);\n  }\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rectangular\",\n        height: 60,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n        variant: \"rectangular\",\n        height: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  if (paymentsError) {\n    const errorMessage = errorMessages[paymentsError.message] || errorMessages.default;\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 12\n    }, this);\n  }\n  if (payments.length === 0 && !isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          defaultExpanded: true,\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 27\n            }, this),\n            \"aria-controls\": \"panel1-content\",\n            id: \"panel1-header\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n                  sx: {\n                    fontSize: 32,\n                    color: blue[500],\n                    mr: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: \"primary\",\n                  children: \"Resumo Financeiro\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 32\n                }, this),\n                onClick: handleCreatePayment,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Adicionar Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              elevation: 0,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: blue[600],\n                        fontWeight: 'bold'\n                      },\n                      children: \"M\\xEAs\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: blue[600],\n                        fontWeight: 'bold'\n                      },\n                      children: \"Tipo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: blue[600],\n                        fontWeight: 'bold'\n                      },\n                      children: \"Valor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: blue[600],\n                        fontWeight: 'bold'\n                      },\n                      children: \"Descri\\xE7\\xE3o\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: blue[600],\n                        fontWeight: 'bold'\n                      },\n                      children: \"Data\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 23\n                    }, this), isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        color: blue[600],\n                        fontWeight: 'bold'\n                      },\n                      children: \"A\\xE7\\xF5es\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: [financialSummary.monthlyStatus.map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(StyledChip, {\n                        label: payment.monthName,\n                        isCurrent: payment.month === currentMonth && payment.year === currentYear,\n                        title: `${payment.year}`\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(StyledChip, {\n                        label: payment.type,\n                        sx: {\n                          backgroundColor: lime[50],\n                          color: lime[800],\n                          '&:hover': {\n                            backgroundColor: lime[100]\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(StyledChip, {\n                        label: `R$ ${payment.amount.toFixed(2)}`,\n                        sx: {\n                          backgroundColor: payment.amount > 0 ? green[50] : blueGrey[50],\n                          color: payment.amount > 0 ? green[800] : blueGrey[300],\n                          '&:hover': {\n                            backgroundColor: payment.amount > 0 ? green[100] : blueGrey[100]\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 297,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        children: payment.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 309,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        children: payment.date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 25\n                    }, this), isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        onClick: () => setEditingPayment(payments.find(p => p.ref_year === payment.year && p.ref_month === payment.month)),\n                        size: \"small\",\n                        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 327,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 316,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 27\n                    }, this)]\n                  }, `${payment.year}-${payment.month}-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this)), /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      colSpan: isAdmin ? 6 : 5,\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        textAlign: \"center\",\n                        p: 2,\n                        bgcolor: blue[50],\n                        borderRadius: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h5\",\n                          color: blue[600],\n                          children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"body2\",\n                          color: \"textSecondary\",\n                          children: \"Valor Total\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 339,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 6,\n      sx: {\n        mx: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(PaymentQRCode, {\n              valor: Number(financialSummary.monthlyStatus[0].amount || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), editingPayment && /*#__PURE__*/_jsxDEV(PaymentEditDialog, {\n      open: !!editingPayment,\n      onClose: () => setEditingPayment(null),\n      payment: editingPayment,\n      onSave: handleSavePayment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n};\n_s2(PaymentMonthly, \"FERGquM9WQpYv9VzyaOhoJwU2K0=\", false, function () {\n  return [useParams, useFetch, useFinancialSummary];\n});\n_c2 = PaymentMonthly;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledChip\");\n$RefreshReg$(_c2, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Skeleton","Grid","Accordion","AccordionSummary","AccordionDetails","IconButton","Button","ExpandMoreIcon","EditIcon","AddIcon","blue","blueGrey","green","lime","useEffect","useMemo","useState","useParams","useFetch","API","getURI","PaymentQRCode","jsxDEV","_jsxDEV","useFinancialSummary","payments","_s","months","parseAmount","amount","parseFloat","toString","replace","error","console","formatDate","date","Date","toLocaleDateString","day","month","year","financialSummary","totalAmount","reduce","sum","p","monthlyStatus","sort","a","b","ref_year","ref_month","map","payment","monthName","type","description","Description","total","length","StyledChip","_ref","label","isCurrent","variant","sx","size","width","fontWeight","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","PaymentMonthly","_s2","userId","setPayments","editingPayment","setEditingPayment","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","paymentsError","loading","paymentsLoading","refetch","method","url","Array","isArray","currentYear","getFullYear","currentMonth","getMonth","errorMessages","Unauthorized","default","handleSavePayment","updatedPayment","id","createPayment","updatePayment","handleCreatePayment","toISOString","severity","children","height","mb","errorMessage","message","isAdmin","container","spacing","item","xs","elevation","defaultExpanded","expandIcon","display","alignItems","justifyContent","fontSize","mr","startIcon","onClick","component","index","hover","title","toFixed","find","colSpan","textAlign","bgcolor","borderRadius","md","mx","valor","Number","PaymentEditDialog","open","onClose","onSave","_c2","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["// components/PaymentMonthly.tsx\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Skeleton,\n  Grid,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  IconButton,\n  Button,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport { blue, blueGrey, green, lime } from '@mui/material/colors';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFetch } from '../../hooks';\n// import { usePaymentActions } from '../../hooks/useUpdatePayment';\nimport { API, getURI } from '../../services';\nimport { PaymentQRCode } from '../PaymentQRCode';\n// import { PaymentEditDialog } from './PaymentEditDialog';\n// import { useAuth } from '../../contexts/AuthContext';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: number;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  Description: string;\n  date: Date | string;\n}\n\nconst useFinancialSummary = (payments: IPaymentMonthly[]) => {\n  const months = [\n    'Janeiro',\n    'Fevereiro',\n    'Março',\n    'Abril',\n    'Maio',\n    'Junho',\n    'Julho',\n    'Agosto',\n    'Setembro',\n    'Outubro',\n    'Novembro',\n    'Dezembro',\n  ];\n\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  const formatDate = (date: Date | string): string => {\n    if (!date) return '';\n    return new Date(date).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    });\n  };\n\n  const financialSummary = useMemo(() => {\n    const totalAmount = payments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = payments\n      .sort((a, b) => a.ref_year - b.ref_year || a.ref_month - b.ref_month)\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: months[payment.ref_month - 1] || `Mês ${payment.ref_month}`,\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.Description || 'N/A',\n        date: formatDate(payment.date),\n      }));\n\n    return {\n      total: payments.length,\n      totalAmount,\n      monthlyStatus,\n    };\n  }, [payments]);\n\n  return financialSummary;\n};\n\nconst StyledChip = ({\n  label,\n  isCurrent,\n  variant = 'outlined',\n  sx,\n}: {\n  label: string | number;\n  isCurrent?: boolean;\n  variant?: 'filled' | 'outlined';\n  sx?: object;\n}) => (\n  <Chip\n    label={label}\n    size=\"small\"\n    variant={variant}\n    sx={{\n      width: 150,\n      fontWeight: isCurrent ? 'bold' : 'normal',\n      backgroundColor: isCurrent ? blue[100] : blue[50],\n      color: isCurrent ? blue[800] : blue[700],\n      '&:hover': { backgroundColor: isCurrent ? blue[200] : blue[100] },\n      ...sx,\n    }}\n  />\n);\n\nexport const PaymentMonthly = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n  const [editingPayment, setEditingPayment] = useState<IPaymentMonthly | null>(null);\n  // const { isAdmin } = useAuth();\n  // const { updatePayment, createPayment } = usePaymentActions();\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}/${userId}`) : undefined;\n\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading,\n    refetch,\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl,\n  });\n\n  useEffect(() => {\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]);\n    }\n  }, [paymentsData, paymentsError]);\n\n  const financialSummary = useFinancialSummary(payments);\n  const currentYear = new Date().getFullYear();\n  const currentMonth = new Date().getMonth() + 1;\n\n  const errorMessages: Record<string, string> = {\n    'not valid JSON':\n      'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.',\n    Unauthorized: 'Acesso não autorizado. Por favor, faça login novamente.',\n    'Forbidden resource':\n      'Acesso proibido. Você não tem permissão para visualizar esses dados.',\n    default: 'Erro ao carregar histórico de pagamentos. Tente novamente mais tarde ou contate o suporte.',\n  };\n\n  const handleSavePayment = async (updatedPayment: Partial<IPaymentMonthly>) => {\n    if (!editingPayment!.id) {\n      // Create new payment\n      await createPayment({\n        ...updatedPayment,\n        userId: parseInt(userId!),\n        ref_year: updatedPayment.ref_year || currentYear,\n        ref_month: updatedPayment.ref_month || currentMonth,\n      } as Omit<IPaymentMonthly, 'id'>);\n    } else {\n      // Update existing payment\n      await updatePayment(editingPayment.id, updatedPayment);\n    }\n    await refetch();\n  };\n\n  const handleCreatePayment = () => {\n    setEditingPayment({\n      userId: parseInt(userId!),\n      ref_year: currentYear,\n      ref_month: currentMonth,\n      amount: 0,\n      type: '',\n      Description: '',\n      date: new Date().toISOString(),\n    });\n  };\n\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return <Alert severity=\"error\">ID de usuário inválido. Por favor, forneça um ID válido.</Alert>;\n  }\n\n  if (paymentsLoading) {\n    return (\n      <Box p={3}>\n        <Skeleton variant=\"rectangular\" height={60} sx={{ mb: 2 }} />\n        <Skeleton variant=\"rectangular\" height={300} />\n      </Box>\n    );\n  }\n\n  if (paymentsError) {\n    const errorMessage = errorMessages[paymentsError.message] || errorMessages.default;\n    return <Alert severity=\"error\">{errorMessage}</Alert>;\n  }\n\n  if (payments.length === 0 && !isAdmin) {\n    return (\n      <Alert severity=\"info\">Nenhum registro de pagamento encontrado para este piloto.</Alert>\n    );\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Card elevation={3}>\n          <Accordion defaultExpanded>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1-content\"\n              id=\"panel1-header\"\n            >\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n                <Box display=\"flex\" alignItems=\"center\">\n                  <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n                  <Typography variant=\"h5\" color=\"primary\">\n                    Resumo Financeiro\n                  </Typography>\n                </Box>\n                {isAdmin && (\n                  <Button\n                    startIcon={<AddIcon />}\n                    onClick={handleCreatePayment}\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Adicionar Pagamento\n                  </Button>\n                )}\n              </Box>\n            </AccordionSummary>\n            <AccordionDetails>\n              <TableContainer component={Paper} elevation={0}>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ color: blue[600], fontWeight: 'bold' }}>Mês</TableCell>\n                      <TableCell sx={{ color: blue[600], fontWeight: 'bold' }}>Tipo</TableCell>\n                      <TableCell sx={{ color: blue[600], fontWeight: 'bold' }}>Valor</TableCell>\n                      <TableCell sx={{ color: blue[600], fontWeight: 'bold' }}>\n                        Descrição\n                      </TableCell>\n                      <TableCell sx={{ color: blue[600], fontWeight: 'bold' }}>Data</TableCell>\n                      {isAdmin && (\n                        <TableCell sx={{ color: blue[600], fontWeight: 'bold' }}>Ações</TableCell>\n                      )}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {financialSummary.monthlyStatus.map((payment, index) => (\n                      <TableRow key={`${payment.year}-${payment.month}-${index}`} hover>\n                        <TableCell>\n                          <StyledChip\n                            label={payment.monthName}\n                            isCurrent={\n                              payment.month === currentMonth && payment.year === currentYear\n                            }\n                            title={`${payment.year}`}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <StyledChip\n                            label={payment.type}\n                            sx={{\n                              backgroundColor: lime[50],\n                              color: lime[800],\n                              '&:hover': { backgroundColor: lime[100] },\n                            }}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <StyledChip\n                            label={`R$ ${payment.amount.toFixed(2)}`}\n                            sx={{\n                              backgroundColor: payment.amount > 0 ? green[50] : blueGrey[50],\n                              color: payment.amount > 0 ? green[800] : blueGrey[300],\n                              '&:hover': {\n                                backgroundColor: payment.amount > 0 ? green[100] : blueGrey[100],\n                              },\n                            }}\n                          />\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">{payment.description}</Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\">{payment.date}</Typography>\n                        </TableCell>\n                        {isAdmin && (\n                          <TableCell>\n                            <IconButton\n                              onClick={() =>\n                                setEditingPayment(\n                                  payments.find(\n                                    (p) =>\n                                      p.ref_year === payment.year && p.ref_month === payment.month\n                                  )!\n                                )\n                              }\n                              size=\"small\"\n                            >\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                          </TableCell>\n                        )}\n                      </TableRow>\n                    ))}\n                    <TableRow>\n                      <TableCell colSpan={isAdmin ? 6 : 5}>\n                        <Box textAlign=\"center\" p={2} bgcolor={blue[50]} borderRadius={2}>\n                          <Typography variant=\"h5\" color={blue[600]}>\n                            R$ {financialSummary.totalAmount.toFixed(2)}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            Valor Total\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </AccordionDetails>\n          </Accordion>\n        </Card>\n      </Grid>\n\n      <Grid item xs={12} md={6} sx={{ mx: 'auto' }}>\n        <Card elevation={3}>\n          <CardContent>\n            <Box display=\"flex\" justifyContent=\"center\" textAlign=\"center\">\n              <PaymentQRCode valor={Number(financialSummary.monthlyStatus[0]!.amount || 0)} />\n            </Box>\n          </CardContent>\n        </Card>\n      </Grid>\n\n      {editingPayment && (\n        <PaymentEditDialog\n          open={!!editingPayment}\n          onClose={() => setEditingPayment(null)}\n          payment={editingPayment}\n          onSave={handleSavePayment}\n        />\n      )}\n    </Grid>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}