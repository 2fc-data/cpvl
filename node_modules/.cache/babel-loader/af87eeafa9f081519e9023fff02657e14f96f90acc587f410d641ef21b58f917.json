{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/containers/Dashboard/Dashboard.component.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useLocalStorage } from 'usehooks-ts';\nimport MainNav from '../../components/MainNav';\nimport { API, getURI } from '../../services';\nimport { Box, Typography } from '@mui/material';\nimport { useFetch } from '../../hooks';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { StatusPilot } from '../../components/StatusPilot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DashboardHome = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      textAlign: \"center\",\n      children: \"Utilize o menu para acessar os servi\\xE7os.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mr: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(StatusPilot, {\n        currentStatus: pilot.status,\n        onStatusChange: newStatus => setPilot(prev => ({\n          ...prev,\n          status: newStatus\n        })),\n        userId: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = DashboardHome;\nconst Dashboard = () => {\n  _s();\n  const {\n    data: allowedRoutes\n  } = useFetch({\n    url: getURI(API.profile)\n  });\n  const [, setIsLogged] = useLocalStorage(process.env.REACT_APP_LOGGED_KEY, false);\n  const navigate = useNavigate();\n  const doLogout = useCallback(() => {\n    setIsLogged(false);\n  }, [setIsLogged]);\n  const navTo = useCallback(link => {\n    navigate(link.route);\n  }, [navigate]);\n  if (!allowedRoutes) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNav, {\n      onLogout: doLogout,\n      allowedRoutes: allowedRoutes,\n      onNav: navTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"+kny73UQLQbsE3DuexNxaHSSOac=\", false, function () {\n  return [useFetch, useLocalStorage, useNavigate];\n});\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"DashboardHome\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["useCallback","useLocalStorage","MainNav","API","getURI","Box","Typography","useFetch","Outlet","useNavigate","StatusPilot","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardHome","sx","padding","children","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","mr","currentStatus","pilot","status","onStatusChange","newStatus","setPilot","prev","userId","_c","Dashboard","_s","data","allowedRoutes","url","profile","setIsLogged","process","env","REACT_APP_LOGGED_KEY","navigate","doLogout","navTo","link","route","onLogout","onNav","paddingTop","_c2","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/containers/Dashboard/Dashboard.component.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { useLocalStorage } from 'usehooks-ts';\nimport MainNav from '../../components/MainNav';\nimport { API, getURI } from '../../services';\nimport { IAllowedRoutes } from '../../components/MainNav/MainNav.component';\nimport { Box, Typography } from '@mui/material';\nimport { useFetch } from '../../hooks';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { StatusPilot } from '../../components/StatusPilot';\n\nexport const DashboardHome = () => {\n  return (\n    <Box sx={{ padding: '50px' }}>\n      <Typography variant=\"body1\" textAlign=\"center\">\n        Utilize o menu para acessar os servi√ßos.\n      </Typography>\n                    <Box sx={{ mr: 3 }}>\n                <StatusPilot\n                  currentStatus={pilot.status}\n                  onStatusChange={(newStatus) =>\n                    setPilot((prev) => ({ ...prev, status: newStatus }))\n                  }\n                  userId={0}\n                />\n              </Box>\n    </Box>\n  );\n};\n\nconst Dashboard = () => {\n  const { data: allowedRoutes } = useFetch<IAllowedRoutes[]>({\n    url: getURI(API.profile)\n  });\n  const [, setIsLogged] = useLocalStorage(\n    process.env.REACT_APP_LOGGED_KEY,\n    false\n  );\n  const navigate = useNavigate();\n\n  const doLogout = useCallback(() => {\n    setIsLogged(false);\n  }, [setIsLogged]);\n\n  const navTo = useCallback(\n    (link: IAllowedRoutes) => {\n      navigate(link.route);\n    },\n    [navigate]\n  );\n\n  if (!allowedRoutes) return null;\n\n  return (\n    <>\n      <MainNav\n        onLogout={doLogout}\n        allowedRoutes={allowedRoutes}\n        onNav={navTo}\n      ></MainNav>\n      <Box sx={{ paddingTop: '50px' }}>\n        <Outlet />\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SAASC,GAAG,EAAEC,MAAM,QAAQ,gBAAgB;AAE5C,SAASC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtD,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,oBACEH,OAAA,CAACP,GAAG;IAACW,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3BN,OAAA,CAACN,UAAU;MAACa,OAAO,EAAC,OAAO;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,EAAC;IAE/C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACCZ,OAAA,CAACP,GAAG;MAACW,EAAE,EAAE;QAAES,EAAE,EAAE;MAAE,CAAE;MAAAP,QAAA,eACvBN,OAAA,CAACF,WAAW;QACVgB,aAAa,EAAEC,KAAK,CAACC,MAAO;QAC5BC,cAAc,EAAGC,SAAS,IACxBC,QAAQ,CAAEC,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEJ,MAAM,EAAEE;QAAU,CAAC,CAAC,CACpD;QACDG,MAAM,EAAE;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACU,EAAA,GAjBWnB,aAAa;AAmB1B,MAAMoB,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,IAAI,EAAEC;EAAc,CAAC,GAAG/B,QAAQ,CAAmB;IACzDgC,GAAG,EAAEnC,MAAM,CAACD,GAAG,CAACqC,OAAO;EACzB,CAAC,CAAC;EACF,MAAM,GAAGC,WAAW,CAAC,GAAGxC,eAAe,CACrCyC,OAAO,CAACC,GAAG,CAACC,oBAAoB,EAChC,KACF,CAAC;EACD,MAAMC,QAAQ,GAAGpC,WAAW,CAAC,CAAC;EAE9B,MAAMqC,QAAQ,GAAG9C,WAAW,CAAC,MAAM;IACjCyC,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMM,KAAK,GAAG/C,WAAW,CACtBgD,IAAoB,IAAK;IACxBH,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;EACtB,CAAC,EACD,CAACJ,QAAQ,CACX,CAAC;EAED,IAAI,CAACP,aAAa,EAAE,OAAO,IAAI;EAE/B,oBACE1B,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACEN,OAAA,CAACV,OAAO;MACNgD,QAAQ,EAAEJ,QAAS;MACnBR,aAAa,EAAEA,aAAc;MAC7Ba,KAAK,EAAEJ;IAAM;MAAA1B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACXZ,OAAA,CAACP,GAAG;MAACW,EAAE,EAAE;QAAEoC,UAAU,EAAE;MAAO,CAAE;MAAAlC,QAAA,eAC9BN,OAAA,CAACJ,MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACY,EAAA,CAnCID,SAAS;EAAA,QACmB5B,QAAQ,EAGhBN,eAAe,EAItBQ,WAAW;AAAA;AAAA4C,GAAA,GARxBlB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}