{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/pages/StatusList/StatusList.component.tsx\",\n  _s = $RefreshSig$();\n// import {\n//   Add as AddIcon,\n//   EmailOutlined as Email,\n//   Phone,\n//   ArrowForward as ArrowForwardIcon\n// } from '@mui/icons-material';\n// import {\n//   Box,\n//   Breadcrumbs,\n//   Divider,\n//   Link,\n//   List,\n//   ListItem,\n//   ListItemButton,\n//   ListItemText,\n//   ListSubheader,\n//   Typography\n// } from '@mui/material';\n// import { blueGrey } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n// import * as Styled from './StatusList.styled';\n\n// interface IPilot {\n//   id?: number;\n//   userId: number;\n//   firstName: string;\n//   lastName: string;\n//   cpf: string;\n//   cellphone: string;\n//   email: string;\n//   status: string;\n// }\n\n// export const StatusList = () => {\n//   const [pilots, setPilots] = useState<Array<IPilot>>();\n//   // const { data } = useFetch<Array<IPilot>>({ url: getURI(API.status) });\n//   const { data, error } = useFetch<{ success: boolean; count: number; data: IPilot[] }>({\n//     url: getURI(API.status),\n//   });\n\n//   useEffect(() => {\n//     if (data && data.length) {\n//       setPilots(data);\n//     }\n//   }, [data]);\n\n//   return (\n//     <>\n//       <Box>\n//         <Box sx={{ padding: '15px' }}>\n//           <Breadcrumbs aria-label=\"breadcrumb\">\n//             <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n//               Dashboard\n//             </Link>\n//             <Typography color=\"text.primary\">Pilotos</Typography>\n//           </Breadcrumbs>\n//         </Box>\n//         {pilots && (\n//           <List\n//             subheader={\n//               <ListSubheader\n//                 component=\"div\"\n//                 id=\"nested-list-subheader\"\n//                 color=\"primary\"\n//               >\n//                 Total de {pilots.length} piloto(s) em nossa base de dados.\n//               </ListSubheader>\n//             }\n//           >\n//             {pilots.map((pilot, userId) => (\n//               <Box key={userId}>\n//                 <ListItem disablePadding>\n//                   <ListItemButton>\n//                     {' '}\n//                     {/* âœ… Clique no item inteiro */}\n//                     <ListItemText\n//                       primary={`${pilot.firstName} ${pilot.lastName}`}\n//                       secondary={\n//                         <span style={{ display: 'flex', alignItems: 'center' }}>\n//                           <Phone sx={{ fontSize: '14px' }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px', paddingTop: '2px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.cellphone}\n//                           </Typography>\n//                           <Email sx={{ fontSize: '15px', ml: 1 }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.email}\n//                           </Typography>\n//                         </span>\n//                       }\n//                       key={pilot.userId}\n//                     />\n//                   </ListItemButton>\n//                 </ListItem>\n//                 <Divider />\n//               </Box>\n//             ))}\n//           </List>\n//         )}\n//       </Box>\n//       <Styled.AddButton color=\"primary\" aria-label=\"add\">\n//         <AddIcon />\n//       </Styled.AddButton>\n//     </>\n//   );\n// };\nimport React from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport { getURI, API } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StatusList = () => {\n  _s();\n  var _data$data;\n  const {\n    data,\n    error,\n    loading\n  } = useFetch({\n    url: getURI(API.status)\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Erro ao carregar: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 21\n  }, this);\n\n  // ðŸ”¹ Garante que data seja sempre array\n  const pilots = (_data$data = data === null || data === void 0 ? void 0 : data.data) !== null && _data$data !== void 0 ? _data$data : [];\n  if (pilots.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Nenhum piloto encontrado.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 35\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lista de pilotos (\", pilots.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pilots.map(pilot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pilot.firstName, \" \", pilot.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), \" - \", pilot.status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), \"CPF: \", pilot.cpf, \" | Email: \", pilot.email, \" | Celular: \", pilot.cellphone]\n      }, pilot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusList, \"ArQBeC1pNMJA33dTXcMD9vsbvY4=\", false, function () {\n  return [useFetch];\n});\n_c = StatusList;\nvar _c;\n$RefreshReg$(_c, \"StatusList\");","map":{"version":3,"names":["React","useFetch","getURI","API","jsxDEV","_jsxDEV","StatusList","_s","_data$data","data","error","loading","url","status","children","fileName","_jsxFileName","lineNumber","columnNumber","message","pilots","length","map","pilot","firstName","lastName","cpf","email","cellphone","id","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/pages/StatusList/StatusList.component.tsx"],"sourcesContent":["// import {\n//   Add as AddIcon,\n//   EmailOutlined as Email,\n//   Phone,\n//   ArrowForward as ArrowForwardIcon\n// } from '@mui/icons-material';\n// import {\n//   Box,\n//   Breadcrumbs,\n//   Divider,\n//   Link,\n//   List,\n//   ListItem,\n//   ListItemButton,\n//   ListItemText,\n//   ListSubheader,\n//   Typography\n// } from '@mui/material';\n// import { blueGrey } from '@mui/material/colors';\n// import { useEffect, useState } from 'react';\n// import { useFetch } from '../../hooks';\n// import { API, getURI } from '../../services';\n// import * as Styled from './StatusList.styled';\n\n// interface IPilot {\n//   id?: number;\n//   userId: number;\n//   firstName: string;\n//   lastName: string;\n//   cpf: string;\n//   cellphone: string;\n//   email: string;\n//   status: string;\n// }\n\n// export const StatusList = () => {\n//   const [pilots, setPilots] = useState<Array<IPilot>>();\n//   // const { data } = useFetch<Array<IPilot>>({ url: getURI(API.status) });\n//   const { data, error } = useFetch<{ success: boolean; count: number; data: IPilot[] }>({\n//     url: getURI(API.status),\n//   });\n\n\n//   useEffect(() => {\n//     if (data && data.length) {\n//       setPilots(data);\n//     }\n//   }, [data]);\n\n//   return (\n//     <>\n//       <Box>\n//         <Box sx={{ padding: '15px' }}>\n//           <Breadcrumbs aria-label=\"breadcrumb\">\n//             <Link underline=\"hover\" color=\"inherit\" href=\"/\">\n//               Dashboard\n//             </Link>\n//             <Typography color=\"text.primary\">Pilotos</Typography>\n//           </Breadcrumbs>\n//         </Box>\n//         {pilots && (\n//           <List\n//             subheader={\n//               <ListSubheader\n//                 component=\"div\"\n//                 id=\"nested-list-subheader\"\n//                 color=\"primary\"\n//               >\n//                 Total de {pilots.length} piloto(s) em nossa base de dados.\n//               </ListSubheader>\n//             }\n//           >\n//             {pilots.map((pilot, userId) => (\n//               <Box key={userId}>\n//                 <ListItem disablePadding>\n//                   <ListItemButton>\n//                     {' '}\n//                     {/* âœ… Clique no item inteiro */}\n//                     <ListItemText\n//                       primary={`${pilot.firstName} ${pilot.lastName}`}\n//                       secondary={\n//                         <span style={{ display: 'flex', alignItems: 'center' }}>\n//                           <Phone sx={{ fontSize: '14px' }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px', paddingTop: '2px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.cellphone}\n//                           </Typography>\n//                           <Email sx={{ fontSize: '15px', ml: 1 }} />\n//                           <Typography\n//                             sx={{ paddingLeft: '5px' }}\n//                             variant=\"caption\"\n//                             color={blueGrey[500]}\n//                           >\n//                             {pilot.email}\n//                           </Typography>\n//                         </span>\n//                       }\n//                       key={pilot.userId}\n//                     />\n//                   </ListItemButton>\n//                 </ListItem>\n//                 <Divider />\n//               </Box>\n//             ))}\n//           </List>\n//         )}\n//       </Box>\n//       <Styled.AddButton color=\"primary\" aria-label=\"add\">\n//         <AddIcon />\n//       </Styled.AddButton>\n//     </>\n//   );\n// };\nimport React from 'react';\nimport useFetch from '../../hooks/useFetch';\nimport { getURI, API } from '../../services';\n\ninterface Pilot {\n  id: number;\n  userId: number;\n  firstName: string;\n  lastName: string;\n  cpf: string;\n  email: string;\n  cellphone: string;\n  status: string;\n}\n\ninterface ApiResponse {\n  success: boolean;\n  count: number;\n  data: Pilot[];\n}\n\nexport const StatusList: React.FC = () => {\n  const { data, error, loading } = useFetch<ApiResponse>({\n    url: getURI(API.status),\n  });\n\n  if (loading) return <p>Carregando...</p>;\n  if (error) return <p>Erro ao carregar: {error.message}</p>;\n\n  // ðŸ”¹ Garante que data seja sempre array\n  const pilots = data?.data ?? [];\n\n  if (pilots.length === 0) return <p>Nenhum piloto encontrado.</p>;\n\n  return (\n    <div>\n      <h2>Lista de pilotos ({pilots.length})</h2>\n      <ul>\n        {pilots.map((pilot) => (\n          <li key={pilot.id}>\n            <strong>{pilot.firstName} {pilot.lastName}</strong> - {pilot.status}\n            <br />\n            CPF: {pilot.cpf} | Email: {pilot.email} | Celular: {pilot.cellphone}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmB7C,OAAO,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,UAAA;EACxC,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGV,QAAQ,CAAc;IACrDW,GAAG,EAAEV,MAAM,CAACC,GAAG,CAACU,MAAM;EACxB,CAAC,CAAC;EAEF,IAAIF,OAAO,EAAE,oBAAON,OAAA;IAAAS,QAAA,EAAG;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACxC,IAAIR,KAAK,EAAE,oBAAOL,OAAA;IAAAS,QAAA,GAAG,oBAAkB,EAACJ,KAAK,CAACS,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;;EAE1D;EACA,MAAME,MAAM,IAAAZ,UAAA,GAAGC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEA,IAAI,cAAAD,UAAA,cAAAA,UAAA,GAAI,EAAE;EAE/B,IAAIY,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE,oBAAOhB,OAAA;IAAAS,QAAA,EAAG;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEhE,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,GAAI,oBAAkB,EAACM,MAAM,CAACC,MAAM,EAAC,GAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Cb,OAAA;MAAAS,QAAA,EACGM,MAAM,CAACE,GAAG,CAAEC,KAAK,iBAChBlB,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,GAASS,KAAK,CAACC,SAAS,EAAC,GAAC,EAACD,KAAK,CAACE,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACK,KAAK,CAACV,MAAM,eACnER,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,SACD,EAACK,KAAK,CAACG,GAAG,EAAC,YAAU,EAACH,KAAK,CAACI,KAAK,EAAC,cAAY,EAACJ,KAAK,CAACK,SAAS;MAAA,GAH5DL,KAAK,CAACM,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CA3BWD,UAAoB;EAAA,QACEL,QAAQ;AAAA;AAAA6B,EAAA,GAD9BxB,UAAoB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}