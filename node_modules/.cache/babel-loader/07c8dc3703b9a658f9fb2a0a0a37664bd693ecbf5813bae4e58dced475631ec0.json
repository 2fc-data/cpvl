{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx\",\n  _s = $RefreshSig$();\nimport { Payment as PaymentIcon } from '@mui/icons-material';\nimport { Box, Typography, Card, CardContent, Grid, Chip, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, CircularProgress } from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// export const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\nexport const PaymentMonthly = () => {\n  _s();\n  console.log('--> PaymentMonthly userId:', userId);\n  const [payments, setPayments] = useState([]);\n\n  // Validate userId and construct API URL\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid ? getURI(`${API.paymentMonthly}?userId=${userId}`) : undefined;\n  console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // Fetch payments\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch({\n    method: 'GET',\n    url: apiUrl\n  });\n  useEffect(() => {\n    console.log('--> paymentsData:', paymentsData);\n    console.log('--> paymentsError:', paymentsError);\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  // Format month\n  const formatMonth = month => {\n    const months = ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = amount => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Calculate financial summary\n  const getFinancialSummary = () => {\n    const totalAmount = payments.reduce((sum, p) => sum + parseAmount(p.amount), 0);\n    const monthlyStatus = payments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map(payment => ({\n      year: payment.ref_year,\n      month: payment.ref_month,\n      monthName: formatMonth(payment.ref_month),\n      amount: parseAmount(payment.amount),\n      type: payment.type || 'N/A',\n      description: payment.Description || 'N/A',\n      date: payment.date\n    }));\n    return {\n      total: payments.length,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"ID de usu\\xE1rio inv\\xE1lido. Por favor, forne\\xE7a um ID v\\xE1lido.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage = 'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage = 'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: [errorMessage, \" Tente novamente mais tarde ou contate o suporte.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render empty state\n  if (payments.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"Nenhum registro de pagamento encontrado para este piloto.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          color: \"primary\",\n          children: \"Resumo Financeiro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                textAlign: \"center\",\n                p: 2,\n                bgcolor: blue[50],\n                borderRadius: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  color: blue[600],\n                  children: [\"R$ \", financialSummary.totalAmount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: \"Valor Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            color: \"primary\",\n            children: \"Status dos \\xDAltimos Meses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 1,\n            children: financialSummary.monthlyStatus.slice(0, 12).map((month, index) => /*#__PURE__*/_jsxDEV(Chip, {\n              label: `${month.monthName.substring(0, 3)}/${month.year}`,\n              size: \"small\",\n              sx: {\n                backgroundColor: blue[100],\n                color: blue[800],\n                '&:hover': {\n                  backgroundColor: blue[200]\n                }\n              },\n              title: `${month.monthName} ${month.year} - R$ ${month.amount.toFixed(2)}`\n            }, `${month.year}-${month.month}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), financialSummary.monthlyStatus.length > 12 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"textSecondary\",\n            sx: {\n              mt: 1,\n              display: 'block'\n            },\n            children: [\"Mostrando os 12 meses mais recentes de \", financialSummary.total, ' ', \"registros\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), financialSummary.monthlyStatus.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            sx: {\n              mt: 1\n            },\n            children: \"Nenhum registro encontrado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          mb: 3,\n          children: [/*#__PURE__*/_jsxDEV(PaymentIcon, {\n            sx: {\n              fontSize: 32,\n              color: blue[500],\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: \"Hist\\xF3rico de Pagamentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          elevation: 0,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Per\\xEDodo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Tipo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Valor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Descri\\xE7\\xE3o\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: payments.sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month).map((payment, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [formatMonth(payment.ref_month), \" \", payment.ref_year]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: payment.type ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: payment.type,\n                    size: \"small\",\n                    variant: \"outlined\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"bold\",\n                    children: [\"R$ \", parseAmount(payment.amount).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.Description && payment.Description.trim() !== '' ? payment.Description : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: payment.date ? new Date(payment.date).toLocaleDateString('pt-BR') : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this)]\n              }, `${payment.id || index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PaymentMonthly, \"QncJnODu76Cin27QJR3MAZwHAjI=\", false, function () {\n  return [useFetch];\n});\n_c = PaymentMonthly;\nvar _c;\n$RefreshReg$(_c, \"PaymentMonthly\");","map":{"version":3,"names":["Payment","PaymentIcon","Box","Typography","Card","CardContent","Grid","Chip","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CircularProgress","blue","useEffect","useState","useFetch","API","getURI","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentMonthly","_s","console","log","userId","payments","setPayments","isUserIdValid","isNaN","parseInt","apiUrl","paymentMonthly","undefined","data","paymentsData","error","paymentsError","loading","paymentsLoading","method","url","Array","isArray","formatMonth","month","months","parseAmount","amount","parseFloat","toString","replace","getFinancialSummary","totalAmount","reduce","sum","p","monthlyStatus","sort","a","b","ref_year","ref_month","map","payment","year","monthName","type","description","Description","date","total","length","financialSummary","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","errorMessage","message","includes","elevation","sx","mb","variant","gutterBottom","color","mt","container","spacing","item","xs","textAlign","bgcolor","borderRadius","toFixed","flexWrap","gap","slice","index","label","substring","size","backgroundColor","title","alignItems","fontSize","mr","component","hover","fontWeight","trim","Date","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentMonthly/PaymentMonthly.component.tsx"],"sourcesContent":["import { Payment as PaymentIcon } from '@mui/icons-material';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Grid,\n  Chip,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  CircularProgress\n} from '@mui/material';\nimport { blue } from '@mui/material/colors';\nimport { useEffect, useState } from 'react';\nimport { useFetch } from '../../hooks';\nimport { API, getURI } from '../../services';\n\ninterface IPaymentMonthly {\n  id?: number;\n  userId: number;\n  ref_year: number;\n  ref_month: number;\n  amount: number | string;\n  type: string;\n  Description: string;\n  date: Date | string;\n}\n\ninterface PaymentMonthlyProps {\n  userId: string;\n}\n\n// export const PaymentMonthly: React.FC<PaymentMonthlyProps> = ({ userId }) => {\nexport const PaymentMonthly: React.FC<PaymentMonthlyProps> = () => {\n  console.log('--> PaymentMonthly userId:', userId);\n  const [payments, setPayments] = useState<IPaymentMonthly[]>([]);\n\n  // Validate userId and construct API URL\n  const isUserIdValid = userId && !isNaN(parseInt(userId));\n  const apiUrl = isUserIdValid\n    ? getURI(`${API.paymentMonthly}?userId=${userId}`)\n    : undefined;\n  console.log('--> API URL:', apiUrl); // Debug API URL\n\n  // Fetch payments\n  const {\n    data: paymentsData,\n    error: paymentsError,\n    loading: paymentsLoading\n  } = useFetch<IPaymentMonthly[]>({\n    method: 'GET',\n    url: apiUrl\n  });\n\n  useEffect(() => {\n    console.log('--> paymentsData:', paymentsData);\n    console.log('--> paymentsError:', paymentsError);\n    if (paymentsData) {\n      setPayments(Array.isArray(paymentsData) ? paymentsData : []);\n    } else if (paymentsError) {\n      setPayments([]); // Clear payments on error\n    }\n  }, [paymentsData, paymentsError]);\n\n  // Format month\n  const formatMonth = (month: number) => {\n    const months = [\n      'Janeiro',\n      'Fevereiro',\n      'Março',\n      'Abril',\n      'Maio',\n      'Junho',\n      'Julho',\n      'Agosto',\n      'Setembro',\n      'Outubro',\n      'Novembro',\n      'Dezembro'\n    ];\n    return months[month - 1] || `Mês ${month}`;\n  };\n\n  // Parse amount\n  const parseAmount = (amount: any): number => {\n    if (!amount || amount === '') return 0;\n    if (typeof amount === 'number') return amount;\n    try {\n      return parseFloat(amount.toString().replace(',', '.'));\n    } catch (error) {\n      console.error('Error parsing amount:', amount, error);\n      return 0;\n    }\n  };\n\n  // Calculate financial summary\n  const getFinancialSummary = () => {\n    const totalAmount = payments.reduce(\n      (sum, p) => sum + parseAmount(p.amount),\n      0\n    );\n\n    const monthlyStatus = payments\n      .sort((a, b) => b.ref_year - a.ref_year || b.ref_month - a.ref_month)\n      .map((payment) => ({\n        year: payment.ref_year,\n        month: payment.ref_month,\n        monthName: formatMonth(payment.ref_month),\n        amount: parseAmount(payment.amount),\n        type: payment.type || 'N/A',\n        description: payment.Description || 'N/A',\n        date: payment.date\n      }));\n\n    return {\n      total: payments.length,\n      totalAmount,\n      monthlyStatus\n    };\n  };\n\n  const financialSummary = getFinancialSummary();\n\n  // Render invalid userId error\n  if (!isUserIdValid) {\n    console.error('Invalid userId:', userId);\n    return (\n      <Alert severity=\"error\">\n        ID de usuário inválido. Por favor, forneça um ID válido.\n      </Alert>\n    );\n  }\n\n  // Render loading state\n  if (paymentsLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  // Render error state\n  if (paymentsError) {\n    let errorMessage = 'Erro ao carregar histórico de pagamentos.';\n    if (paymentsError.message.includes('not valid JSON')) {\n      errorMessage =\n        'Erro: A resposta do servidor não é um JSON válido. Verifique a configuração da API.';\n    } else if (paymentsError.message === 'Unauthorized') {\n      errorMessage = 'Acesso não autorizado. Por favor, faça login novamente.';\n    } else if (paymentsError.message === 'Forbidden resource') {\n      errorMessage =\n        'Acesso proibido. Você não tem permissão para visualizar esses dados.';\n    } else if (paymentsError.message) {\n      errorMessage += ` Detalhes: ${paymentsError.message}`;\n    }\n    return (\n      <Alert severity=\"error\">\n        {errorMessage} Tente novamente mais tarde ou contate o suporte.\n      </Alert>\n    );\n  }\n\n  // Render empty state\n  if (payments.length === 0) {\n    return (\n      <Alert severity=\"info\">\n        Nenhum registro de pagamento encontrado para este piloto.\n      </Alert>\n    );\n  }\n\n  return (\n    <>\n      <Card elevation={3} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom color=\"primary\">\n            Resumo Financeiro\n          </Typography>\n          <Box mt={2}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Box\n                  textAlign=\"center\"\n                  p={2}\n                  bgcolor={blue[50]}\n                  borderRadius={2}\n                >\n                  <Typography variant=\"h5\" color={blue[600]}>\n                    R$ {financialSummary.totalAmount.toFixed(2)}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Valor Total\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box mt={3}>\n            <Typography variant=\"subtitle1\" gutterBottom color=\"primary\">\n              Status dos Últimos Meses\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n              {financialSummary.monthlyStatus\n                .slice(0, 12)\n                .map((month, index) => (\n                  <Chip\n                    key={`${month.year}-${month.month}`}\n                    label={`${month.monthName.substring(0, 3)}/${month.year}`}\n                    size=\"small\"\n                    sx={{\n                      backgroundColor: blue[100],\n                      color: blue[800],\n                      '&:hover': {\n                        backgroundColor: blue[200]\n                      }\n                    }}\n                    title={`${month.monthName} ${\n                      month.year\n                    } - R$ ${month.amount.toFixed(2)}`}\n                  />\n                ))}\n            </Box>\n            {financialSummary.monthlyStatus.length > 12 && (\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                sx={{ mt: 1, display: 'block' }}\n              >\n                Mostrando os 12 meses mais recentes de {financialSummary.total}{' '}\n                registros\n              </Typography>\n            )}\n            {financialSummary.monthlyStatus.length === 0 && (\n              <Alert severity=\"info\" sx={{ mt: 1 }}>\n                Nenhum registro encontrado.\n              </Alert>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n      <Card elevation={3}>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" mb={3}>\n            <PaymentIcon sx={{ fontSize: 32, color: blue[500], mr: 2 }} />\n            <Typography variant=\"h5\" component=\"h2\">\n              Histórico de Pagamentos\n            </Typography>\n          </Box>\n          <TableContainer component={Paper} elevation={0}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>\n                    <strong>Período</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Tipo</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Valor</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Descrição</strong>\n                  </TableCell>\n                  <TableCell>\n                    <strong>Data</strong>\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {payments\n                  .sort(\n                    (a, b) =>\n                      b.ref_year - a.ref_year || b.ref_month - a.ref_month\n                  )\n                  .map((payment, index) => (\n                    <TableRow key={`${payment.id || index}`} hover>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {formatMonth(payment.ref_month)} {payment.ref_year}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {payment.type ? (\n                          <Chip\n                            label={payment.type}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        ) : (\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            -\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\" fontWeight=\"bold\">\n                          R$ {parseAmount(payment.amount).toFixed(2)}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.Description &&\n                          payment.Description.trim() !== ''\n                            ? payment.Description\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography variant=\"body2\">\n                          {payment.date\n                            ? new Date(payment.date).toLocaleDateString('pt-BR')\n                            : '-'}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}