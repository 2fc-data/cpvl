{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport { FormControl, InputLabel, MenuItem, Select, Typography, Button, Card, CardContent, Box, Chip } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Even simpler approach - just use timestamp\nconst generateSimpleTransactionId = () => {\n  const timestamp = Date.now().toString();\n  // Use just the timestamp - guaranteed to be unique\n  return timestamp;\n};\n\n// Or use random string\nconst generateRandomTransactionId = () => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = 'CPVL';\n  for (let i = 0; i < 16; i++) {\n    // 4 + 16 = 20 characters\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n};\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    amount,\n    totalMissing,\n    onPixCodeGenerated\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [pixCode, setPixCode] = useState('');\n  const getPaymentValue = paymentType => {\n    switch (paymentType) {\n      case 'mensal':\n        return 50;\n      case 'trimestral':\n        return 50 * 3;\n      case 'semestral':\n        return 50 * 6;\n      case 'anual':\n        return 50 * 12;\n      default:\n        return 0;\n    }\n  };\n  const getDiscount = paymentType => {\n    switch (paymentType) {\n      case 'trimestral':\n        return 0.00;\n      // 0.05\n      case 'semestral':\n        return 0.00;\n      // 0.10\n      case 'anual':\n        return 0.00;\n      // 0.15\n      default:\n        return 0;\n    }\n  };\n  const calculateFinalValue = paymentType => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n    return types;\n  };\n  const handleChange = event => {\n    setSelectedPaymentType(event.target.value);\n    setPixCode(''); // Limpar código anterior\n  };\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [totalMissing > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      sx: {\n        mb: 2\n      },\n      children: [\"Restam \", totalMissing, \" meses de pagamento.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        minWidth: 200,\n        mb: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"tipoPagamento\",\n        children: \"Tipo do pagamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"tipoPagamento\",\n        value: selectedPaymentType,\n        label: \"Tipo do pagamento\",\n        onChange: handleChange,\n        disabled: availableTypes.length === 0,\n        children: availableTypes.map((type, index) => {\n          const value = calculateFinalValue(type);\n          const discount = getDiscount(type);\n          const base = getPaymentValue(type);\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: type,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: type.charAt(0).toUpperCase() + type.slice(1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  textAlign: 'right'\n                },\n                children: [discount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: `-${(discount * 100).toFixed(0)}%`,\n                  size: \"small\",\n                  color: \"success\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [\"R$ \", value.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), selectedPaymentType && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Pagamento PIX - \", selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), currentDiscount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Economize ${(currentDiscount * 100).toFixed(0)}% - R$ ${(baseValue - currentValue).toFixed(2)}`,\n          color: \"success\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"primary\",\n          sx: {\n            mb: 3\n          },\n          children: [\"R$ \", currentValue.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(QRCodePix, {\n            pixkey: process.env.REACT_APP_PIX_KEY_CPVL || '',\n            merchant: \"CPVL\",\n            city: \"POCOS CALDAS\",\n            cep: \"37701000\",\n            amount: currentValue,\n            transactionId: `CPVL${Date.now()}`,\n            message: `Mensalidade ${selectedPaymentType}`,\n            size: 280,\n            bgColor: \"#FFFFFF\",\n            fgColor: \"#000000\",\n            level: \"M\",\n            includeMargin: true,\n            onPixCodeGenerated: setPixCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), \"console.log('PixCode ', \", pixCode, \")\", pixCode && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"C\\xF3digo PIX (Copia e Cola):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: pixCode,\n              readOnly: true,\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '12px',\n                fontSize: '11px',\n                fontFamily: 'monospace',\n                border: '1px solid #ddd',\n                borderRadius: '8px',\n                resize: 'none',\n                backgroundColor: '#f9f9f9'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            onClick: copyToClipboard,\n            sx: {\n              mt: 1,\n              borderRadius: 2,\n              textTransform: 'none'\n            },\n            children: \"\\uD83D\\uDCCB Copiar C\\xF3digo PIX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"HRHVT4iFXG5UAQlrXAeCbC1PDH0=\", false, function () {\n  return [useParams];\n});\n_c = PaymentQRCode;\nexport default PaymentQRCode;\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useState","useParams","QRCodePix","FormControl","InputLabel","MenuItem","Select","Typography","Button","Card","CardContent","Box","Chip","jsxDEV","_jsxDEV","Fragment","_Fragment","generateSimpleTransactionId","timestamp","Date","now","toString","generateRandomTransactionId","chars","result","i","charAt","Math","floor","random","length","PaymentQRCode","_ref","_s","amount","totalMissing","onPixCodeGenerated","userId","selectedPaymentType","setSelectedPaymentType","pixCode","setPixCode","getPaymentValue","paymentType","getDiscount","calculateFinalValue","baseValue","discount","round","undefined","types","push","handleChange","event","target","value","copyToClipboard","navigator","clipboard","writeText","alert","err","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","availableTypes","currentValue","currentDiscount","children","variant","sx","mb","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","minWidth","id","labelId","label","onChange","disabled","map","type","index","base","display","justifyContent","width","toUpperCase","slice","textAlign","toFixed","size","color","mr","style","fontWeight","mt","gutterBottom","pixkey","process","env","REACT_APP_PIX_KEY_CPVL","merchant","city","cep","transactionId","message","bgColor","fgColor","level","includeMargin","readOnly","rows","padding","fontSize","fontFamily","border","borderRadius","resize","backgroundColor","onClick","textTransform","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport QRCodePix from 'react-qrcode-pix';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Box,\n  Chip\n} from '@mui/material';\n\ninterface PaymentProps {\n  amount?: number;\n  totalMissing: number;\n  onPixCodeGenerated: (payload: string) => void;\n}\n\n// Even simpler approach - just use timestamp\nconst generateSimpleTransactionId = (): string => {\n  const timestamp = Date.now().toString();\n  // Use just the timestamp - guaranteed to be unique\n  return timestamp;\n};\n\n// Or use random string\nconst generateRandomTransactionId = (): string => {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let result = 'CPVL';\n  for (let i = 0; i < 16; i++) { // 4 + 16 = 20 characters\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n};\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ amount, totalMissing, onPixCodeGenerated, }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [pixCode, setPixCode] = useState<string>('');\n\n  const getPaymentValue = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'mensal': return 50;\n      case 'trimestral': return 50 * 3;\n      case 'semestral': return 50 * 6;\n      case 'anual': return 50 * 12;\n      default: return 0;\n    }\n  };\n\n  const getDiscount = (paymentType: string): number => {\n    switch (paymentType) {\n      case 'trimestral': return 0.00; // 0.05\n      case 'semestral': return 0.00;  // 0.10\n      case 'anual': return 0.00; // 0.15\n      default: return 0;\n    }\n  };\n\n  const calculateFinalValue = (paymentType: string): number => {\n    const baseValue = getPaymentValue(paymentType);\n    const discount = getDiscount(paymentType);\n    return Math.round(baseValue * (1 - discount) * 100) / 100;\n  };\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    setSelectedPaymentType(event.target.value);\n    setPixCode(''); // Limpar código anterior\n  };\n\n  const copyToClipboard = async () => {\n    if (pixCode) {\n      try {\n        await navigator.clipboard.writeText(pixCode);\n        alert('Código PIX copiado para a área de transferência!');\n      } catch (err) {\n        const textArea = document.createElement('textarea');\n        textArea.value = pixCode;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n        alert('Código PIX copiado!');\n      }\n    }\n  };\n\n  const availableTypes = paymentType(totalMissing);\n  const currentValue = selectedPaymentType ? calculateFinalValue(selectedPaymentType) : 0;\n  const currentDiscount = selectedPaymentType ? getDiscount(selectedPaymentType) : 0;\n  const baseValue = selectedPaymentType ? getPaymentValue(selectedPaymentType) : 0;\n\n  return (\n    <Box>\n      {totalMissing > 0 && (\n        <Typography variant=\"body1\" sx={{ mb: 2 }}>\n          Restam {totalMissing} meses de pagamento.\n        </Typography>\n      )}\n\n      <FormControl fullWidth sx={{ minWidth: 200, mb: 1 }}>\n        <InputLabel id=\"tipoPagamento\">Tipo do pagamento</InputLabel>\n        <Select\n          labelId=\"tipoPagamento\"\n          value={selectedPaymentType}\n          label=\"Tipo do pagamento\"\n          onChange={handleChange}\n          disabled={availableTypes.length === 0}\n        >\n          {availableTypes.map((type: string, index: number) => {\n            const value = calculateFinalValue(type);\n            const discount = getDiscount(type);\n            const base = getPaymentValue(type);\n\n            return (\n              <MenuItem key={index} value={type}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n                  <span>{type.charAt(0).toUpperCase() + type.slice(1)}</span>\n                  <Box sx={{ textAlign: 'right' }}>\n                    {discount > 0 && (\n                      <Chip\n                        label={`-${(discount * 100).toFixed(0)}%`}\n                        size=\"small\"\n                        color=\"success\"\n                        sx={{ mr: 1 }}\n                      />\n                    )}\n                    <span style={{ fontWeight: 'bold' }}>\n                      R$ {value.toFixed(2)}\n                    </span>\n                  </Box>\n                </Box>\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n\n      {selectedPaymentType && (\n        <Card sx={{ mt: 2 }}>\n          <CardContent sx={{ textAlign: 'center' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Pagamento PIX - {selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)}\n            </Typography>\n\n            {currentDiscount > 0 && (\n              <Chip\n                label={`Economize ${(currentDiscount * 100).toFixed(0)}% - R$ ${(baseValue - currentValue).toFixed(2)}`}\n                color=\"success\"\n                sx={{ mb: 2 }}\n              />\n            )}\n\n            <Typography variant=\"h4\" color=\"primary\" sx={{ mb: 3 }}>\n              R$ {currentValue.toFixed(2)}\n            </Typography>\n\n            {/* QR Code */}\n            <Box sx={{ mb: 3 }}>\n              <QRCodePix\n                pixkey={process.env.REACT_APP_PIX_KEY_CPVL || ''}\n                merchant=\"CPVL\"\n                city=\"POCOS CALDAS\"\n                cep=\"37701000\"\n                amount={currentValue}                  \n                transactionId={`CPVL${Date.now()}`}\n                message={`Mensalidade ${selectedPaymentType}`}\n                size={280}\n                bgColor=\"#FFFFFF\"\n                fgColor=\"#000000\"\n                level=\"M\"\n                includeMargin={true}\n                onPixCodeGenerated={setPixCode}\n              />\n            </Box>\n            console.log('PixCode ', {pixCode})\n\n\n            {pixCode && (\n              <>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Código PIX (Copia e Cola):\n                </Typography>\n\n                <Box sx={{ mb: 3 }}>\n                  <textarea\n                    value={pixCode}\n                    readOnly\n                    rows={3}\n                    style={{\n                      width: '100%',\n                      padding: '12px',\n                      fontSize: '11px',\n                      fontFamily: 'monospace',\n                      border: '1px solid #ddd',\n                      borderRadius: '8px',\n                      resize: 'none',\n                      backgroundColor: '#f9f9f9'\n                    }}\n                  />\n                </Box>\n\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  onClick={copyToClipboard}\n                  sx={{\n                    mt: 1,\n                    borderRadius: 2,\n                    textTransform: 'none'\n                  }}\n                >\n                  📋 Copiar Código PIX\n                </Button>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default PaymentQRCode;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SACEC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,MAAM,EAENC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,WAAW,EACXC,GAAG,EACHC,IAAI,QACC,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQvB;AACA,MAAMC,2BAA2B,GAAGA,CAAA,KAAc;EAChD,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EACvC;EACA,OAAOH,SAAS;AAClB,CAAC;;AAED;AACA,MAAMI,2BAA2B,GAAGA,CAAA,KAAc;EAChD,MAAMC,KAAK,GAAG,sCAAsC;EACpD,IAAIC,MAAM,GAAG,MAAM;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAAE;IAC7BD,MAAM,IAAID,KAAK,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,KAAK,CAACO,MAAM,CAAC,CAAC;EAClE;EACA,OAAON,MAAM;AACf,CAAC;AAED,OAAO,MAAMO,aAAqC,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAoB,CAAC,GAAAJ,IAAA;EACjG,MAAM;IAAEK;EAAO,CAAC,GAAGpC,SAAS,CAAqB,CAAC;EAClD,MAAM,CAACqC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGvC,QAAQ,CAAS,EAAE,CAAC;EAC1E,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAS,EAAE,CAAC;EAElD,MAAM0C,eAAe,GAAIC,WAAmB,IAAa;IACvD,QAAQA,WAAW;MACjB,KAAK,QAAQ;QAAE,OAAO,EAAE;MACxB,KAAK,YAAY;QAAE,OAAO,EAAE,GAAG,CAAC;MAChC,KAAK,WAAW;QAAE,OAAO,EAAE,GAAG,CAAC;MAC/B,KAAK,OAAO;QAAE,OAAO,EAAE,GAAG,EAAE;MAC5B;QAAS,OAAO,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,WAAW,GAAID,WAAmB,IAAa;IACnD,QAAQA,WAAW;MACjB,KAAK,YAAY;QAAE,OAAO,IAAI;MAAE;MAChC,KAAK,WAAW;QAAE,OAAO,IAAI;MAAG;MAChC,KAAK,OAAO;QAAE,OAAO,IAAI;MAAE;MAC3B;QAAS,OAAO,CAAC;IACnB;EACF,CAAC;EAED,MAAME,mBAAmB,GAAIF,WAAmB,IAAa;IAC3D,MAAMG,SAAS,GAAGJ,eAAe,CAACC,WAAW,CAAC;IAC9C,MAAMI,QAAQ,GAAGH,WAAW,CAACD,WAAW,CAAC;IACzC,OAAOhB,IAAI,CAACqB,KAAK,CAACF,SAAS,IAAI,CAAC,GAAGC,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;EAC3D,CAAC;EAED,MAAMJ,WAAW,GAAIR,YAAgC,IAAe;IAClE,IAAIA,YAAY,KAAKc,SAAS,IAAId,YAAY,GAAG,CAAC,IAAIA,YAAY,GAAG,EAAE,EAAE;MACvE,OAAO,EAAE;IACX;IAEA,MAAMe,KAAe,GAAG,EAAE;IAC1B,IAAIf,YAAY,GAAG,CAAC,EAAEe,KAAK,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC1C,IAAIhB,YAAY,IAAI,CAAC,EAAEe,KAAK,CAACC,IAAI,CAAC,YAAY,CAAC;IAC/C,IAAIhB,YAAY,IAAI,CAAC,EAAEe,KAAK,CAACC,IAAI,CAAC,WAAW,CAAC;IAC9C,IAAIhB,YAAY,KAAK,EAAE,EAAEe,KAAK,CAACC,IAAI,CAAC,OAAO,CAAC;IAE5C,OAAOD,KAAK;EACd,CAAC;EAED,MAAME,YAAY,GAAIC,KAAgC,IAAK;IACzDd,sBAAsB,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC1Cd,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIhB,OAAO,EAAE;MACX,IAAI;QACF,MAAMiB,SAAS,CAACC,SAAS,CAACC,SAAS,CAACnB,OAAO,CAAC;QAC5CoB,KAAK,CAAC,kDAAkD,CAAC;MAC3D,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;QACnDF,QAAQ,CAACP,KAAK,GAAGf,OAAO;QACxBuB,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACJ,QAAQ,CAAC;QACnCA,QAAQ,CAACK,MAAM,CAAC,CAAC;QACjBJ,QAAQ,CAACK,WAAW,CAAC,MAAM,CAAC;QAC5BL,QAAQ,CAACE,IAAI,CAACI,WAAW,CAACP,QAAQ,CAAC;QACnCF,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF;EACF,CAAC;EAED,MAAMU,cAAc,GAAG3B,WAAW,CAACR,YAAY,CAAC;EAChD,MAAMoC,YAAY,GAAGjC,mBAAmB,GAAGO,mBAAmB,CAACP,mBAAmB,CAAC,GAAG,CAAC;EACvF,MAAMkC,eAAe,GAAGlC,mBAAmB,GAAGM,WAAW,CAACN,mBAAmB,CAAC,GAAG,CAAC;EAClF,MAAMQ,SAAS,GAAGR,mBAAmB,GAAGI,eAAe,CAACJ,mBAAmB,CAAC,GAAG,CAAC;EAEhF,oBACExB,OAAA,CAACH,GAAG;IAAA8D,QAAA,GACDtC,YAAY,GAAG,CAAC,iBACfrB,OAAA,CAACP,UAAU;MAACmE,OAAO,EAAC,OAAO;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,GAAC,SAClC,EAACtC,YAAY,EAAC,sBACvB;IAAA;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CACb,eAEDlE,OAAA,CAACX,WAAW;MAAC8E,SAAS;MAACN,EAAE,EAAE;QAAEO,QAAQ,EAAE,GAAG;QAAEN,EAAE,EAAE;MAAE,CAAE;MAAAH,QAAA,gBAClD3D,OAAA,CAACV,UAAU;QAAC+E,EAAE,EAAC,eAAe;QAAAV,QAAA,EAAC;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC7DlE,OAAA,CAACR,MAAM;QACL8E,OAAO,EAAC,eAAe;QACvB7B,KAAK,EAAEjB,mBAAoB;QAC3B+C,KAAK,EAAC,mBAAmB;QACzBC,QAAQ,EAAElC,YAAa;QACvBmC,QAAQ,EAAEjB,cAAc,CAACxC,MAAM,KAAK,CAAE;QAAA2C,QAAA,EAErCH,cAAc,CAACkB,GAAG,CAAC,CAACC,IAAY,EAAEC,KAAa,KAAK;UACnD,MAAMnC,KAAK,GAAGV,mBAAmB,CAAC4C,IAAI,CAAC;UACvC,MAAM1C,QAAQ,GAAGH,WAAW,CAAC6C,IAAI,CAAC;UAClC,MAAME,IAAI,GAAGjD,eAAe,CAAC+C,IAAI,CAAC;UAElC,oBACE3E,OAAA,CAACT,QAAQ;YAAakD,KAAK,EAAEkC,IAAK;YAAAhB,QAAA,eAChC3D,OAAA,CAACH,GAAG;cAACgE,EAAE,EAAE;gBAAEiB,OAAO,EAAE,MAAM;gBAAEC,cAAc,EAAE,eAAe;gBAAEC,KAAK,EAAE;cAAO,CAAE;cAAArB,QAAA,gBAC3E3D,OAAA;gBAAA2D,QAAA,EAAOgB,IAAI,CAAC/D,MAAM,CAAC,CAAC,CAAC,CAACqE,WAAW,CAAC,CAAC,GAAGN,IAAI,CAACO,KAAK,CAAC,CAAC;cAAC;gBAAAnB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC3DlE,OAAA,CAACH,GAAG;gBAACgE,EAAE,EAAE;kBAAEsB,SAAS,EAAE;gBAAQ,CAAE;gBAAAxB,QAAA,GAC7B1B,QAAQ,GAAG,CAAC,iBACXjC,OAAA,CAACF,IAAI;kBACHyE,KAAK,EAAE,IAAI,CAACtC,QAAQ,GAAG,GAAG,EAAEmD,OAAO,CAAC,CAAC,CAAC,GAAI;kBAC1CC,IAAI,EAAC,OAAO;kBACZC,KAAK,EAAC,SAAS;kBACfzB,EAAE,EAAE;oBAAE0B,EAAE,EAAE;kBAAE;gBAAE;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACf,CACF,eACDlE,OAAA;kBAAMwF,KAAK,EAAE;oBAAEC,UAAU,EAAE;kBAAO,CAAE;kBAAA9B,QAAA,GAAC,KAChC,EAAClB,KAAK,CAAC2C,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAhBOU,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBV,CAAC;QAEf,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAEb1C,mBAAmB,iBAClBxB,OAAA,CAACL,IAAI;MAACkE,EAAE,EAAE;QAAE6B,EAAE,EAAE;MAAE,CAAE;MAAA/B,QAAA,eAClB3D,OAAA,CAACJ,WAAW;QAACiE,EAAE,EAAE;UAAEsB,SAAS,EAAE;QAAS,CAAE;QAAAxB,QAAA,gBACvC3D,OAAA,CAACP,UAAU;UAACmE,OAAO,EAAC,IAAI;UAAC+B,YAAY;UAAAhC,QAAA,GAAC,kBACpB,EAACnC,mBAAmB,CAACZ,MAAM,CAAC,CAAC,CAAC,CAACqE,WAAW,CAAC,CAAC,GAAGzD,mBAAmB,CAAC0D,KAAK,CAAC,CAAC,CAAC;QAAA;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC,EAEZR,eAAe,GAAG,CAAC,iBAClB1D,OAAA,CAACF,IAAI;UACHyE,KAAK,EAAE,aAAa,CAACb,eAAe,GAAG,GAAG,EAAE0B,OAAO,CAAC,CAAC,CAAC,UAAU,CAACpD,SAAS,GAAGyB,YAAY,EAAE2B,OAAO,CAAC,CAAC,CAAC,EAAG;UACxGE,KAAK,EAAC,SAAS;UACfzB,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CACF,eAEDlE,OAAA,CAACP,UAAU;UAACmE,OAAO,EAAC,IAAI;UAAC0B,KAAK,EAAC,SAAS;UAACzB,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAH,QAAA,GAAC,KACnD,EAACF,YAAY,CAAC2B,OAAO,CAAC,CAAC,CAAC;QAAA;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eAGblE,OAAA,CAACH,GAAG;UAACgE,EAAE,EAAE;YAAEC,EAAE,EAAE;UAAE,CAAE;UAAAH,QAAA,eACjB3D,OAAA,CAACZ,SAAS;YACRwG,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,EAAG;YACjDC,QAAQ,EAAC,MAAM;YACfC,IAAI,EAAC,cAAc;YACnBC,GAAG,EAAC,UAAU;YACd9E,MAAM,EAAEqC,YAAa;YACrB0C,aAAa,EAAE,OAAO9F,IAAI,CAACC,GAAG,CAAC,CAAC,EAAG;YACnC8F,OAAO,EAAE,eAAe5E,mBAAmB,EAAG;YAC9C6D,IAAI,EAAE,GAAI;YACVgB,OAAO,EAAC,SAAS;YACjBC,OAAO,EAAC,SAAS;YACjBC,KAAK,EAAC,GAAG;YACTC,aAAa,EAAE,IAAK;YACpBlF,kBAAkB,EAAEK;UAAW;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,4BACkB,EAACxC,OAAO,EAAC,GAGjC,EAACA,OAAO,iBACN1B,OAAA,CAAAE,SAAA;UAAAyD,QAAA,gBACE3D,OAAA,CAACP,UAAU;YAACmE,OAAO,EAAC,OAAO;YAACC,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAAH,QAAA,EAAC;UAE3C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAEblE,OAAA,CAACH,GAAG;YAACgE,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAE,CAAE;YAAAH,QAAA,eACjB3D,OAAA;cACEyC,KAAK,EAAEf,OAAQ;cACf+E,QAAQ;cACRC,IAAI,EAAE,CAAE;cACRlB,KAAK,EAAE;gBACLR,KAAK,EAAE,MAAM;gBACb2B,OAAO,EAAE,MAAM;gBACfC,QAAQ,EAAE,MAAM;gBAChBC,UAAU,EAAE,WAAW;gBACvBC,MAAM,EAAE,gBAAgB;gBACxBC,YAAY,EAAE,KAAK;gBACnBC,MAAM,EAAE,MAAM;gBACdC,eAAe,EAAE;cACnB;YAAE;cAAAlD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENlE,OAAA,CAACN,MAAM;YACLkE,OAAO,EAAC,WAAW;YACnByB,IAAI,EAAC,OAAO;YACZ6B,OAAO,EAAExE,eAAgB;YACzBmB,EAAE,EAAE;cACF6B,EAAE,EAAE,CAAC;cACLqB,YAAY,EAAE,CAAC;cACfI,aAAa,EAAE;YACjB,CAAE;YAAAxD,QAAA,EACH;UAED;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACT,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC/C,EAAA,CAxMWF,aAAqC;EAAA,QAC7B9B,SAAS;AAAA;AAAAiI,EAAA,GADjBnG,aAAqC;AA0MlD,eAAeA,aAAa;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}