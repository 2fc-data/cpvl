{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { QrCodePix } from 'qrcode-pix';\nimport { FormControl, InputLabel, MenuItem, Select, Typography, Button, Card, CardContent, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PaymentQRCode = _ref => {\n  _s();\n  let {\n    valor,\n    totalMissing\n  } = _ref;\n  const {\n    userId\n  } = useParams();\n  const [qrCodeImage, setQrCodeImage] = useState('');\n  const [selectedPaymentType, setSelectedPaymentType] = useState('');\n  const [pixPayload, setPixPayload] = useState('');\n  const [isGeneratingQR, setIsGeneratingQR] = useState(false);\n  const generatePixQRCode = async (paymentType, amount) => {\n    setIsGeneratingQR(true);\n    try {\n      const qrCodePix = QrCodePix({\n        version: '01',\n        key: process.env.REACT_APP_PIX_KEY_CPVL || '',\n        name: 'CLUBE POÇOS CALDENSE DE VÔO LIVRE',\n        city: 'POÇOS DE CALDAS',\n        value: amount,\n        transactionId: `CPVL${userId}_${paymentType}_${Date.now()}`,\n        message: `Mensalidade ${paymentType} - Usuario ${userId}`,\n        cep: '3770101310-100',\n        currency: 986,\n        countryCode: 'BR'\n      });\n\n      // Get the payload for copy-paste\n      const payload = qrCodePix.payload();\n      setPixPayload(payload);\n\n      // Generate QR code image directly using qrcode_pix\n      const qrCodeDataUrl = qrCodePix.base64(); // This generates the base64 image\n      setQrCodeImage(`data:image/png;base64,${qrCodeDataUrl}`);\n    } catch (error) {\n      console.error('Erro ao gerar QR Code PIX:', error);\n    } finally {\n      setIsGeneratingQR(false);\n    }\n  };\n  useEffect(() => {\n    if (selectedPaymentType && valor > 0) {\n      generatePixQRCode(selectedPaymentType, valor);\n    } else {\n      setQrCodeImage('');\n      setPixPayload('');\n    }\n  }, [selectedPaymentType, valor, userId]);\n  const paymentType = totalMissing => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n    const types = [];\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n    return types;\n  };\n  const handleChange = event => {\n    setSelectedPaymentType(event.target.value);\n  };\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pixPayload);\n      alert('Código PIX copiado para a área de transferência!');\n    } catch (err) {\n      console.error('Erro ao copiar:', err);\n      // Fallback para navegadores mais antigos\n      const textArea = document.createElement('textarea');\n      textArea.value = pixPayload;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      alert('Código PIX copiado!');\n    }\n  };\n  const availableTypes = paymentType(totalMissing);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        minWidth: 200,\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"tipoPagamento\",\n        children: \"Tipo do pagamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"tipoPagamento\",\n        value: selectedPaymentType,\n        label: \"Tipo do pagamento\",\n        onChange: handleChange,\n        disabled: availableTypes.length === 0,\n        children: availableTypes.length === 0 ? /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          disabled: true,\n          children: \"Nenhuma op\\xE7\\xE3o dispon\\xEDvel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : availableTypes.map((type, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: type,\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), selectedPaymentType && /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [\"Pagamento PIX - \", selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"primary\",\n          sx: {\n            mb: 2\n          },\n          children: [\"R$ \", valor.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), isGeneratingQR ? /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Gerando QR Code PIX...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this) : qrCodeImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"Escaneie o QR Code com o app do seu banco:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: qrCodeImage,\n              alt: \"QR Code PIX\",\n              style: {\n                maxWidth: '300px',\n                height: 'auto',\n                border: '1px solid #e0e0e0',\n                borderRadius: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: \"Ou copie o c\\xF3digo PIX:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: pixPayload,\n              readOnly: true,\n              rows: 3,\n              style: {\n                width: '100%',\n                padding: '8px',\n                fontSize: '12px',\n                fontFamily: 'monospace',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                resize: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: copyToClipboard,\n            sx: {\n              mt: 1\n            },\n            children: \"\\uD83D\\uDCCB Copiar C\\xF3digo PIX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentQRCode, \"lGjAFNEbexFGf+KKT6tY64K42oU=\", false, function () {\n  return [useParams];\n});\n_c = PaymentQRCode;\nvar _c;\n$RefreshReg$(_c, \"PaymentQRCode\");","map":{"version":3,"names":["React","useEffect","useState","useParams","QrCodePix","FormControl","InputLabel","MenuItem","Select","Typography","Button","Card","CardContent","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","PaymentQRCode","_ref","_s","valor","totalMissing","userId","qrCodeImage","setQrCodeImage","selectedPaymentType","setSelectedPaymentType","pixPayload","setPixPayload","isGeneratingQR","setIsGeneratingQR","generatePixQRCode","paymentType","amount","qrCodePix","version","key","process","env","REACT_APP_PIX_KEY_CPVL","name","city","value","transactionId","Date","now","message","cep","currency","countryCode","payload","qrCodeDataUrl","base64","error","console","undefined","types","push","handleChange","event","target","copyToClipboard","navigator","clipboard","writeText","alert","err","textArea","document","createElement","body","appendChild","select","execCommand","removeChild","availableTypes","children","sx","display","justifyContent","minWidth","mt","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","label","onChange","disabled","length","map","type","index","charAt","toUpperCase","slice","textAlign","variant","gutterBottom","color","mb","toFixed","src","alt","style","maxWidth","height","border","borderRadius","readOnly","rows","width","padding","fontSize","fontFamily","resize","onClick","_c","$RefreshReg$"],"sources":["/home/fernando/Documents/develop/www/cpvl/v4_cpvl_2025/cpvl-spa/src/components/PaymentQRCode/PaymentQRCode.component.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { QrCodePix } from 'qrcode-pix';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n  Button,\n  Card,\n  CardContent,\n  Box\n} from '@mui/material';\n\ninterface PaymentProps {\n  valor: number;\n  totalMissing: number;\n}\n\nexport const PaymentQRCode: React.FC<PaymentProps> = ({ valor, totalMissing }) => {\n  const { userId } = useParams<{ userId: string }>();\n  const [qrCodeImage, setQrCodeImage] = useState<string>('');\n  const [selectedPaymentType, setSelectedPaymentType] = useState<string>('');\n  const [pixPayload, setPixPayload] = useState<string>('');\n  const [isGeneratingQR, setIsGeneratingQR] = useState<boolean>(false);\n\n  const generatePixQRCode = async (paymentType: string, amount: number) => {\n    setIsGeneratingQR(true);\n    \n    try {\n      const qrCodePix = QrCodePix({\n        version: '01',\n        key: process.env.REACT_APP_PIX_KEY_CPVL || '',\n        name: 'CLUBE POÇOS CALDENSE DE VÔO LIVRE',\n        city: 'POÇOS DE CALDAS',\n        value: amount,\n        transactionId: `CPVL${userId}_${paymentType}_${Date.now()}`,\n        message: `Mensalidade ${paymentType} - Usuario ${userId}`,\n        cep: '3770101310-100',\n        currency: 986,\n        countryCode: 'BR'\n      });\n\n      // Get the payload for copy-paste\n      const payload = qrCodePix.payload();\n      setPixPayload(payload);\n\n      // Generate QR code image directly using qrcode_pix\n      const qrCodeDataUrl = qrCodePix.base64(); // This generates the base64 image\n      setQrCodeImage(`data:image/png;base64,${qrCodeDataUrl}`);\n      \n    } catch (error) {\n      console.error('Erro ao gerar QR Code PIX:', error);\n    } finally {\n      setIsGeneratingQR(false);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedPaymentType && valor > 0) {\n      generatePixQRCode(selectedPaymentType, valor);\n    } else {\n      setQrCodeImage('');\n      setPixPayload('');\n    }\n  }, [selectedPaymentType, valor, userId]);\n\n  const paymentType = (totalMissing: number | undefined): string[] => {\n    if (totalMissing === undefined || totalMissing < 0 || totalMissing > 12) {\n      return [];\n    }\n\n    const types: string[] = [];\n\n    if (totalMissing > 0) types.push('mensal');\n    if (totalMissing >= 3) types.push('trimestral');\n    if (totalMissing >= 6) types.push('semestral');\n    if (totalMissing === 12) types.push('anual');\n\n    return types;\n  };\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    setSelectedPaymentType(event.target.value);\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(pixPayload);\n      alert('Código PIX copiado para a área de transferência!');\n    } catch (err) {\n      console.error('Erro ao copiar:', err);\n      // Fallback para navegadores mais antigos\n      const textArea = document.createElement('textarea');\n      textArea.value = pixPayload;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      alert('Código PIX copiado!');\n    }\n  };\n\n  const availableTypes = paymentType(totalMissing);\n\n  return (\n    <Box>      \n      <FormControl sx={{ display: 'flex', justifyContent: 'center', minWidth: 200, mt: 2 }}>\n        <InputLabel id=\"tipoPagamento\">Tipo do pagamento</InputLabel>\n        <Select\n          labelId=\"tipoPagamento\"\n          value={selectedPaymentType}\n          label=\"Tipo do pagamento\"\n          onChange={handleChange}\n          disabled={availableTypes.length === 0}\n        >\n          {availableTypes.length === 0 ? (\n            <MenuItem value=\"\" disabled>\n              Nenhuma opção disponível\n            </MenuItem>\n          ) : (\n            availableTypes.map((type: string, index: number) => (\n              <MenuItem key={index} value={type}>\n                {type.charAt(0).toUpperCase() + type.slice(1)}\n              </MenuItem>\n            ))\n          )}\n        </Select>\n      </FormControl>\n      \n      {selectedPaymentType && (\n        <Card sx={{ mt: 2 }}>\n          <CardContent sx={{ textAlign: 'center' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Pagamento PIX - {selectedPaymentType.charAt(0).toUpperCase() + selectedPaymentType.slice(1)}\n            </Typography>\n            \n            <Typography variant=\"h5\" color=\"primary\" sx={{ mb: 2 }}>\n              R$ {valor.toFixed(2)}\n            </Typography>\n            \n            {isGeneratingQR ? (\n              <Typography>Gerando QR Code PIX...</Typography>\n            ) : qrCodeImage ? (\n              <>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Escaneie o QR Code com o app do seu banco:\n                </Typography>\n                \n                <Box sx={{ mb: 2 }}>\n                  <img \n                    src={qrCodeImage} \n                    alt=\"QR Code PIX\"\n                    style={{ \n                      maxWidth: '300px', \n                      height: 'auto',\n                      border: '1px solid #e0e0e0',\n                      borderRadius: '8px'\n                    }}\n                  />\n                </Box>\n                \n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Ou copie o código PIX:\n                </Typography>\n                \n                <Box sx={{ mb: 2 }}>\n                  <textarea\n                    value={pixPayload}\n                    readOnly\n                    rows={3}\n                    style={{\n                      width: '100%',\n                      padding: '8px',\n                      fontSize: '12px',\n                      fontFamily: 'monospace',\n                      border: '1px solid #ddd',\n                      borderRadius: '4px',\n                      resize: 'none'\n                    }}\n                  />\n                </Box>\n                \n                <Button \n                  variant=\"contained\" \n                  onClick={copyToClipboard}\n                  sx={{ mt: 1 }}\n                >\n                  📋 Copiar Código PIX\n                </Button>\n              </>\n            ) : null}\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}